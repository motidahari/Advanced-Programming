{"ast":null,"code":"import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\nconst employees = {\n  addEmployee: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(employee)\n    };\n    const result = fetchData(requests.Employees.AddEmployee, requestOptions);\n    return result;\n  },\n  deleteEmployeeById: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(employee)\n    };\n    const result = fetchData(requests.Employees.DeleteEmployee, requestOptions);\n    return result;\n  },\n  getAllEmployees: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Employees.GetEmployees, requestOptions);\n    return result;\n  },\n  updateEmployee: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(employee)\n    };\n    const result = fetchData(requests.Employees.UpdateEmployee, requestOptions);\n    return result;\n  },\n  getEmployeesByParams: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(employee)\n    };\n    const result = fetchData(requests.Employees.GetEmployeesByParams, requestOptions);\n    return result;\n  }\n};\nexport default employees;","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/requests/employees.js"],"names":["requests","fetchData","employees","addEmployee","userAction","employee","requestOptions","method","headers","token","userId","body","JSON","stringify","result","Employees","AddEmployee","deleteEmployeeById","DeleteEmployee","getAllEmployees","GetEmployees","updateEmployee","UpdateEmployee","getEmployeesByParams","GetEmployeesByParams"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AAC3C,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBJ,UAAU,CAACK,KAFpB;AAGPC,QAAAA,MAAM,EAAEN,UAAU,CAACM;AAHZ,OAFY;AAOrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPe,KAAvB;AASA,UAAMS,MAAM,GAAGb,SAAS,CAACD,QAAQ,CAACe,SAAT,CAAmBC,WAApB,EAAiCV,cAAjC,CAAxB;AACA,WAAOQ,MAAP;AACD,GAbe;AAehBG,EAAAA,kBAAkB,EAAE,OAAOb,UAAP,EAAmBC,QAAnB,KAAgC;AAClD,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,QADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBJ,UAAU,CAACK,KAFpB;AAGPC,QAAAA,MAAM,EAAEN,UAAU,CAACM;AAHZ,OAFY;AAOrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPe,KAAvB;AASA,UAAMS,MAAM,GAAGb,SAAS,CAACD,QAAQ,CAACe,SAAT,CAAmBG,cAApB,EAAoCZ,cAApC,CAAxB;AACA,WAAOQ,MAAP;AACD,GA3Be;AA6BhBK,EAAAA,eAAe,EAAE,MAAMf,UAAN,IAAoB;AACnC,UAAME,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBJ,UAAU,CAACK,KAFpB;AAGPC,QAAAA,MAAM,EAAEN,UAAU,CAACM;AAHZ;AAFY,KAAvB;AAQA,UAAMI,MAAM,GAAGb,SAAS,CAACD,QAAQ,CAACe,SAAT,CAAmBK,YAApB,EAAkCd,cAAlC,CAAxB;AACA,WAAOQ,MAAP;AACD,GAxCe;AA0ChBO,EAAAA,cAAc,EAAE,OAAOjB,UAAP,EAAmBC,QAAnB,KAAgC;AAC9C,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBJ,UAAU,CAACK,KAFpB;AAGPC,QAAAA,MAAM,EAAEN,UAAU,CAACM;AAHZ,OAFY;AAOrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPe,KAAvB;AASA,UAAMS,MAAM,GAAGb,SAAS,CAACD,QAAQ,CAACe,SAAT,CAAmBO,cAApB,EAAoChB,cAApC,CAAxB;AACA,WAAOQ,MAAP;AACD,GAtDe;AAwDhBS,EAAAA,oBAAoB,EAAE,OAAOnB,UAAP,EAAmBC,QAAnB,KAAgC;AACpD,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBJ,UAAU,CAACK,KAFpB;AAGPC,QAAAA,MAAM,EAAEN,UAAU,CAACM;AAHZ,OAFY;AAOrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPe,KAAvB;AASA,UAAMS,MAAM,GAAGb,SAAS,CACtBD,QAAQ,CAACe,SAAT,CAAmBS,oBADG,EAEtBlB,cAFsB,CAAxB;AAIA,WAAOQ,MAAP;AACD;AAvEe,CAAlB;AA0EA,eAAeZ,SAAf","sourcesContent":["import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\n\nconst employees = {\n  addEmployee: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(employee),\n    };\n    const result = fetchData(requests.Employees.AddEmployee, requestOptions);\n    return result;\n  },\n\n  deleteEmployeeById: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(employee),\n    };\n    const result = fetchData(requests.Employees.DeleteEmployee, requestOptions);\n    return result;\n  },\n\n  getAllEmployees: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(requests.Employees.GetEmployees, requestOptions);\n    return result;\n  },\n\n  updateEmployee: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(employee),\n    };\n    const result = fetchData(requests.Employees.UpdateEmployee, requestOptions);\n    return result;\n  },\n\n  getEmployeesByParams: async (userAction, employee) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(employee),\n    };\n    const result = fetchData(\n      requests.Employees.GetEmployeesByParams,\n      requestOptions\n    );\n    return result;\n  },\n};\n\nexport default employees;\n"]},"metadata":{},"sourceType":"module"}