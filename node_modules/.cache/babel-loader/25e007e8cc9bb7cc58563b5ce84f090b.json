{"ast":null,"code":"import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\nconst users = {\n  registration: async userData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    };\n    const result = fetchData(requests.Users.Registration, requestOptions);\n    return result;\n  },\n  login: async userData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    };\n    const result = fetchData(requests.Users.Login, requestOptions);\n    return result;\n  },\n  deleteUser: async (userAction, userData) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(userData)\n    };\n    const result = fetchData(requests.Users.DeleteUserByID, requestOptions);\n    return result;\n  },\n  updateUser: async (userAction, userData) => {\n    console.log('userData', userData);\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(userData)\n    };\n    const result = fetchData(requests.Users.UpdateUser, requestOptions);\n    return result;\n  },\n  getUnapprovedUsers: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Users.GetUnapprovedUsers, requestOptions);\n    return result;\n  },\n  getAllUsers: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Users.GetAllUsers, requestOptions);\n    return result;\n  },\n  confirmUser: async (userAction, userData) => {\n    console.log('userData', userData);\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(userData)\n    };\n    const result = fetchData(requests.Users.ConfirmUser, requestOptions);\n    return result;\n  }\n};\nexport default users;","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/requests/users.js"],"names":["requests","fetchData","users","registration","userData","requestOptions","method","headers","body","JSON","stringify","result","Users","Registration","login","Login","deleteUser","userAction","token","userId","DeleteUserByID","updateUser","console","log","UpdateUser","getUnapprovedUsers","GetUnapprovedUsers","getAllUsers","GetAllUsers","confirmUser","ConfirmUser"],"mappings":"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","sourcesContent":["import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\n\nconst users = {\n  registration: async userData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    };\n    const result = fetchData(requests.Users.Registration, requestOptions);\n    return result;\n  },\n\n  login: async userData => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    };\n    const result = fetchData(requests.Users.Login, requestOptions);\n    return result;\n  },\n\n  deleteUser: async (userAction, userData) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(userData),\n    };\n    const result = fetchData(requests.Users.DeleteUserByID, requestOptions);\n    return result;\n  },\n\n  updateUser: async (userAction, userData) => {\n    console.log('userData', userData);\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(userData),\n    };\n    const result = fetchData(requests.Users.UpdateUser, requestOptions);\n    return result;\n  },\n\n  getUnapprovedUsers: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(requests.Users.GetUnapprovedUsers, requestOptions);\n    return result;\n  },\n\n  getAllUsers: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(requests.Users.GetAllUsers, requestOptions);\n    return result;\n  },\n\n  confirmUser: async (userAction, userData) => {\n    console.log('userData', userData);\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(userData),\n    };\n    const result = fetchData(requests.Users.ConfirmUser, requestOptions);\n    return result;\n  },\n};\n\nexport default users;\n"]},"metadata":{},"sourceType":"module"}