{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Employees/EditEmployeeModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField, MenuItem, ListSubheader } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport employees from '../../requests/employees';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport StyledModal from '../../components/StyledModal';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditEmployeeModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    employee,\n    allOffices,\n    fetchData\n  } = _ref;\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const [office, setOffice] = useState('');\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values,\n    setValues\n  } = useForm(editEmployeeCallback, {\n    employeeId: '',\n    employeeName: '',\n    officeId: '',\n    desktopComputer: '0',\n    dockingStation: '0',\n    headset: '0',\n    ipPhone: '0',\n    laptop: '0',\n    printer: '0',\n    screen: '0',\n    tv: '0',\n    webCamera: '0'\n  });\n  useEffect(() => {\n    setValues(employee);\n    setOffice(employee.officeId);\n  }, [employee]);\n\n  const editEmployee = async () => {\n    let err = false;\n\n    if (values.employeeName.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include employee name for employee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n      err = true;\n    }\n\n    if (values.officeId.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include office for employee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (!err) {\n      const resultEditEmployee = await employees.updateEmployee(userAction, values); // console.log('resultEditEmployee', resultEditEmployee);\n\n      if (resultEditEmployee !== null && resultEditEmployee !== void 0 && resultEditEmployee.errors) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this));\n      } else {\n        toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Employee edited'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }, this));\n        fetchData();\n        close();\n      }\n    }\n  };\n\n  function editEmployeeCallback() {\n    editEmployee();\n  } // console.log('values', values);\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(StyledModal, {\n      submitText: 'Save details',\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: \"Edit Employee\",\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            onChange: onChange,\n            value: values.employeeName,\n            variant: \"outlined\",\n            name: \"employeeName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n            label: 'Select Office',\n            value: office,\n            onChange: event => {\n              setFieldValue('officeId', event.target.value);\n              setOffice(event.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Select Office\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), allOffices ? allOffices.map(office => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: office.officeId,\n              children: office.officeName\n            }, office.officeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Screens\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.screen,\n            variant: \"outlined\",\n            name: \"screen\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"TVs\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.tv,\n            variant: \"outlined\",\n            name: \"tv\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Docking Stations\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.dockingStation,\n            variant: \"outlined\",\n            name: \"dockingStation\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"IP Phones\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.ipPhone,\n            variant: \"outlined\",\n            name: \"ipPhone\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Desktop Computers\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.desktopComputer,\n            variant: \"outlined\",\n            name: \"desktopComputer\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Laptops\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.laptop,\n            variant: \"outlined\",\n            name: \"laptop\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Printers\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.printer,\n            variant: \"outlined\",\n            name: \"printer\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Headsets\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.headset,\n            variant: \"outlined\",\n            name: \"headset\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Web Cameras\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.webCamera,\n            variant: \"outlined\",\n            name: \"webCamera\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditEmployeeModal, \"Q7fC0wjDd3qgtnXFhadg1Mk5Vg0=\", false, function () {\n  return [useForm];\n});\n\n_c = EditEmployeeModal;\nexport default EditEmployeeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEmployeeModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Employees/EditEmployeeModal.jsx"],"names":["React","useContext","useState","useEffect","AuthContext","Modal","Grid","TextField","MenuItem","ListSubheader","ModalHeader","useForm","employees","TextFieldSelect","StyledModal","toast","Notification","EditEmployeeModal","open","close","employee","allOffices","fetchData","user","token","userAction","userId","id","office","setOffice","onChange","onSubmit","setFieldValue","values","setValues","editEmployeeCallback","employeeId","employeeName","officeId","desktopComputer","dockingStation","headset","ipPhone","laptop","printer","screen","tv","webCamera","editEmployee","err","length","error","resultEditEmployee","updateEmployee","errors","success","event","target","value","map","officeName","inputProps","min"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField, MenuItem, ListSubheader } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport employees from '../../requests/employees';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport StyledModal from '../../components/StyledModal';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\n\nconst EditEmployeeModal = ({\n  open,\n  close,\n  employee,\n  allOffices,\n  fetchData,\n}) => {\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n  const [office, setOffice] = useState('');\n\n  const { onChange, onSubmit, setFieldValue, values, setValues } = useForm(\n    editEmployeeCallback,\n    {\n      employeeId: '',\n      employeeName: '',\n      officeId: '',\n      desktopComputer: '0',\n      dockingStation: '0',\n      headset: '0',\n      ipPhone: '0',\n      laptop: '0',\n      printer: '0',\n      screen: '0',\n      tv: '0',\n      webCamera: '0',\n    }\n  );\n\n  useEffect(() => {\n    setValues(employee);\n    setOffice(employee.officeId);\n  }, [employee]);\n\n  const editEmployee = async () => {\n    let err = false;\n    if (values.employeeName.length === 0) {\n      toast.error(\n        <Notification text={'Please include employee name for employee'} />\n      );\n      err = true;\n    }\n    if (values.officeId.length === 0) {\n      toast.error(<Notification text={'Please include office for employee'} />);\n      err = true;\n    }\n\n    if (!err) {\n      const resultEditEmployee = await employees.updateEmployee(\n        userAction,\n        values\n      );\n      // console.log('resultEditEmployee', resultEditEmployee);\n      if (resultEditEmployee?.errors) {\n        toast.error(<Notification text={'error'} />);\n      } else {\n        toast.success(<Notification text={'Employee edited'} />);\n        fetchData();\n        close();\n      }\n    }\n  };\n\n  function editEmployeeCallback() {\n    editEmployee();\n  }\n\n  // console.log('values', values);\n\n  return (\n    <Modal open={open} onClose={close}>\n      <StyledModal submitText={'Save details'} onSubmit={onSubmit}>\n        <ModalHeader title=\"Edit Employee\" close={close} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              onChange={onChange}\n              value={values.employeeName}\n              variant=\"outlined\"\n              name=\"employeeName\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextFieldSelect\n              label={'Select Office'}\n              value={office}\n              onChange={event => {\n                setFieldValue('officeId', event.target.value);\n                setOffice(event.target.value);\n              }}\n            >\n              <ListSubheader>Select Office</ListSubheader>\n              {allOffices\n                ? allOffices.map(office => (\n                    <MenuItem key={office.officeId} value={office.officeId}>\n                      {office.officeName}\n                    </MenuItem>\n                  ))\n                : null}\n            </TextFieldSelect>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Screens\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.screen}\n              variant=\"outlined\"\n              name=\"screen\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"TVs\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.tv}\n              variant=\"outlined\"\n              name=\"tv\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Docking Stations\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.dockingStation}\n              variant=\"outlined\"\n              name=\"dockingStation\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"IP Phones\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.ipPhone}\n              variant=\"outlined\"\n              name=\"ipPhone\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Desktop Computers\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.desktopComputer}\n              variant=\"outlined\"\n              name=\"desktopComputer\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Laptops\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.laptop}\n              variant=\"outlined\"\n              name=\"laptop\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Printers\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.printer}\n              variant=\"outlined\"\n              name=\"printer\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Headsets\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.headset}\n              variant=\"outlined\"\n              name=\"headset\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Web Cameras\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.webCamera}\n              variant=\"outlined\"\n              name=\"webCamera\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </StyledModal>\n    </Modal>\n  );\n};\n\nexport default EditEmployeeModal;\n"]},"metadata":{},"sourceType":"module"}