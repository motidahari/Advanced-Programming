{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/test/client/src/App.js\";\nimport React from 'react';\nimport MediaCard from './MediaCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomPointer = () => {\n  return parseInt(Math.random() * 20);\n};\n\nconst getRandom2Exponent = max => {\n  return parseInt(Math.random() * max);\n};\n\nconst getPow = pow => {\n  return Math.pow(2, pow);\n};\n\nconst hex2bin = hex => {\n  return '00' + parseInt(hex, 16).toString(2);\n};\n\nconst random_hex = () => {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return n.slice(0, 6);\n};\n\nconst random_decimal = () => {\n  return Math.floor(10000000 + Math.random() * 90000000);\n};\n\nconst xor = (a, b, n) => {\n  let ans = \"\";\n\n  for (let i = 0; i < n; i++) {\n    if (a[i] == b[i]) ans += \"0\";else ans += \"1\";\n  }\n\n  return ans;\n};\n\nconst q1 = () => {\n  let expNume = getRandom2Exponent(14);\n  let expResult = getPow(expNume);\n  const Qnumber = 1;\n  const RandomPointer1 = getRandomPointer();\n  const RandomPointer2 = getRandomPointer();\n  const numPoiners = expResult / 4;\n  let q = `גודל בלוק הוא ${expResult} = ${expNume}^2 ומצביע הוא בגודל 4 בתים.\n  ישנם ${RandomPointer1} מצביעים ישירים ו-${RandomPointer2} מצביעים עקיפים מסוג single indirect\n  מהוא גודל הקובץ המקסימלי במערכת קבצים זו?  \n  `;\n  const answer = `(${RandomPointer1} + ${RandomPointer2} * ${numPoiners}) * ${expResult} = ` + (RandomPointer1 + RandomPointer2 * numPoiners) * expResult;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nconst q2 = () => {\n  const Qnumber = 2;\n  const val1 = random_hex();\n  const val2 = random_hex();\n  const pri = random_hex();\n  const binVal1 = hex2bin(val1);\n  const binVal2 = hex2bin(val2);\n  const binPri = hex2bin(pri);\n  let q = `RAID4/RAID5\n  גודל כל בלוק הוא בית אחד(8 ביטים)\n  נניח שבלוק הנתונים הכיל 0x${val1} ושינו אותו ל-0x${val2}\n  אם בלוק הזוגיות הכיל 0x${pri} מה הוא יכול אחרי השינוי בבלוק?\n  `;\n  let a = 0;\n  let answer = ` hex(${val1}) = bin(${binVal1})    |    hex(${val2}) = bin(${binVal2})    |    hex(${pri}) = bin(${binPri})   |   \n  ${binVal1} xor ${binVal2} = ${a = xor('' + binVal1, '' + binVal2, Math.min(binVal1.length, binVal2.length))}    |   \n  ${binPri} xor ${a} = ${a = xor('' + a, '' + binPri, Math.min(a.length, binPri.length))}   |   \n  `;\n  let part1 = a.slice(0, 4);\n  let part2 = a.slice(4, a.length);\n  answer += `result = 0x${parseInt(part1, 2)}${parseInt(part2, 2)}`;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nconst q3 = () => {\n  const Qnumber = 3;\n  let expNume = getRandom2Exponent(14);\n  let expResult = getPow(expNume);\n  const val1 = random_decimal();\n  const binVal1 = hex2bin(val1);\n  let str1 = '' + binVal1;\n  let str2 = '' + binVal1;\n  let str3 = '' + binVal1;\n  let part1 = str1.slice(0, expNume);\n  let part2 = str2.slice(expNume, expNume * 2);\n  let part3 = str3.slice(expNume * 2, str3.length);\n  let q = `בטבלת דפים עם 2 רמות ישנה טבלה עליונה של מצביעים לטבלאות ברמה השנייה\n  גטדל כתובת הוא 32 ביטים\n  הטבלה ברמה העליונה וכן כל האחת מהטבלאות ברמה השנייה מכילות ${expResult} = ${expNume}^2 שורות כל אחת\n  מהו המרחק offset. בדף אם כתובת הנתון היא 0x${val1}\n  `;\n  let answer = `log_2(${expResult}) = ${expNume}   |   \n  bin(${val1}) = ${binVal1}   |    \n  offset = ${part3}   |   s = ${part2}   |   m-(s+offset) = ${part1}   |   \n  offsetToDecimal(${part3}) = ${parseInt(part3, 2)}\n  `;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nconst q4 = () => {\n  const Qnumber = 4;\n  const sizeBlock = 64;\n  const logSizeBlock = 6;\n  let expNume = getRandom2Exponent(14);\n  let expResult = getPow(expNume);\n  const val1 = random_decimal();\n  const binVal1 = hex2bin(val1);\n  let str1 = '' + binVal1;\n  let str2 = '' + binVal1;\n  let str3 = '' + binVal1;\n  const part1 = str1.slice(str1.length - logSizeBlock, str1.length);\n  const part2 = str1.slice(str1.length - logSizeBlock - expNume, str1.length - logSizeBlock);\n  const part3 = str1.slice(str1.length - logSizeBlock, str1.length);\n  let q = `במטמון מיפוי ישיר ישנם ${expResult} = ${expNume}^2  בלוקים\n  כל בלוק בגודל ${sizeBlock} = ${logSizeBlock}^2  בתים.\n  נניח שהמעבד מבצע פקודה שקוראת נתון מכתובת 0X${val1}\n  מהו מספר הבלוק שבו החומרה (MMU) תחפש את הנתון?`;\n  let answer = `log_2(${expResult}) = ${expNume}   |   \n  bin(${val1}) = ${binVal1}   |    \n  offset = ${part1}    |    \n  numBlockInBin = ${part2}   |   \n  numBlockInNumber = ${parseInt(part2, 2)}\n   `;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nlet Q = [q1(), q2(), q3(), q4()];\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Q.length > 0 && Q.map(q => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MediaCard, {\n          q: q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/motidahari/projects/test/client/src/App.js"],"names":["React","MediaCard","getRandomPointer","parseInt","Math","random","getRandom2Exponent","max","getPow","pow","hex2bin","hex","toString","random_hex","n","slice","random_decimal","floor","xor","a","b","ans","i","q1","expNume","expResult","Qnumber","RandomPointer1","RandomPointer2","numPoiners","q","answer","result","q2","val1","val2","pri","binVal1","binVal2","binPri","min","length","part1","part2","q3","str1","str2","str3","part3","q4","sizeBlock","logSizeBlock","Q","App","map","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MediaCard from './MediaCard';\n\nconst getRandomPointer = () => {\n  return parseInt(Math.random() * 20);\n}\nconst getRandom2Exponent = (max) => {\n  return parseInt(Math.random() * max);\n}\nconst getPow = (pow) => {\n  return Math.pow(2, pow)\n}\nconst hex2bin = (hex) => {\n  return ('00' + (parseInt(hex, 16)).toString(2));\n}\nconst random_hex = () => {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return n.slice(0, 6);\n};\nconst random_decimal = () => {\n  return Math.floor(10000000 + Math.random() * 90000000);\n}\nconst xor = (a, b, n) => {\n  let ans = \"\";\n  for (let i = 0; i < n; i++) {\n    if (a[i] == b[i])\n      ans += \"0\";\n    else\n      ans += \"1\";\n  }\n  return ans;\n}\n\nconst q1 = () => {\n  let expNume = getRandom2Exponent(14);\n  let expResult = getPow(expNume);\n  const Qnumber = 1;\n  const RandomPointer1 = getRandomPointer();\n  const RandomPointer2 = getRandomPointer();\n  const numPoiners = expResult / 4;\n  let q = `גודל בלוק הוא ${expResult} = ${expNume}^2 ומצביע הוא בגודל 4 בתים.\n  ישנם ${RandomPointer1} מצביעים ישירים ו-${RandomPointer2} מצביעים עקיפים מסוג single indirect\n  מהוא גודל הקובץ המקסימלי במערכת קבצים זו?  \n  `;\n  const answer = `(${RandomPointer1} + ${RandomPointer2} * ${numPoiners}) * ${expResult} = ` + ((RandomPointer1 + (RandomPointer2 * numPoiners)) * expResult);\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\nconst q2 = () => {\n  const Qnumber = 2;\n  const val1 = random_hex();\n  const val2 = random_hex();\n  const pri = random_hex();\n  const binVal1 = hex2bin(val1);\n  const binVal2 = hex2bin(val2);\n  const binPri = hex2bin(pri);\n  let q = `RAID4/RAID5\n  גודל כל בלוק הוא בית אחד(8 ביטים)\n  נניח שבלוק הנתונים הכיל 0x${val1} ושינו אותו ל-0x${val2}\n  אם בלוק הזוגיות הכיל 0x${pri} מה הוא יכול אחרי השינוי בבלוק?\n  `;\n\n  let a = 0;\n  let answer = ` hex(${val1}) = bin(${binVal1})    |    hex(${val2}) = bin(${binVal2})    |    hex(${pri}) = bin(${binPri})   |   \n  ${binVal1} xor ${binVal2} = ${(a = xor('' + binVal1, '' + binVal2, Math.min(binVal1.length, binVal2.length)))}    |   \n  ${binPri} xor ${a} = ${(a = xor('' + a, '' + binPri, Math.min(a.length, binPri.length)))}   |   \n  `;\n  let part1 = a.slice(0, 4);\n  let part2 = a.slice(4, a.length);\n  answer += `result = 0x${parseInt(part1, 2)}${parseInt(part2, 2)}`;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\nconst q3 = () => {\n  const Qnumber = 3;\n  let expNume = getRandom2Exponent(14);\n  let expResult = getPow(expNume);\n  const val1 = random_decimal();\n  const binVal1 = hex2bin(val1);\n\n  let str1 = '' + binVal1;\n  let str2 = '' + binVal1;\n  let str3 = '' + binVal1;\n  let part1 = str1.slice(0, expNume);\n  let part2 = str2.slice(expNume, expNume * 2);\n  let part3 = str3.slice(expNume * 2, str3.length);\n\n  let q = `בטבלת דפים עם 2 רמות ישנה טבלה עליונה של מצביעים לטבלאות ברמה השנייה\n  גטדל כתובת הוא 32 ביטים\n  הטבלה ברמה העליונה וכן כל האחת מהטבלאות ברמה השנייה מכילות ${expResult} = ${expNume}^2 שורות כל אחת\n  מהו המרחק offset. בדף אם כתובת הנתון היא 0x${val1}\n  `;\n\n\n  let answer = `log_2(${expResult}) = ${expNume}   |   \n  bin(${val1}) = ${binVal1}   |    \n  offset = ${part3}   |   s = ${part2}   |   m-(s+offset) = ${part1}   |   \n  offsetToDecimal(${part3}) = ${parseInt(part3, 2)}\n  `;\n\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\nconst q4 = () => {\n  const Qnumber = 4;\n  const sizeBlock = 64;\n  const logSizeBlock = 6;\n  let expNume = getRandom2Exponent(14);\n  let expResult = getPow(expNume);\n  const val1 = random_decimal();\n  const binVal1 = hex2bin(val1);\n\n  let str1 = '' + binVal1;\n  let str2 = '' + binVal1;\n  let str3 = '' + binVal1;\n  const part1 = str1.slice(str1.length - logSizeBlock, str1.length);\n  const part2 = str1.slice(str1.length - logSizeBlock - expNume, str1.length - logSizeBlock);\n  const part3 = str1.slice(str1.length - logSizeBlock, str1.length);\n\n  let q = `במטמון מיפוי ישיר ישנם ${expResult} = ${expNume}^2  בלוקים\n  כל בלוק בגודל ${sizeBlock} = ${logSizeBlock}^2  בתים.\n  נניח שהמעבד מבצע פקודה שקוראת נתון מכתובת 0X${val1}\n  מהו מספר הבלוק שבו החומרה (MMU) תחפש את הנתון?`;\n\n\n  let answer = `log_2(${expResult}) = ${expNume}   |   \n  bin(${val1}) = ${binVal1}   |    \n  offset = ${part1}    |    \n  numBlockInBin = ${part2}   |   \n  numBlockInNumber = ${parseInt(part2, 2)}\n   `;\n\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\nlet Q = [\n  q1(),\n  q2(),\n  q3(),\n  q4(),\n];\n\nconst App = () => {\n  return (\n    <div>\n      {Q.length > 0 && Q.map((q) => {\n        return (<div style={{ marginTop: '20px' }}>\n          <MediaCard q={q} />\n        </div>)\n      })}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}