{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Products/ProductsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Box, Button, MenuItem, TextField, Typography, Grid, ListSubheader } from '@mui/material';\nimport { useForm } from '../../hooks/useForm';\nimport products from './../../requests/products';\nimport ProductsTable from './ProductsTable';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PageContainer from '../../components/PageContainer';\nimport AddProductsModal from './AddProductsModal';\nimport locations from '../../requests/locations';\nimport { useFetchData } from '../../hooks/useFetchData'; //csv\n\nimport { CSVLink } from 'react-csv';\nimport { ExportDataContext } from './../../context/DataExport';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport Banner from '../../components/Banner';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport GapsTable from './GapsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductsPage = () => {\n  _s();\n\n  const [warehouse, setWarehouse] = useState('');\n  const [country, setCountry] = useState('');\n  const [addModal, setAddModal] = useState(false);\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    headers,\n    fileName,\n    data,\n    changeDataExport\n  } = useContext(ExportDataContext);\n  const {\n    headers: headersGaps,\n    fileName: fileNameGaps,\n    data: dataGaps,\n    changeDataExport: changeDataExportGaps\n  } = useContext(ExportDataContext);\n  const {\n    state: allproducts,\n    error,\n    fetchData,\n    setState\n  } = useFetchData(products.getAllProducts); // console.log('allproducts', allproducts);\n\n  const {\n    state: allCountries\n  } = useFetchData(locations.getAllCountries); // console.log('allCountries', allCountries);\n\n  const {\n    state: allLocations,\n    setState: setLocationState\n  } = useFetchData(locations.getAllLocations); // console.log('allLocations', allLocations);\n\n  const getLocationByCountry = async countryId => {\n    const country = {\n      countryId: countryId\n    }; // console.log('country', country);\n\n    const result = await locations.getLocationsByCountryId(userAction, country);\n\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n\n  useEffect(() => {\n    if (country.length !== 0) {\n      getLocationByCountry(country);\n    } else {\n      setLocationState(locations.getAllLocations(userAction));\n    }\n  }, [country]);\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values\n  } = useForm(searchCallback, {\n    locationId: '',\n    countryId: '',\n    search: ''\n  });\n\n  const searchProduct = async () => {\n    // console.log('values', values);\n    const resultSearchProduct = await products.getProductByParams(userAction, values);\n    setState(resultSearchProduct); // console.log('resultSearchProduct', resultSearchProduct);\n  };\n\n  function searchCallback() {\n    searchProduct();\n  }\n\n  useEffect(() => {\n    changeDataExport('Products', allproducts);\n  }, [allproducts]);\n\n  const handleAddModal = () => {\n    setAddModal(!addModal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeaderContainer, {\n        children: [country ? /*#__PURE__*/_jsxDEV(Banner, {\n          country: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Banner, {\n          country: ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            m: 1\n          },\n          variant: \"h4\",\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 1\n          },\n          children: [fileName && headers && data ? /*#__PURE__*/_jsxDEV(CSVLink, {\n            style: {\n              textDecoration: 'none',\n              color: '#3F3FBE'\n            },\n            filename: fileName,\n            data: data,\n            headers: headers,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 30\n              }, this),\n              sx: {\n                mr: 1\n              },\n              children: \"Export To Excel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : null, (user === null || user === void 0 ? void 0 : user.permission) !== 'Viewer' ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddModal,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Product\",\n              onChange: onChange,\n              value: values.search,\n              variant: \"outlined\",\n              name: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: country,\n              onChange: event => {\n                setFieldValue('countryId', event.target.value);\n                setCountry(event.target.value);\n              },\n              label: 'Select country',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), allCountries ? allCountries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.countryId,\n                children: country.countryName\n              }, country.countryId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: warehouse,\n              onChange: event => {\n                setFieldValue('locationId', event.target.value);\n                setWarehouse(event.target.value);\n              },\n              label: 'Select Location',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), allLocations ? allLocations === null || allLocations === void 0 ? void 0 : allLocations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: location.locationId,\n                children: location.locationName\n              }, location.locationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            sx: {\n              alignSelf: 'center'\n            },\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"outlined\",\n              onClick: onSubmit,\n              sx: {\n                p: '14px'\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), allproducts ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProductsTable, {\n          error: error,\n          fetchData: fetchData,\n          allproducts: allproducts // allLocations={allLocations}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddProductsModal, {\n          fetchData: fetchData,\n          open: addModal,\n          close: handleAddModal // allLocations={allLocations}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : null, warehouse ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(GapsTable, {\n            warehouse: warehouse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductsPage, \"KaYBigQSwXksBW+pnX5Wt7o0Y8k=\", false, function () {\n  return [useFetchData, useFetchData, useFetchData, useForm];\n});\n\n_c = ProductsPage;\nexport default ProductsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Products/ProductsPage.jsx"],"names":["React","useState","useContext","useEffect","AuthContext","Box","Button","MenuItem","TextField","Typography","Grid","ListSubheader","useForm","products","ProductsTable","DownloadIcon","PageContainer","AddProductsModal","locations","useFetchData","CSVLink","ExportDataContext","TextFieldSelect","Banner","PageHeaderContainer","GapsTable","ProductsPage","warehouse","setWarehouse","country","setCountry","addModal","setAddModal","user","token","userAction","userId","id","headers","fileName","data","changeDataExport","headersGaps","fileNameGaps","dataGaps","changeDataExportGaps","state","allproducts","error","fetchData","setState","getAllProducts","allCountries","getAllCountries","allLocations","setLocationState","getAllLocations","getLocationByCountry","countryId","result","getLocationsByCountryId","length","onChange","onSubmit","setFieldValue","values","searchCallback","locationId","search","searchProduct","resultSearchProduct","getProductByParams","handleAddModal","m","textDecoration","color","mr","permission","mt","event","target","value","map","countryName","location","locationName","alignSelf","p"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport {\n  Box,\n  Button,\n  MenuItem,\n  TextField,\n  Typography,\n  Grid,\n  ListSubheader,\n} from '@mui/material';\nimport { useForm } from '../../hooks/useForm';\nimport products from './../../requests/products';\nimport ProductsTable from './ProductsTable';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport PageContainer from '../../components/PageContainer';\nimport AddProductsModal from './AddProductsModal';\nimport locations from '../../requests/locations';\nimport { useFetchData } from '../../hooks/useFetchData';\n//csv\nimport { CSVLink } from 'react-csv';\nimport { ExportDataContext } from './../../context/DataExport';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport Banner from '../../components/Banner';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport GapsTable from './GapsTable';\n\nconst ProductsPage = () => {\n  const [warehouse, setWarehouse] = useState('');\n  const [country, setCountry] = useState('');\n  const [addModal, setAddModal] = useState(false);\n  const { user, token } = useContext(AuthContext);\n\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n  const { headers, fileName, data, changeDataExport } =\n    useContext(ExportDataContext);\n\n\n  const { headers: headersGaps, fileName: fileNameGaps, data: dataGaps, changeDataExport: changeDataExportGaps } =\n    useContext(ExportDataContext);\n\n  const {\n    state: allproducts,\n    error,\n    fetchData,\n    setState,\n  } = useFetchData(products.getAllProducts);\n  // console.log('allproducts', allproducts);\n\n  const { state: allCountries } = useFetchData(locations.getAllCountries);\n  // console.log('allCountries', allCountries);\n\n  const { state: allLocations, setState: setLocationState } = useFetchData(\n    locations.getAllLocations\n  );\n  // console.log('allLocations', allLocations);\n\n  const getLocationByCountry = async countryId => {\n    const country = {\n      countryId: countryId,\n    };\n    // console.log('country', country);\n    const result = await locations.getLocationsByCountryId(userAction, country);\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n\n  useEffect(() => {\n    if (country.length !== 0) {\n      getLocationByCountry(country);\n    }\n    else {\n      setLocationState(locations.getAllLocations(userAction))\n    }\n  }, [country]);\n\n  const { onChange, onSubmit, setFieldValue, values } = useForm(\n    searchCallback,\n    {\n      locationId: '',\n      countryId: '',\n      search: '',\n    }\n  );\n\n  const searchProduct = async () => {\n    // console.log('values', values);\n    const resultSearchProduct = await products.getProductByParams(\n      userAction,\n      values\n    );\n    setState(resultSearchProduct);\n    // console.log('resultSearchProduct', resultSearchProduct);\n  };\n\n  function searchCallback() {\n    searchProduct();\n  }\n\n  useEffect(() => {\n    changeDataExport('Products', allproducts);\n  }, [allproducts]);\n\n\n  const handleAddModal = () => {\n    setAddModal(!addModal);\n  };\n\n  return (\n    <>\n      <PageContainer>\n        <PageHeaderContainer>\n          {country ? <Banner country={country} /> : <Banner country={''} />}\n\n          <Typography sx={{ m: 1 }} variant=\"h4\">\n            Products\n          </Typography>\n          <Box sx={{ m: 1 }}>\n            {fileName && headers && data ? (\n              <CSVLink\n                style={{ textDecoration: 'none', color: '#3F3FBE' }}\n                filename={fileName}\n                data={data}\n                headers={headers}\n              >\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ mr: 1 }}\n                >\n                  Export To Excel\n                </Button>\n              </CSVLink>\n            ) : null}\n            {/* {user && user?.name == 'Admin' || user?.name == 'Editor' ? ( */}\n\n            {/* {console.log('asasasas', user)} */}\n            {user?.permission !== 'Viewer' ? (\n              <Button\n                onClick={handleAddModal}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Add Product\n              </Button>\n            ) : null}\n          </Box>\n        </PageHeaderContainer>\n\n        <Box sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={5}>\n              <TextField\n                fullWidth\n                label=\"Search Product\"\n                onChange={onChange}\n                value={values.search}\n                variant=\"outlined\"\n                name=\"search\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={country}\n                onChange={event => {\n                  setFieldValue('countryId', event.target.value);\n                  setCountry(event.target.value);\n                }}\n                label={'Select country'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Country</ListSubheader>\n                {allCountries\n                  ? allCountries.map(country => (\n                    <MenuItem\n                      key={country.countryId}\n                      value={country.countryId}\n                    >\n                      {country.countryName}\n                    </MenuItem>\n                  ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={warehouse}\n                onChange={event => {\n                  setFieldValue('locationId', event.target.value);\n                  setWarehouse(event.target.value);\n                }}\n                label={'Select Location'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Location</ListSubheader>\n                {allLocations\n                  ? allLocations?.map(location => (\n                    <MenuItem\n                      key={location.locationId}\n                      value={location.locationId}\n                    >\n                      {location.locationName}\n                    </MenuItem>\n                  ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid sx={{ alignSelf: 'center' }} item xs={1}>\n              <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={onSubmit}\n                sx={{ p: '14px' }}\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n        {allproducts ? (\n          <Box sx={{ mt: 3 }}>\n            <ProductsTable\n              error={error}\n              fetchData={fetchData}\n              allproducts={allproducts}\n            // allLocations={allLocations}\n            />\n            <AddProductsModal\n              fetchData={fetchData}\n              open={addModal}\n              close={handleAddModal}\n            // allLocations={allLocations}\n            />\n          </Box>\n        ) : null}\n\n        {warehouse ? (\n          <>\n\n            <Box sx={{ mt: 3 }}>\n              <GapsTable warehouse={warehouse} />\n            </Box>\n          </>\n        ) : null}\n      </PageContainer>\n    </>\n  );\n};\n\nexport default ProductsPage;\n"]},"metadata":{},"sourceType":"module"}