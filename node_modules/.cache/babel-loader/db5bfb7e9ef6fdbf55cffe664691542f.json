{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Employees/EmployeesTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport EditEmployeeModal from './EditEmployeeModal';\nimport { Typography, IconButton, Tooltip } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport StyledDataGrid from '../../components/StyledDataGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmployeesTable = _ref => {\n  _s();\n\n  let {\n    allOffices,\n    allEmployees,\n    error,\n    fetchData\n  } = _ref;\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [employee, setEmployee] = useState(false);\n\n  const handleModal = () => setOpenEditModal(!openEditModal);\n\n  const columns = useMemo(() => [{\n    field: 'officeName',\n    headerName: 'Office',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.officeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'employeeName',\n    headerName: 'Name',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.employeeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'screen',\n    headerName: 'Screens',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.screen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'tv',\n    headerName: 'TVs',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.tv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'dockingStation',\n    headerName: 'Dockings',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.dockingStation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'ipPhone',\n    headerName: 'Phones',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.ipPhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'desktopComputer',\n    headerName: 'Computers',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.desktopComputer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'laptop',\n    headerName: 'Leptops',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.laptop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'printer',\n    headerName: 'Printers',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.printer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'headset',\n    headerName: 'Headsets',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.headset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'webCamera',\n    headerName: 'WebCamera',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.webCamera\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'edit',\n    headerName: 'Actions',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Edit\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          setEmployee(row.row);\n          handleModal();\n        },\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)\n  }], []);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    children: \"error featching allEmployees table\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledDataGrid, {\n      rows: allEmployees,\n      columns: columns,\n      getRowId: row => row.employeeId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), employee ? /*#__PURE__*/_jsxDEV(EditEmployeeModal, {\n      open: openEditModal,\n      close: handleModal,\n      allOffices: allOffices,\n      employee: employee,\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(EmployeesTable, \"YmVnONBQXl8gQoGfI/PfG/7pOcA=\");\n\n_c = EmployeesTable;\nexport default EmployeesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Employees/EmployeesTable.jsx"],"names":["React","useMemo","useState","EditEmployeeModal","Typography","IconButton","Tooltip","EditIcon","StyledDataGrid","EmployeesTable","allOffices","allEmployees","error","fetchData","openEditModal","setOpenEditModal","employee","setEmployee","handleModal","columns","field","headerName","sortable","flex","minWidth","renderCell","row","officeName","employeeName","screen","tv","dockingStation","ipPhone","desktopComputer","laptop","printer","headset","webCamera","employeeId"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport EditEmployeeModal from './EditEmployeeModal';\nimport { Typography, IconButton, Tooltip } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport StyledDataGrid from '../../components/StyledDataGrid';\n\nconst EmployeesTable = ({ allOffices, allEmployees, error, fetchData }) => {\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [employee, setEmployee] = useState(false);\n  const handleModal = () => setOpenEditModal(!openEditModal);\n\n  const columns = useMemo(\n    () => [\n      {\n        field: 'officeName',\n        headerName: 'Office',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.officeName}</Typography>\n        ),\n      },\n      {\n        field: 'employeeName',\n        headerName: 'Name',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.employeeName}</Typography>\n        ),\n      },\n      {\n        field: 'screen',\n        headerName: 'Screens',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.screen}</Typography>\n        ),\n      },\n      {\n        field: 'tv',\n        headerName: 'TVs',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.tv}</Typography>\n        ),\n      },\n      {\n        field: 'dockingStation',\n        headerName: 'Dockings',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.dockingStation}</Typography>\n        ),\n      },\n      {\n        field: 'ipPhone',\n        headerName: 'Phones',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.ipPhone}</Typography>\n        ),\n      },\n      {\n        field: 'desktopComputer',\n        headerName: 'Computers',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.desktopComputer}</Typography>\n        ),\n      },\n      {\n        field: 'laptop',\n        headerName: 'Leptops',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.laptop}</Typography>\n        ),\n      },\n      {\n        field: 'printer',\n        headerName: 'Printers',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.printer}</Typography>\n        ),\n      },\n      {\n        field: 'headset',\n        headerName: 'Headsets',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.headset}</Typography>\n        ),\n      },\n      {\n        field: 'webCamera',\n        headerName: 'WebCamera',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.webCamera}</Typography>\n        ),\n      },\n      {\n        field: 'edit',\n        headerName: 'Actions',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Tooltip title=\"Edit\">\n            <IconButton\n              onClick={() => {\n                setEmployee(row.row);\n                handleModal();\n              }}\n              aria-label=\"delete\"\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        ),\n      },\n    ],\n    []\n  );\n\n  if (error)\n    return (\n      <Typography variant=\"h4\">error featching allEmployees table</Typography>\n    );\n\n  return (\n    <>\n      <StyledDataGrid\n        rows={allEmployees}\n        columns={columns}\n        getRowId={row => row.employeeId}\n      />\n      {employee ? (\n        <EditEmployeeModal\n          open={openEditModal}\n          close={handleModal}\n          allOffices={allOffices}\n          employee={employee}\n          fetchData={fetchData}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default EmployeesTable;\n"]},"metadata":{},"sourceType":"module"}