{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Employees/OfficesTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Typography } from '@mui/material';\nimport StyledDataGrid from '../../components/StyledDataGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OfficesTable = _ref => {\n  _s();\n\n  let {\n    allOffices,\n    error\n  } = _ref;\n  const columns = useMemo(() => [{\n    field: 'officeName',\n    headerName: 'Office',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.officeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }], []);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    children: \"error featching allOffices table\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(StyledDataGrid, {\n    rows: allOffices,\n    columns: columns,\n    getRowId: row => row.officeId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OfficesTable, \"erkfbBpUuAY09jdvhSOqc0XsEHQ=\");\n\n_c = OfficesTable;\nexport default OfficesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfficesTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Employees/OfficesTable.jsx"],"names":["React","useMemo","Typography","StyledDataGrid","OfficesTable","allOffices","error","columns","field","headerName","sortable","flex","minWidth","renderCell","row","officeName","officeId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,YAAY,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA0B;AAC9C,QAAMC,OAAO,GAAGN,OAAO,CACrB,MAAM,CACJ;AACEO,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,UAAU,EAAE,QAFd;AAGEC,IAAAA,QAAQ,EAAE,KAHZ;AAIEC,IAAAA,IAAI,EAAE,GAJR;AAKEC,IAAAA,QAAQ,EAAE,GALZ;AAMEC,IAAAA,UAAU,EAAEC,GAAG,iBACb,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,aAAlB;AAAA,gBAAiCA,GAAG,CAACA,GAAJ,CAAQC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAPJ,GADI,CADe,EAarB,EAbqB,CAAvB;AAgBA,MAAIT,KAAJ,EACE,oBACE,QAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAIF,sBACE,QAAC,cAAD;AACE,IAAA,IAAI,EAAED,UADR;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAEO,GAAG,IAAIA,GAAG,CAACE;AAHvB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7BD;;GAAMZ,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { Typography } from '@mui/material';\nimport StyledDataGrid from '../../components/StyledDataGrid';\n\nconst OfficesTable = ({ allOffices, error }) => {\n  const columns = useMemo(\n    () => [\n      {\n        field: 'officeName',\n        headerName: 'Office',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.officeName}</Typography>\n        ),\n      },\n    ],\n    []\n  );\n\n  if (error)\n    return (\n      <Typography variant=\"h4\">error featching allOffices table</Typography>\n    );\n\n  return (\n    <StyledDataGrid\n      rows={allOffices}\n      columns={columns}\n      getRowId={row => row.officeId}\n    />\n  );\n};\n\nexport default OfficesTable;\n"]},"metadata":{},"sourceType":"module"}