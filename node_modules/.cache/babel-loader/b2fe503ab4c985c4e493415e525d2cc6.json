{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/GapsTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport products from './../../requests/products';\nimport { TableCell, TableRow, Typography } from '@mui/material';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Product Name'\n}, {\n  title: 'Quan in stock'\n}, {\n  title: 'Gap'\n}, {\n  title: 'Total Quan in some location'\n}];\n\nconst GapsTable = _ref => {\n  _s();\n\n  let {} = _ref;\n  const {\n    state: allGaps,\n    error\n  } = useFetchData(products.getGaps);\n  return allGaps ? /*#__PURE__*/_jsxDEV(StyledTable, {\n    columns: columns,\n    children: allGaps.length > 0 ? allGaps.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.officeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, row.officeId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n    sx: {\n      m: 1\n    },\n    variant: \"body1\",\n    children: \"error fetching getGaps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(TableSkeleton, {\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GapsTable, \"jLQJuMTWM5fQ1NHsgyEVS4wGxiE=\", false, function () {\n  return [useFetchData];\n});\n\n_c = GapsTable;\nexport default GapsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"GapsTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/GapsTable.jsx"],"names":["React","useFetchData","products","TableCell","TableRow","Typography","StyledTable","TableSkeleton","columns","title","GapsTable","state","allGaps","error","getGaps","length","map","row","officeName","officeId","m"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,eAAhD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE;AADT,CADc,EAId;AACEA,EAAAA,KAAK,EAAE;AADT,CAJc,EAOd;AACEA,EAAAA,KAAK,EAAE;AADT,CAPc,EAUd;AACEA,EAAAA,KAAK,EAAE;AADT,CAVc,CAAhB;;AAeA,MAAMC,SAAS,GAAG,QAAQ;AAAA;;AAAA,MAAP,EAAO;AACxB,QAAM;AAAEC,IAAAA,KAAK,EAAEC,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BZ,YAAY,CAACC,QAAQ,CAACY,OAAV,CAA9C;AAEA,SAAOF,OAAO,gBACZ,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEJ,OAAtB;AAAA,cACGI,OAAO,CAACG,MAAR,GAAiB,CAAjB,GACCH,OAAO,CAACI,GAAR,CAAYC,GAAG,iBACb,QAAC,QAAD;AAAA,6BACE,QAAC,SAAD;AAAA,kBAAYA,GAAG,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,OAAeD,GAAG,CAACE,QAAnB;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAOC,QAAC,QAAD;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADY,GAcVN,KAAK,gBACP,QAAC,UAAD;AAAY,IAAA,EAAE,EAAE;AAAEO,MAAAA,CAAC,EAAE;AAAL,KAAhB;AAA0B,IAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO,gBAKP,QAAC,aAAD;AAAe,IAAA,OAAO,EAAEZ;AAAxB;AAAA;AAAA;AAAA;AAAA,UAnBF;AAqBD,CAxBD;;GAAME,S;UAC8BT,Y;;;KAD9BS,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport products from './../../requests/products';\nimport { TableCell, TableRow, Typography } from '@mui/material';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\n\nconst columns = [\n  {\n    title: 'Product Name',\n  },\n  {\n    title: 'Quan in stock',\n  },\n  {\n    title: 'Gap',\n  },\n  {\n    title: 'Total Quan in some location',\n  },\n];\n\nconst GapsTable = ({}) => {\n  const { state: allGaps, error } = useFetchData(products.getGaps);\n\n  return allGaps ? (\n    <StyledTable columns={columns}>\n      {allGaps.length > 0 ? (\n        allGaps.map(row => (\n          <TableRow key={row.officeId}>\n            <TableCell>{row.officeName}</TableCell>\n          </TableRow>\n        ))\n      ) : (\n        <TableRow>\n          <TableCell>No results</TableCell>\n        </TableRow>\n      )}\n    </StyledTable>\n  ) : error ? (\n    <Typography sx={{ m: 1 }} variant=\"body1\">\n      error fetching getGaps\n    </Typography>\n  ) : (\n    <TableSkeleton columns={columns} />\n  );\n};\n\nexport default GapsTable;\n"]},"metadata":{},"sourceType":"module"}