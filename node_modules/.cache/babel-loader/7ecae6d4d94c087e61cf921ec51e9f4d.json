{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/context/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport Notification from '../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  userAction: {\n    userId: null,\n    token: null\n  }\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n    initialState.token = localStorage.getItem('jwtToken');\n    initialState.userAction.token = localStorage.getItem('jwtToken');\n  }\n}\n\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  token: null,\n  userAction: {\n    userId: null,\n    token: null\n  },\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      // console.log('action', action);\n      // console.log('state', state);\n      return { ...state,\n        user: action.payload,\n        token: action.payload.token,\n        userAction: {\n          userId: action.payload.id,\n          token: action.payload.token\n        }\n      };\n\n    case 'LOGOUT':\n      toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'logged Out'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this));\n      return { ...state,\n        user: null,\n        token: null,\n        userAction: {\n          userId: null,\n          token: null\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    // console.log('user', userData);\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      token: state.token,\n      userAction: state.userAction,\n      login,\n      logout\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","toast","Notification","initialState","user","token","userAction","userId","localStorage","getItem","decodedToken","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","state","action","type","payload","id","success","AuthProvider","props","dispatch","setItem"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport Notification from '../components/Notification';\n\nconst initialState = {\n  user: null,\n  token: null,\n  userAction: {\n    userId: null,\n    token: null,\n  },\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n    initialState.token = localStorage.getItem('jwtToken');\n    initialState.userAction.token = localStorage.getItem('jwtToken');\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  token: null,\n  userAction: {\n    userId: null,\n    token: null,\n  },\n  login: userData => { },\n  logout: () => { },\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      // console.log('action', action);\n      // console.log('state', state);\n      return {\n        ...state,\n        user: action.payload,\n        token: action.payload.token,\n        userAction: {\n          userId: action.payload.id,\n          token: action.payload.token,\n        },\n      };\n    case 'LOGOUT':\n      toast.success(<Notification text={'logged Out'} />);\n      return {\n        ...state,\n        user: null,\n        token: null,\n        userAction: {\n          userId: null,\n          token: null,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    // console.log('user', userData);\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData,\n    });\n  }\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        token: state.token,\n        userAction: state.userAction,\n        login,\n        logout,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}