{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/AllUsersTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Typography, TableCell, TableRow, IconButton, Tooltip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport UserEditModal from './UserEditModal';\nimport DeleteUserModal from './DeleteUserModal';\nimport { AuthContext } from '../../context/auth';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'User Name'\n}, {\n  title: 'Email'\n}, {\n  title: 'Permission'\n}, {\n  title: 'Actions'\n}];\n\nconst AllUsersTable = _ref => {\n  _s();\n\n  let {\n    allUsers,\n    fetchData,\n    error\n  } = _ref;\n  const [userData, setUserData] = useState(null);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [openDeleteModal, setOpenDeletMeodal] = useState(false);\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n\n  const handleDeleteModal = () => setOpenDeletMeodal(!openDeleteModal);\n\n  const handleEditModal = () => setOpenEditModal(!openEditModal);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [allUsers ? /*#__PURE__*/_jsxDEV(StyledTable, {\n      columns: columns,\n      children: allUsers.length > 0 ? allUsers === null || allUsers === void 0 ? void 0 : allUsers.map(userData => userAction.userId !== userData.userId ? /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: userData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: userData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: userData.permission\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Edit\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                setUserData(userData);\n                handleEditModal();\n              },\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                setUserData(userData);\n                handleDeleteModal();\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this)]\n      }, userData.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this) : null) : /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"No results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"error fetching all users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableSkeleton, {\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), userData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserEditModal, {\n        fetchData: fetchData,\n        open: openEditModal,\n        close: handleEditModal,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteUserModal, {\n        fetchData: fetchData,\n        open: openDeleteModal,\n        close: handleDeleteModal,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(AllUsersTable, \"Ae4mQ2fsEHTXPN1uF+w9b4vmPUc=\");\n\n_c = AllUsersTable;\nexport default AllUsersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsersTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/AllUsersTable.jsx"],"names":["React","useState","useContext","Typography","TableCell","TableRow","IconButton","Tooltip","DeleteIcon","EditIcon","UserEditModal","DeleteUserModal","AuthContext","StyledTable","TableSkeleton","columns","title","AllUsersTable","allUsers","fetchData","error","userData","setUserData","openEditModal","setOpenEditModal","openDeleteModal","setOpenDeletMeodal","user","token","userAction","userId","id","handleDeleteModal","handleEditModal","length","map","name","email","permission"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport {\n  Typography,\n  TableCell,\n  TableRow,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport UserEditModal from './UserEditModal';\nimport DeleteUserModal from './DeleteUserModal';\nimport { AuthContext } from '../../context/auth';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\n\nconst columns = [\n  { title: 'User Name' },\n  { title: 'Email' },\n  { title: 'Permission' },\n  { title: 'Actions' },\n];\n\nconst AllUsersTable = ({ allUsers, fetchData, error }) => {\n  const [userData, setUserData] = useState(null);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [openDeleteModal, setOpenDeletMeodal] = useState(false);\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const handleDeleteModal = () => setOpenDeletMeodal(!openDeleteModal);\n  const handleEditModal = () => setOpenEditModal(!openEditModal);\n\n  return (\n    <>\n      {allUsers ? (\n        <StyledTable columns={columns}>\n          {allUsers.length > 0 ? (\n            allUsers?.map(userData =>\n              userAction.userId !== userData.userId ? (\n                <TableRow key={userData.userId}>\n                  <TableCell>{userData.name}</TableCell>\n                  <TableCell>{userData.email}</TableCell>\n                  <TableCell>{userData.permission}</TableCell>\n                  <TableCell>\n                    <Tooltip title=\"Edit\">\n                      <IconButton\n                        onClick={() => {\n                          setUserData(userData);\n                          handleEditModal();\n                        }}\n                        aria-label=\"delete\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        onClick={() => {\n                          setUserData(userData);\n                          handleDeleteModal();\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              ) : null\n            )\n          ) : (\n            <TableRow>\n              <TableCell>No results</TableCell>\n            </TableRow>\n          )}\n        </StyledTable>\n      ) : error ? (\n        <Typography variant=\"h4\">error fetching all users</Typography>\n      ) : (\n        <TableSkeleton columns={columns} />\n      )}\n\n      {userData ? (\n        <>\n          <UserEditModal\n            fetchData={fetchData}\n            open={openEditModal}\n            close={handleEditModal}\n            userData={userData}\n          />\n          <DeleteUserModal\n            fetchData={fetchData}\n            open={openDeleteModal}\n            close={handleDeleteModal}\n            userData={userData}\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default AllUsersTable;\n"]},"metadata":{},"sourceType":"module"}