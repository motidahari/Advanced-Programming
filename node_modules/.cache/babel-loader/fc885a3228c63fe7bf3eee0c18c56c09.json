{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/test/client/src/App.js\";\nimport React from 'react';\nimport MediaCard from './MediaCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getQ = () => {\n  return Q[Math.random() * Q.length | 0];\n};\n\nconst getRandomPointer = () => {\n  return parseInt(Math.random() * 20);\n};\n\nconst getRandom2Exponent = max => {\n  return parseInt((Math.random() + 1) * max);\n};\n\nconst getPow = pow => {\n  return Math.pow(2, pow);\n};\n\nconst q1 = () => {\n  let expNume = getRandom2Exponent(18);\n  let expResult = getPow(expNume);\n  const Qnumber = 1;\n  const RandomPointer1 = getRandomPointer();\n  const RandomPointer2 = getRandomPointer();\n  const numPoiners = expResult / 4;\n  let q = `גודל בלוק הוא ${expResult} = 2^${expNume} ומצביע הוא בגודל 4 בתים.\n  ישנם ${RandomPointer1} מצביעים ישירים ו-${RandomPointer2} מצביעים עקיפים מסוג single indirect\n  מהוא גודל הקובץ המקסימלי במערכת קבצים זו?  \n  `;\n  const answer = `(${RandomPointer1} + ${RandomPointer2} * ${numPoiners}) * ${expResult} = ` + (RandomPointer1 + RandomPointer2 * numPoiners) * expResult;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nlet Q = [q1()];\nconsole.log(Q[0]);\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(MediaCard, {\n      q: Q[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/motidahari/projects/test/client/src/App.js"],"names":["React","MediaCard","getQ","Q","Math","random","length","getRandomPointer","parseInt","getRandom2Exponent","max","getPow","pow","q1","expNume","expResult","Qnumber","RandomPointer1","RandomPointer2","numPoiners","q","answer","result","console","log","App","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAMA,MAAMC,IAAI,GAAG,MAAM;AACjB,SAAOC,CAAC,CAAEC,IAAI,CAACC,MAAL,KAAgBF,CAAC,CAACG,MAAnB,GAA6B,CAA9B,CAAR;AACD,CAFD;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,SAAOC,QAAQ,CAACJ,IAAI,CAACC,MAAL,KAAgB,EAAjB,CAAf;AACD,CAFD;;AAIA,MAAMI,kBAAkB,GAAIC,GAAD,IAAS;AAClC,SAAOF,QAAQ,CAAC,CAACJ,IAAI,CAACC,MAAL,KAAgB,CAAjB,IAAsBK,GAAvB,CAAf;AACD,CAFD;;AAGA,MAAMC,MAAM,GAAIC,GAAD,IAAS;AACtB,SAAOR,IAAI,CAACQ,GAAL,CAAS,CAAT,EAAYA,GAAZ,CAAP;AACD,CAFD;;AAMA,MAAMC,EAAE,GAAG,MAAM;AACf,MAAIC,OAAO,GAAGL,kBAAkB,CAAC,EAAD,CAAhC;AACA,MAAIM,SAAS,GAAGJ,MAAM,CAACG,OAAD,CAAtB;AACA,QAAME,OAAO,GAAG,CAAhB;AACA,QAAMC,cAAc,GAAGV,gBAAgB,EAAvC;AACA,QAAMW,cAAc,GAAGX,gBAAgB,EAAvC;AACA,QAAMY,UAAU,GAAGJ,SAAS,GAAG,CAA/B;AAGA,MAAIK,CAAC,GAAI,iBAAgBL,SAAU,QAAOD,OAAQ;AACpD,SAASG,cAAe,qBAAoBC,cAAe;AAC3D;AACA,GAHE;AAIA,QAAMG,MAAM,GAAI,IAAGJ,cAAe,MAAKC,cAAe,MAAKC,UAAW,OAAMJ,SAAU,KAAvE,GAA+E,CAACE,cAAc,GAAIC,cAAc,GAAGC,UAApC,IAAmDJ,SAAjJ;AACA,QAAMO,MAAM,GAAG;AACbF,IAAAA,CAAC,EAAEA,CADU;AAEbJ,IAAAA,OAAO,EAAEA,OAFI;AAGbK,IAAAA,MAAM,EAAEA;AAHK,GAAf;AAKA,SAAOC,MAAP;AACD,CApBD;;AAuBA,IAAInB,CAAC,GAAG,CAACU,EAAE,EAAH,CAAR;AACAU,OAAO,CAACC,GAAR,CAAYrB,CAAC,CAAC,CAAD,CAAb;;AAEA,MAAMsB,GAAG,GAAG,MAAM;AAChB,sBAEE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,CAAC,EAAEvB,CAAC,CAAC,CAAD;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAMD,CAPD;;KAAMsB,G;AASN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport MediaCard from './MediaCard';\n\n\n\n\n\nconst getQ = () => {\n  return Q[(Math.random() * Q.length) | 0];\n}\nconst getRandomPointer = () => {\n  return parseInt(Math.random() * 20);\n}\n\nconst getRandom2Exponent = (max) => {\n  return parseInt((Math.random() + 1) * max);\n}\nconst getPow = (pow) => {\n  return Math.pow(2, pow)\n}\n\n\n\nconst q1 = () => {\n  let expNume = getRandom2Exponent(18);\n  let expResult = getPow(expNume);\n  const Qnumber = 1;\n  const RandomPointer1 = getRandomPointer();\n  const RandomPointer2 = getRandomPointer();\n  const numPoiners = expResult / 4;\n\n\n  let q = `גודל בלוק הוא ${expResult} = 2^${expNume} ומצביע הוא בגודל 4 בתים.\n  ישנם ${RandomPointer1} מצביעים ישירים ו-${RandomPointer2} מצביעים עקיפים מסוג single indirect\n  מהוא גודל הקובץ המקסימלי במערכת קבצים זו?  \n  `;\n  const answer = `(${RandomPointer1} + ${RandomPointer2} * ${numPoiners}) * ${expResult} = ` + ((RandomPointer1 + (RandomPointer2 * numPoiners)) * expResult);\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\n\n\nlet Q = [q1()];\nconsole.log(Q[0]);\n\nconst App = () => {\n  return (\n\n    <div style={{ marginTop: '20px' }}>\n      <MediaCard q={Q[0]} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}