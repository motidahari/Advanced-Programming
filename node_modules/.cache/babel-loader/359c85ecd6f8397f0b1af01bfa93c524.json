{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Admin/AdminPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Typography, Tabs, Tab } from '@mui/material';\nimport PageContainer from '../../components/PageContainer';\nimport AllUsersTable from './AllUsersTable';\nimport PendingUsersTable from './PendingUsersTable';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport users from '../../requests/users';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminPage = () => {\n  _s();\n\n  const [value, setValue] = React.useState('ALL');\n  const {\n    state: allUsers,\n    error: errorAllUsers,\n    fetchData: fetchDataAllUsers\n  } = useFetchData(users.getAllUsers);\n  const {\n    state: allPendingUsers,\n    error: errorAllPendingUsers,\n    fetchData: fetchDataAllPendingUsers\n  } = useFetchData(users.getUnapprovedUsers); // console.log('allUsers', allUsers);\n  // console.log('allPendingUsers', allPendingUsers);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeaderContainer, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            m: 1\n          },\n          variant: \"h4\",\n          children: \"User Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          TabIndicatorProps: {\n            style: {\n              bottom: 8\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            disableRipple: true,\n            label: \"All Users\",\n            value: 'ALL'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            disableRipple: true,\n            label: \"Pending Users\",\n            value: 'PENDING'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), value === 'ALL' && /*#__PURE__*/_jsxDEV(AllUsersTable, {\n          allUsers: allUsers,\n          fetchData: fetchDataAllUsers,\n          error: errorAllUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), value === 'PENDING' && /*#__PURE__*/_jsxDEV(PendingUsersTable, {\n          allPendingUsers: allPendingUsers,\n          fetchData: fetchDataAllPendingUsers,\n          error: errorAllPendingUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminPage, \"fdSKaDSqpf/IfmulzCbnx2eQGVY=\", false, function () {\n  return [useFetchData, useFetchData];\n});\n\n_c = AdminPage;\nexport default AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Admin/AdminPage.jsx"],"names":["React","Box","Typography","Tabs","Tab","PageContainer","AllUsersTable","PendingUsersTable","useFetchData","users","PageHeaderContainer","AdminPage","value","setValue","useState","state","allUsers","error","errorAllUsers","fetchData","fetchDataAllUsers","getAllUsers","allPendingUsers","errorAllPendingUsers","fetchDataAllPendingUsers","getUnapprovedUsers","handleChange","event","newValue","m","mt","style","bottom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,eAA3C;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,mBAAT,QAAoC,+BAApC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM;AACJC,IAAAA,KAAK,EAAEC,QADH;AAEJC,IAAAA,KAAK,EAAEC,aAFH;AAGJC,IAAAA,SAAS,EAAEC;AAHP,MAIFZ,YAAY,CAACC,KAAK,CAACY,WAAP,CAJhB;AAOA,QAAM;AACJN,IAAAA,KAAK,EAAEO,eADH;AAEJL,IAAAA,KAAK,EAAEM,oBAFH;AAGJJ,IAAAA,SAAS,EAAEK;AAHP,MAIFhB,YAAY,CAACC,KAAK,CAACgB,kBAAP,CAJhB,CATsB,CAiBtB;AACA;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCf,IAAAA,QAAQ,CAACe,QAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,mBAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE;AAAEC,YAAAA,CAAC,EAAE;AAAL,WAAhB;AAA0B,UAAA,OAAO,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,KAAK,EAAElB,KADT;AAEE,UAAA,QAAQ,EAAEc,YAFZ;AAGE,UAAA,iBAAiB,EAAE;AACjBK,YAAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV;AADU,WAHrB;AAAA,kCAOE,QAAC,GAAD;AAAK,YAAA,aAAa,MAAlB;AAAmB,YAAA,KAAK,EAAC,WAAzB;AAAqC,YAAA,KAAK,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,GAAD;AAAK,YAAA,aAAa,MAAlB;AAAmB,YAAA,KAAK,EAAC,eAAzB;AAAyC,YAAA,KAAK,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAYGpB,KAAK,KAAK,KAAV,iBACC,QAAC,aAAD;AACE,UAAA,QAAQ,EAAEI,QADZ;AAEE,UAAA,SAAS,EAAEI,iBAFb;AAGE,UAAA,KAAK,EAAEF;AAHT;AAAA;AAAA;AAAA;AAAA,gBAbJ,EAmBGN,KAAK,KAAK,SAAV,iBACC,QAAC,iBAAD;AACE,UAAA,eAAe,EAAEU,eADnB;AAEE,UAAA,SAAS,EAAEE,wBAFb;AAGE,UAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuCD,CA/DD;;GAAMZ,S;UAMAH,Y,EAOAA,Y;;;KAbAG,S;AAiEN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Box, Typography, Tabs, Tab } from '@mui/material';\nimport PageContainer from '../../components/PageContainer';\nimport AllUsersTable from './AllUsersTable';\nimport PendingUsersTable from './PendingUsersTable';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport users from '../../requests/users';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\n\nconst AdminPage = () => {\n  const [value, setValue] = React.useState('ALL');\n  const {\n    state: allUsers,\n    error: errorAllUsers,\n    fetchData: fetchDataAllUsers,\n  } = useFetchData(users.getAllUsers);\n\n\n  const {\n    state: allPendingUsers,\n    error: errorAllPendingUsers,\n    fetchData: fetchDataAllPendingUsers,\n  } = useFetchData(users.getUnapprovedUsers);\n\n\n\n  // console.log('allUsers', allUsers);\n  // console.log('allPendingUsers', allPendingUsers);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <PageContainer>\n        <PageHeaderContainer>\n          <Typography sx={{ m: 1 }} variant=\"h4\">\n            User Management\n          </Typography>\n        </PageHeaderContainer>\n\n        <Box sx={{ mt: 3 }}>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            TabIndicatorProps={{\n              style: { bottom: 8 },\n            }}\n          >\n            <Tab disableRipple label=\"All Users\" value={'ALL'} />\n            <Tab disableRipple label=\"Pending Users\" value={'PENDING'} />\n          </Tabs>\n\n          {value === 'ALL' && (\n            <AllUsersTable\n              allUsers={allUsers}\n              fetchData={fetchDataAllUsers}\n              error={errorAllUsers}\n            />\n          )}\n          {value === 'PENDING' && (\n            <PendingUsersTable\n              allPendingUsers={allPendingUsers}\n              fetchData={fetchDataAllPendingUsers}\n              error={errorAllPendingUsers}\n            />\n          )}\n        </Box>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default AdminPage;\n"]},"metadata":{},"sourceType":"module"}