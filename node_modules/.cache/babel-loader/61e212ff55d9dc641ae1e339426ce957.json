{"ast":null,"code":"import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\nconst locations = {\n  addLocation: async (userAction, location) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(location)\n    };\n    const result = fetchData(requests.Locations.AddLocations, requestOptions);\n    return result;\n  },\n  deleteLocationById: async (userAction, location) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(location)\n    };\n    const result = fetchData(requests.Locations.DeleteLocation, requestOptions);\n    return result;\n  },\n  getAllLocations: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Locations.GetAll, requestOptions);\n    return result;\n  },\n  getAllCountries: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Locations.GetAllCountries, requestOptions);\n    return result;\n  },\n  getLocationsByCountryId: async (userAction, product) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(product)\n    };\n    const result = fetchData(requests.Locations.GetAllLocationByCounrtyId, requestOptions);\n    return result;\n  },\n  createCountriesAndLocations: async (userAction, product) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(product)\n    };\n    const result = fetchData(requests.Locations.CreateCountriesAndLocations, requestOptions);\n    return result;\n  }\n};\nexport default locations;","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/requests/locations.js"],"names":["requests","fetchData","locations","addLocation","userAction","location","requestOptions","method","headers","token","userId","body","JSON","stringify","result","Locations","AddLocations","deleteLocationById","DeleteLocation","getAllLocations","GetAll","getAllCountries","GetAllCountries","getLocationsByCountryId","product","GetAllLocationByCounrtyId","createCountriesAndLocations","CreateCountriesAndLocations"],"mappings":"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","sourcesContent":["import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\n\nconst locations = {\n  addLocation: async (userAction, location) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(location),\n    };\n    const result = fetchData(requests.Locations.AddLocations, requestOptions);\n    return result;\n  },\n\n  deleteLocationById: async (userAction, location) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(location),\n    };\n    const result = fetchData(requests.Locations.DeleteLocation, requestOptions);\n    return result;\n  },\n\n  getAllLocations: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(requests.Locations.GetAll, requestOptions);\n    return result;\n  },\n\n  getAllCountries: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(\n      requests.Locations.GetAllCountries,\n      requestOptions\n    );\n    return result;\n  },\n\n  getLocationsByCountryId: async (userAction, product) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(product),\n    };\n    const result = fetchData(\n      requests.Locations.GetAllLocationByCounrtyId,\n      requestOptions\n    );\n    return result;\n  },\n\n  createCountriesAndLocations: async (userAction, product) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(product),\n    };\n    const result = fetchData(\n      requests.Locations.CreateCountriesAndLocations,\n      requestOptions\n    );\n    return result;\n  },\n\n};\n\nexport default locations;\n"]},"metadata":{},"sourceType":"module"}