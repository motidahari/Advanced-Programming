{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/EditProductModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Modal, Grid, TextField, MenuItem } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport products from '../../requests/products';\nimport { useForm } from '../../hooks/useForm';\nimport { AuthContext } from '../../context/auth';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst specialProducts = ['acom amplifier', 'barret transceiiver', 'exodus aplifier gen1', 'tujicom amplifier gen1', 'tujicom amplifier gen2'];\n\nconst EditProductModal = _ref => {\n  _s();\n\n  var _values$productName3;\n\n  let {\n    open,\n    close,\n    product,\n    allLocations,\n    fetchData\n  } = _ref;\n  const [warehouse, setWarehouse] = useState('');\n  const [statusField, setStatusField] = useState('');\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    setValues,\n    values\n  } = useForm(editProductCallback, {\n    locationName: '',\n    locationId: '',\n    productId: '',\n    productName: '',\n    serialNumber: '',\n    PONumber: '',\n    warranty: '',\n    description: '',\n    status: ''\n  }); // console.log('values', values);\n\n  useEffect(() => {\n    // console.log('product', product);\n    setValues(product);\n    setWarehouse(product.locationId); // setFieldValue('locationId', product.locationId);\n  }, [product]);\n\n  const editProduct = async () => {\n    var _values$productName, _values$productName2, _values$locationId;\n\n    let err = false;\n\n    if (((_values$productName = values.productName) === null || _values$productName === void 0 ? void 0 : _values$productName.length) === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include product name for product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n      err = true;\n    }\n\n    if (specialProducts.includes(values === null || values === void 0 ? void 0 : (_values$productName2 = values.productName) === null || _values$productName2 === void 0 ? void 0 : _values$productName2.toLowerCase())) {\n      var _values$status, _values$serialNumber;\n\n      if (!values.status || (values === null || values === void 0 ? void 0 : (_values$status = values.status) === null || _values$status === void 0 ? void 0 : _values$status.length) === 0) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Please include status for product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this));\n        err = true;\n      }\n\n      if (((_values$serialNumber = values.serialNumber) === null || _values$serialNumber === void 0 ? void 0 : _values$serialNumber.length) === 0) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Please include serialNumber for product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this));\n        err = true;\n      }\n    }\n\n    if (((_values$locationId = values.locationId) === null || _values$locationId === void 0 ? void 0 : _values$locationId.length) === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include location for product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this));\n      err = true;\n    }\n\n    if (!err) {\n      // console.log('values', values);\n      const resultUpdateProduct = await products.UpdateProduct(userAction, values);\n\n      if (resultUpdateProduct !== null && resultUpdateProduct !== void 0 && resultUpdateProduct.errors) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this));\n      } else {\n        toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Product edited'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }, this));\n        fetchData();\n        close();\n      } // console.log('resultUpdateProduct', resultUpdateProduct);\n\n    }\n  };\n\n  function editProductCallback() {\n    editProduct();\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: close,\n      children: /*#__PURE__*/_jsxDEV(StyledModal, {\n        submitText: 'Edit Product',\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          title: `Edit ${product.productName} `,\n          close: close\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Product Name\",\n              onChange: onChange,\n              value: values.productName,\n              variant: \"outlined\",\n              name: \"productName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"S/N of Product\",\n              onChange: onChange,\n              value: values.serialNumber,\n              variant: \"outlined\",\n              name: \"serialNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"PO Number\",\n              onChange: onChange,\n              value: values.PONumber,\n              variant: \"outlined\",\n              name: \"PONumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n              label: \"Warranty\",\n              openTo: \"year\",\n              views: ['year', 'month', 'day'],\n              value: values.warranty,\n              name: \"warranty\",\n              onChange: newValue => {\n                setFieldValue('warranty', newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), allLocations ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: warehouse,\n              onChange: event => {\n                setWarehouse(event.target.value);\n                setFieldValue('locationId', event.target.value);\n              },\n              label: \"Select location\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                disabled: true,\n                value: 'Select location',\n                children: \"Select location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), allLocations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: location.locationId,\n                children: location.locationName\n              }, location.locationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Comment\",\n              onChange: onChange,\n              value: values.description,\n              variant: \"outlined\",\n              name: \"description\",\n              multiline: true,\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), specialProducts.includes((_values$productName3 = values.productName) === null || _values$productName3 === void 0 ? void 0 : _values$productName3.toLowerCase()) ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: statusField,\n              onChange: event => {\n                setStatusField(event.target.value);\n                setFieldValue('status', event.target.value);\n              },\n              label: 'Status',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                disabled: true,\n                value: 'Select Status',\n                children: \"Select Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Fault\",\n                children: \"Fault\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Operational\",\n                children: \"Operational\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Awaiting ATP\",\n                children: \"Awaiting ATP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProductModal, \"ibijf5M2nmfymsmPzreoDZ2VmX0=\", false, function () {\n  return [useForm];\n});\n\n_c = EditProductModal;\nexport default EditProductModal;\n/*\n\nlet resuktP = null;\nconst func = useCallback(async () => {\n  resuktP = await products.getProductById(userAction, product);\n  console.log('resuktP', resuktP);\n  setFieldValue('serialNumber', resuktP.serialNumber)\n  setFieldValue('productName', resuktP.productName)\n  setFieldValue('locationId', resuktP.locationId)\n  setFieldValue('productId', resuktP.productId)\n  setFieldValue('PONumber', resuktP.PONumber)\n  setFieldValue('warranty', resuktP.warranty)\n  setFieldValue('prodescriptionductName', resuktP.productName)\n  setFieldValue('status', resuktP.status)\n  setFieldValue('productName', resuktP.productName)\n  setFieldValue('productName', resuktP.productName)\n  setResult(resuktP);\n}, [product]);\n\nuseEffect(() => {\n  func()\n}, [func]);\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/EditProductModal.jsx"],"names":["React","useEffect","useState","useContext","Modal","Grid","TextField","MenuItem","ModalHeader","MobileDatePicker","AdapterDateFns","LocalizationProvider","products","useForm","AuthContext","TextFieldSelect","toast","Notification","StyledModal","specialProducts","EditProductModal","open","close","product","allLocations","fetchData","warehouse","setWarehouse","statusField","setStatusField","user","token","userAction","userId","id","onChange","onSubmit","setFieldValue","setValues","values","editProductCallback","locationName","locationId","productId","productName","serialNumber","PONumber","warranty","description","status","editProduct","err","length","error","includes","toLowerCase","resultUpdateProduct","UpdateProduct","errors","success","newValue","params","event","target","value","map","location"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Modal, Grid, TextField, MenuItem } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport products from '../../requests/products';\nimport { useForm } from '../../hooks/useForm';\nimport { AuthContext } from '../../context/auth';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\n\nconst specialProducts = [\n  'acom amplifier',\n  'barret transceiiver',\n  'exodus aplifier gen1',\n  'tujicom amplifier gen1',\n  'tujicom amplifier gen2',\n];\nconst EditProductModal = ({\n  open,\n  close,\n  product,\n  allLocations,\n  fetchData,\n}) => {\n  const [warehouse, setWarehouse] = useState('');\n  const [statusField, setStatusField] = useState('');\n\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const { onChange, onSubmit, setFieldValue, setValues, values } = useForm(\n    editProductCallback,\n    {\n      locationName: '',\n      locationId: '',\n      productId: '',\n      productName: '',\n      serialNumber: '',\n      PONumber: '',\n      warranty: '',\n      description: '',\n      status: '',\n    }\n  );\n  // console.log('values', values);\n\n  useEffect(() => {\n    // console.log('product', product);\n    setValues(product);\n    setWarehouse(product.locationId);\n    // setFieldValue('locationId', product.locationId);\n  }, [product]);\n\n  const editProduct = async () => {\n    let err = false;\n    if (values.productName?.length === 0) {\n      toast.error(\n        <Notification text={'Please include product name for product'} />\n      );\n      err = true;\n    }\n\n    if (specialProducts.includes(values?.productName?.toLowerCase())) {\n      if (!values.status || values?.status?.length === 0) {\n        toast.error(\n          <Notification text={'Please include status for product'} />\n        );\n        err = true;\n      }\n      if (values.serialNumber?.length === 0) {\n        toast.error(\n          <Notification text={'Please include serialNumber for product'} />\n        );\n        err = true;\n      }\n    }\n    if (values.locationId?.length === 0) {\n      toast.error(\n        <Notification text={'Please include location for product'} />\n      );\n      err = true;\n    }\n\n    if (!err) {\n      // console.log('values', values);\n      const resultUpdateProduct = await products.UpdateProduct(\n        userAction,\n        values\n      );\n      if (resultUpdateProduct?.errors) {\n        toast.error(<Notification text={'error'} />);\n      } else {\n        toast.success(<Notification text={'Product edited'} />);\n        fetchData();\n        close();\n      }\n      // console.log('resultUpdateProduct', resultUpdateProduct);\n    }\n  };\n\n  function editProductCallback() {\n    editProduct();\n  }\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Modal open={open} onClose={close}>\n        <StyledModal submitText={'Edit Product'} onSubmit={onSubmit}>\n          <ModalHeader title={`Edit ${product.productName} `} close={close} />\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Product Name\"\n                onChange={onChange}\n                value={values.productName}\n                variant=\"outlined\"\n                name=\"productName\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"S/N of Product\"\n                onChange={onChange}\n                value={values.serialNumber}\n                variant=\"outlined\"\n                name=\"serialNumber\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"PO Number\"\n                onChange={onChange}\n                value={values.PONumber}\n                variant=\"outlined\"\n                name=\"PONumber\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <MobileDatePicker\n                label=\"Warranty\"\n                openTo=\"year\"\n                views={['year', 'month', 'day']}\n                value={values.warranty}\n                name=\"warranty\"\n                onChange={newValue => {\n                  setFieldValue('warranty', newValue);\n                }}\n                renderInput={params => <TextField fullWidth {...params} />}\n              />\n            </Grid>\n            {allLocations ? (\n              <Grid item xs={12}>\n                <TextFieldSelect\n                  value={warehouse}\n                  onChange={event => {\n                    setWarehouse(event.target.value);\n                    setFieldValue('locationId', event.target.value);\n                  }}\n                  label=\"Select location\"\n                >\n                  <MenuItem disabled value={'Select location'}>\n                    Select location\n                  </MenuItem>\n                  {allLocations.map(location => (\n                    <MenuItem\n                      key={location.locationId}\n                      value={location.locationId}\n                    >\n                      {location.locationName}\n                    </MenuItem>\n                  ))}\n                </TextFieldSelect>\n              </Grid>\n            ) : null}\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Comment\"\n                onChange={onChange}\n                value={values.description}\n                variant=\"outlined\"\n                name=\"description\"\n                multiline\n                rows={4}\n              />\n            </Grid>\n            {specialProducts.includes(\n              values.productName?.toLowerCase()\n            ) ? (\n              <Grid item xs={12}>\n                <TextFieldSelect\n                  value={statusField}\n                  onChange={event => {\n                    setStatusField(event.target.value);\n                    setFieldValue('status', event.target.value);\n                  }}\n                  label={'Status'}\n                >\n                  <MenuItem disabled value={'Select Status'}>\n                    Select Status\n                  </MenuItem>\n                  <MenuItem value=\"Fault\">Fault</MenuItem>\n                  <MenuItem value=\"Operational\">Operational</MenuItem>\n                  <MenuItem value=\"Awaiting ATP\">Awaiting ATP</MenuItem>\n                </TextFieldSelect>\n              </Grid>\n            ) : null}\n          </Grid>\n        </StyledModal>\n      </Modal>\n    </LocalizationProvider>\n  );\n};\n\nexport default EditProductModal;\n\n/*\n\nlet resuktP = null;\nconst func = useCallback(async () => {\n  resuktP = await products.getProductById(userAction, product);\n  console.log('resuktP', resuktP);\n  setFieldValue('serialNumber', resuktP.serialNumber)\n  setFieldValue('productName', resuktP.productName)\n  setFieldValue('locationId', resuktP.locationId)\n  setFieldValue('productId', resuktP.productId)\n  setFieldValue('PONumber', resuktP.PONumber)\n  setFieldValue('warranty', resuktP.warranty)\n  setFieldValue('prodescriptionductName', resuktP.productName)\n  setFieldValue('status', resuktP.status)\n  setFieldValue('productName', resuktP.productName)\n  setFieldValue('productName', resuktP.productName)\n  setResult(resuktP);\n}, [product]);\n\nuseEffect(() => {\n  func()\n}, [func]);\n*/\n"]},"metadata":{},"sourceType":"module"}