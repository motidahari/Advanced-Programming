{"ast":null,"code":"export const fetchData = async (req, opt) => {\n  const result = await fetch(req, opt).then(async response => {\n    var _response$headers$get;\n\n    const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n    const data = isJson && (await response.json()); // check for error response\n\n    if (!response.ok) {\n      // get error message from body or default to response status\n      const error = data && data.errors || response.status;\n      return Promise.reject(error);\n    }\n\n    return data; // console.log(\"data\", data)\n  }).catch(errors => {\n    // console.error(errors);\n    return {\n      errors\n    };\n  });\n  return result;\n};","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/requests/fetchData.js"],"names":["fetchData","req","opt","result","fetch","then","response","isJson","headers","get","includes","data","json","ok","error","errors","status","Promise","reject","catch"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC3C,QAAMC,MAAM,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,GAAN,CAAL,CAClBG,IADkB,CACb,MAAMC,QAAN,IAAkB;AAAA;;AACtB,UAAMC,MAAM,4BAAGD,QAAQ,CAACE,OAAT,CACZC,GADY,CACR,cADQ,CAAH,0DAAG,sBAEXC,QAFW,CAEF,kBAFE,CAAf;AAGA,UAAMC,IAAI,GAAGJ,MAAM,KAAK,MAAMD,QAAQ,CAACM,IAAT,EAAX,CAAnB,CAJsB,CAMtB;;AACA,QAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB;AACA,YAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,MAAd,IAAyBT,QAAQ,CAACU,MAAhD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;;AACD,WAAOH,IAAP,CAZsB,CAatB;AACD,GAfkB,EAgBlBQ,KAhBkB,CAgBZJ,MAAM,IAAI;AACf;AACA,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD,GAnBkB,CAArB;AAoBA,SAAOZ,MAAP;AACD,CAtBM","sourcesContent":["export const fetchData = async (req, opt) => {\n  const result = await fetch(req, opt)\n    .then(async response => {\n      const isJson = response.headers\n        .get('content-type')\n        ?.includes('application/json');\n      const data = isJson && (await response.json());\n\n      // check for error response\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = (data && data.errors) || response.status;\n        return Promise.reject(error);\n      }\n      return data;\n      // console.log(\"data\", data)\n    })\n    .catch(errors => {\n      // console.error(errors);\n      return { errors };\n    });\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}