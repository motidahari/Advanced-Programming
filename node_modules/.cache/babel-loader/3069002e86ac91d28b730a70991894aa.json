{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/ProductsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Box, Button, MenuItem, TextField, Typography, Grid, ListSubheader } from '@mui/material';\nimport { useForm } from '../../hooks/useForm';\nimport products from './../../requests/products';\nimport ProductsTable from './ProductsTable';\nimport PageContainer from '../../components/PageContainer';\nimport AddProductsModal from './AddProductsModal';\nimport locations from '../../requests/locations';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport Banner from '../../components/Banner';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport GapsTable from './GapsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductsPage = () => {\n  _s();\n\n  const [warehouse, setWarehouse] = useState('');\n  const [country, setCountry] = useState('');\n  const [addModal, setAddModal] = useState(false);\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    state: allproducts,\n    error,\n    fetchData,\n    setState\n  } = useFetchData(products.getAllProducts); // console.log('allproducts', allproducts);\n\n  const {\n    state: allCountries\n  } = useFetchData(locations.getAllCountries); // console.log('allCountries', allCountries);\n\n  const {\n    state: allLocations,\n    setState: setLocationState\n  } = useFetchData(locations.getAllLocations); // console.log('allLocations', allLocations);\n\n  const getLocationByCountry = async countryId => {\n    const country = {\n      countryId: countryId\n    }; // console.log('country', country);\n\n    const result = await locations.getLocationsByCountryId(userAction, country);\n\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n\n  const getLocations = async countryId => {\n    const result = await locations.getAllLocations(userAction);\n\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n\n  useEffect(() => {\n    if (country.length !== 0) {\n      if (country === 'None') {\n        getLocations();\n      } else {\n        getLocationByCountry(country);\n      }\n    }\n  }, [country]);\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values\n  } = useForm(searchCallback, {\n    locationId: '',\n    countryId: '',\n    search: ''\n  });\n\n  const searchProduct = async () => {\n    // console.log('values', values);\n    const resultSearchProduct = await products.getProductByParams(userAction, values);\n    setState(resultSearchProduct); // console.log('resultSearchProduct', resultSearchProduct);\n  };\n\n  function searchCallback() {\n    searchProduct();\n  }\n\n  const handleAddModal = () => {\n    setAddModal(!addModal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeaderContainer, {\n        children: [country ? /*#__PURE__*/_jsxDEV(Banner, {\n          country: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Banner, {\n          country: ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            m: 1\n          },\n          variant: \"h4\",\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 1\n          },\n          children: (user === null || user === void 0 ? void 0 : user.permission) !== 'Viewer' ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddModal,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Product\",\n              onChange: onChange,\n              value: values.search,\n              variant: \"outlined\",\n              name: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: country,\n              onChange: event => {\n                setFieldValue('countryId', event.target.value);\n                setCountry(event.target.value);\n              },\n              label: 'Select country',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), allCountries ? allCountries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.countryId,\n                children: country.countryName\n              }, country.countryId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: warehouse,\n              onChange: event => {\n                setFieldValue('locationId', event.target.value);\n                setWarehouse(event.target.value);\n              },\n              label: 'Select Location',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), allLocations ? allLocations === null || allLocations === void 0 ? void 0 : allLocations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: location.locationId,\n                children: location.locationName\n              }, location.locationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            sx: {\n              alignSelf: 'center'\n            },\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"outlined\",\n              onClick: onSubmit,\n              sx: {\n                p: '14px'\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProductsTable, {\n          error: error,\n          fetchData: fetchData,\n          allproducts: allproducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddProductsModal, {\n          fetchData: fetchData,\n          open: addModal,\n          close: handleAddModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), warehouse ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(GapsTable, {\n            warehouse: warehouse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductsPage, \"g3oD54U4EdktTUneHfhPLZq/BkQ=\", false, function () {\n  return [useFetchData, useFetchData, useFetchData, useForm];\n});\n\n_c = ProductsPage;\nexport default ProductsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/ProductsPage.jsx"],"names":["React","useState","useContext","useEffect","AuthContext","Box","Button","MenuItem","TextField","Typography","Grid","ListSubheader","useForm","products","ProductsTable","PageContainer","AddProductsModal","locations","useFetchData","TextFieldSelect","Banner","PageHeaderContainer","GapsTable","ProductsPage","warehouse","setWarehouse","country","setCountry","addModal","setAddModal","user","token","userAction","userId","id","state","allproducts","error","fetchData","setState","getAllProducts","allCountries","getAllCountries","allLocations","setLocationState","getAllLocations","getLocationByCountry","countryId","result","getLocationsByCountryId","length","getLocations","onChange","onSubmit","setFieldValue","values","searchCallback","locationId","search","searchProduct","resultSearchProduct","getProductByParams","handleAddModal","m","permission","mt","event","target","value","map","countryName","location","locationName","alignSelf","p"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport {\n  Box,\n  Button,\n  MenuItem,\n  TextField,\n  Typography,\n  Grid,\n  ListSubheader,\n} from '@mui/material';\nimport { useForm } from '../../hooks/useForm';\nimport products from './../../requests/products';\nimport ProductsTable from './ProductsTable';\nimport PageContainer from '../../components/PageContainer';\nimport AddProductsModal from './AddProductsModal';\nimport locations from '../../requests/locations';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport Banner from '../../components/Banner';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport GapsTable from './GapsTable';\n\nconst ProductsPage = () => {\n  const [warehouse, setWarehouse] = useState('');\n  const [country, setCountry] = useState('');\n  const [addModal, setAddModal] = useState(false);\n  const { user, token } = useContext(AuthContext);\n\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const {\n    state: allproducts,\n    error,\n    fetchData,\n    setState,\n  } = useFetchData(products.getAllProducts);\n  // console.log('allproducts', allproducts);\n\n  const { state: allCountries } = useFetchData(locations.getAllCountries);\n  // console.log('allCountries', allCountries);\n\n  const { state: allLocations, setState: setLocationState } = useFetchData(\n    locations.getAllLocations\n  );\n  // console.log('allLocations', allLocations);\n\n  const getLocationByCountry = async countryId => {\n    const country = {\n      countryId: countryId,\n    };\n    // console.log('country', country);\n    const result = await locations.getLocationsByCountryId(userAction, country);\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n  const getLocations = async countryId => {\n    const result = await locations.getAllLocations(userAction);\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n  useEffect(() => {\n    if (country.length !== 0) {\n      if (country === 'None') {\n        getLocations();\n      } else {\n        getLocationByCountry(country);\n      }\n    }\n  }, [country]);\n\n  const { onChange, onSubmit, setFieldValue, values } = useForm(\n    searchCallback,\n    {\n      locationId: '',\n      countryId: '',\n      search: '',\n    }\n  );\n\n  const searchProduct = async () => {\n    // console.log('values', values);\n    const resultSearchProduct = await products.getProductByParams(\n      userAction,\n      values\n    );\n    setState(resultSearchProduct);\n    // console.log('resultSearchProduct', resultSearchProduct);\n  };\n\n  function searchCallback() {\n    searchProduct();\n  }\n\n  const handleAddModal = () => {\n    setAddModal(!addModal);\n  };\n\n  return (\n    <>\n      <PageContainer>\n        <PageHeaderContainer>\n          {country ? <Banner country={country} /> : <Banner country={''} />}\n\n          <Typography sx={{ m: 1 }} variant=\"h4\">\n            Products\n          </Typography>\n          <Box sx={{ m: 1 }}>\n            {user?.permission !== 'Viewer' ? (\n              <Button\n                onClick={handleAddModal}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Add Product\n              </Button>\n            ) : null}\n          </Box>\n        </PageHeaderContainer>\n\n        <Box sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={5}>\n              <TextField\n                fullWidth\n                label=\"Search Product\"\n                onChange={onChange}\n                value={values.search}\n                variant=\"outlined\"\n                name=\"search\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={country}\n                onChange={event => {\n                  setFieldValue('countryId', event.target.value);\n                  setCountry(event.target.value);\n                }}\n                label={'Select country'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Country</ListSubheader>\n                {allCountries\n                  ? allCountries.map(country => (\n                      <MenuItem\n                        key={country.countryId}\n                        value={country.countryId}\n                      >\n                        {country.countryName}\n                      </MenuItem>\n                    ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={warehouse}\n                onChange={event => {\n                  setFieldValue('locationId', event.target.value);\n                  setWarehouse(event.target.value);\n                }}\n                label={'Select Location'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Location</ListSubheader>\n                {allLocations\n                  ? allLocations?.map(location => (\n                      <MenuItem\n                        key={location.locationId}\n                        value={location.locationId}\n                      >\n                        {location.locationName}\n                      </MenuItem>\n                    ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid sx={{ alignSelf: 'center' }} item xs={1}>\n              <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={onSubmit}\n                sx={{ p: '14px' }}\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Box sx={{ mt: 3 }}>\n          <ProductsTable\n            error={error}\n            fetchData={fetchData}\n            allproducts={allproducts}\n          />\n          <AddProductsModal\n            fetchData={fetchData}\n            open={addModal}\n            close={handleAddModal}\n          />\n        </Box>\n\n        {warehouse ? (\n          <>\n            <Box sx={{ mt: 3 }}>\n              <GapsTable warehouse={warehouse} />\n            </Box>\n          </>\n        ) : null}\n      </PageContainer>\n    </>\n  );\n};\n\nexport default ProductsPage;\n"]},"metadata":{},"sourceType":"module"}