{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Employees/OfficesTable.jsx\";\nimport React from 'react';\nimport { TableCell, TableRow, Typography } from '@mui/material';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Office'\n}];\n\nconst OfficesTable = _ref => {\n  let {\n    allOffices,\n    error\n  } = _ref;\n  return allOffices ? /*#__PURE__*/_jsxDEV(StyledTable, {\n    columns: columns,\n    children: allOffices.length > 0 ? allOffices.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.officeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, row.officeId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    children: \"error fetching getAllEmployees\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(TableSkeleton, {\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OfficesTable;\nexport default OfficesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfficesTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Employees/OfficesTable.jsx"],"names":["React","TableCell","TableRow","Typography","StyledTable","TableSkeleton","columns","title","OfficesTable","allOffices","error","length","map","row","officeName","officeId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,eAAhD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAD,CAAhB;;AAEA,MAAMC,YAAY,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA0B;AAC9C,SAAOD,UAAU,gBACf,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,OAAtB;AAAA,cACGG,UAAU,CAACE,MAAX,GAAoB,CAApB,GACCF,UAAU,CAACG,GAAX,CAAeC,GAAG,iBAChB,QAAC,QAAD;AAAA,6BACE,QAAC,SAAD;AAAA,kBAAYA,GAAG,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF,OAAeD,GAAG,CAACE,QAAnB;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAOC,QAAC,QAAD;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADe,GAcbL,KAAK,gBACP,QAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO,gBAGP,QAAC,aAAD;AAAe,IAAA,OAAO,EAAEJ;AAAxB;AAAA;AAAA;AAAA;AAAA,UAjBF;AAmBD,CApBD;;KAAME,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { TableCell, TableRow, Typography } from '@mui/material';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\n\nconst columns = [{ title: 'Office' }];\n\nconst OfficesTable = ({ allOffices, error }) => {\n  return allOffices ? (\n    <StyledTable columns={columns}>\n      {allOffices.length > 0 ? (\n        allOffices.map(row => (\n          <TableRow key={row.officeId}>\n            <TableCell>{row.officeName}</TableCell>\n          </TableRow>\n        ))\n      ) : (\n        <TableRow>\n          <TableCell>No results</TableCell>\n        </TableRow>\n      )}\n    </StyledTable>\n  ) : error ? (\n    <Typography variant=\"h4\">error fetching getAllEmployees</Typography>\n  ) : (\n    <TableSkeleton columns={columns} />\n  );\n};\n\nexport default OfficesTable;\n"]},"metadata":{},"sourceType":"module"}