{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Employees/EmployeesTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EditEmployeeModal from './EditEmployeeModal';\nimport { TableCell, TableRow, IconButton, Tooltip, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Office'\n}, {\n  title: 'Name'\n}, {\n  title: 'Screens'\n}, {\n  title: 'TVs'\n}, {\n  title: 'Dockings'\n}, {\n  title: 'Phones'\n}, {\n  title: 'Computers'\n}, {\n  title: 'Leptops'\n}, {\n  title: 'Printers'\n}, {\n  title: 'Headsets'\n}, {\n  title: 'WebCamera'\n}, {\n  title: 'Actions'\n}];\n\nconst EmployeesTable = _ref => {\n  _s();\n\n  let {\n    allOffices,\n    allEmployees,\n    error,\n    fetchData\n  } = _ref;\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [employee, setEmployee] = useState(false);\n\n  const handleModal = () => setOpenEditModal(!openEditModal);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [allEmployees ? /*#__PURE__*/_jsxDEV(StyledTable, {\n      columns: columns,\n      children: allEmployees.length > 0 ? allEmployees.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.officeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.employeeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.screen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.tv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.dockingStation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.ipPhone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.desktopComputer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.laptop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.printer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.headset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: row.webCamera\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Edit\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                setEmployee(row);\n                handleModal();\n              },\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, row.employeeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"No results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        m: 1\n      },\n      variant: \"body1\",\n      children: \"error fetching getAllEmployees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableSkeleton, {\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), employee ? /*#__PURE__*/_jsxDEV(EditEmployeeModal, {\n      open: openEditModal,\n      close: handleModal,\n      allOffices: allOffices,\n      employee: employee,\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(EmployeesTable, \"vtiLAUYwDQ6PY42ZMkpG44CZmu0=\");\n\n_c = EmployeesTable;\nexport default EmployeesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Employees/EmployeesTable.jsx"],"names":["React","useState","EditEmployeeModal","TableCell","TableRow","IconButton","Tooltip","Typography","EditIcon","StyledTable","TableSkeleton","columns","title","EmployeesTable","allOffices","allEmployees","error","fetchData","openEditModal","setOpenEditModal","employee","setEmployee","handleModal","length","map","row","officeName","employeeName","screen","tv","dockingStation","ipPhone","desktopComputer","laptop","printer","headset","webCamera","employeeId","m"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,QAMO,eANP;AAOA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADc,EAEd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFc,EAGd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHc,EAId;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJc,EAKd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALc,EAMd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CANc,EAOd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAPc,EAQd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CARc,EASd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CATc,EAUd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAVc,EAWd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAXc,EAYd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAZc,CAAhB;;AAeA,MAAMC,cAAc,GAAG,QAAoD;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA;AAAnC,GAAmD;AACzE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMqB,WAAW,GAAG,MAAMH,gBAAgB,CAAC,CAACD,aAAF,CAA1C;;AAEA,sBACE;AAAA,eACGH,YAAY,gBACX,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,OAAtB;AAAA,gBACGI,YAAY,CAACQ,MAAb,GAAsB,CAAtB,GACCR,YAAY,CAACS,GAAb,CAAiBC,GAAG,iBAClB,QAAC,QAAD;AAAA,gCACE,QAAC,SAAD;AAAA,oBAAYA,GAAG,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,oBAAYD,GAAG,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA,oBAAYF,GAAG,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA,oBAAYH,GAAG,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,SAAD;AAAA,oBAAYJ,GAAG,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,SAAD;AAAA,oBAAYL,GAAG,CAACM;AAAhB;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,SAAD;AAAA,oBAAYN,GAAG,CAACO;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,SAAD;AAAA,oBAAYP,GAAG,CAACQ;AAAhB;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,SAAD;AAAA,oBAAYR,GAAG,CAACS;AAAhB;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,SAAD;AAAA,oBAAYT,GAAG,CAACU;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,SAAD;AAAA,oBAAYV,GAAG,CAACW;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,SAAD;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,MAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,OAAO,EAAE,MAAM;AACbf,gBAAAA,WAAW,CAACI,GAAD,CAAX;AACAH,gBAAAA,WAAW;AACZ,eAJH;AAKE,4BAAW,QALb;AAAA,qCAOE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA,SAAeG,GAAG,CAACY,UAAnB;AAAA;AAAA;AAAA;AAAA,cADF,CADD,gBA8BC,QAAC,QAAD;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA/BJ;AAAA;AAAA;AAAA;AAAA,YADW,GAqCTrB,KAAK,gBACP,QAAC,UAAD;AAAY,MAAA,EAAE,EAAE;AAAEsB,QAAAA,CAAC,EAAE;AAAL,OAAhB;AAA0B,MAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAKP,QAAC,aAAD;AAAe,MAAA,OAAO,EAAE3B;AAAxB;AAAA;AAAA;AAAA;AAAA,YA3CJ,EA8CGS,QAAQ,gBACP,QAAC,iBAAD;AACE,MAAA,IAAI,EAAEF,aADR;AAEE,MAAA,KAAK,EAAEI,WAFT;AAGE,MAAA,UAAU,EAAER,UAHd;AAIE,MAAA,QAAQ,EAAEM,QAJZ;AAKE,MAAA,SAAS,EAAEH;AALb;AAAA;AAAA;AAAA;AAAA,YADO,GAQL,IAtDN;AAAA,kBADF;AA0DD,CA/DD;;GAAMJ,c;;KAAAA,c;AAiEN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport EditEmployeeModal from './EditEmployeeModal';\nimport {\n  TableCell,\n  TableRow,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\n\nconst columns = [\n  { title: 'Office' },\n  { title: 'Name' },\n  { title: 'Screens' },\n  { title: 'TVs' },\n  { title: 'Dockings' },\n  { title: 'Phones' },\n  { title: 'Computers' },\n  { title: 'Leptops' },\n  { title: 'Printers' },\n  { title: 'Headsets' },\n  { title: 'WebCamera' },\n  { title: 'Actions' },\n];\n\nconst EmployeesTable = ({ allOffices, allEmployees, error, fetchData }) => {\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [employee, setEmployee] = useState(false);\n  const handleModal = () => setOpenEditModal(!openEditModal);\n\n  return (\n    <>\n      {allEmployees ? (\n        <StyledTable columns={columns}>\n          {allEmployees.length > 0 ? (\n            allEmployees.map(row => (\n              <TableRow key={row.employeeId}>\n                <TableCell>{row.officeName}</TableCell>\n                <TableCell>{row.employeeName}</TableCell>\n                <TableCell>{row.screen}</TableCell>\n                <TableCell>{row.tv}</TableCell>\n                <TableCell>{row.dockingStation}</TableCell>\n                <TableCell>{row.ipPhone}</TableCell>\n                <TableCell>{row.desktopComputer}</TableCell>\n                <TableCell>{row.laptop}</TableCell>\n                <TableCell>{row.printer}</TableCell>\n                <TableCell>{row.headset}</TableCell>\n                <TableCell>{row.webCamera}</TableCell>\n                <TableCell>\n                  <Tooltip title=\"Edit\">\n                    <IconButton\n                      onClick={() => {\n                        setEmployee(row);\n                        handleModal();\n                      }}\n                      aria-label=\"delete\"\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell>No results</TableCell>\n            </TableRow>\n          )}\n        </StyledTable>\n      ) : error ? (\n        <Typography sx={{ m: 1 }} variant=\"body1\">\n          error fetching getAllEmployees\n        </Typography>\n      ) : (\n        <TableSkeleton columns={columns} />\n      )}\n\n      {employee ? (\n        <EditEmployeeModal\n          open={openEditModal}\n          close={handleModal}\n          allOffices={allOffices}\n          employee={employee}\n          fetchData={fetchData}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default EmployeesTable;\n"]},"metadata":{},"sourceType":"module"}