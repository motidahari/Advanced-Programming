{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/SignIn/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AuthContext } from './../../context/auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport { Avatar, Button, CssBaseline, TextField, Grid, Box, Typography, Container } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { AuthContainer } from '../../styles/styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const context = useContext(AuthContext);\n  let navigate = useNavigate();\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    email: 'moti@gmail.com',\n    password: '123456789'\n  });\n\n  const loginUser = async () => {\n    // console.log('values', values);\n    const resultLogin = await users.login(values); // console.log('resultLogin', resultLogin);\n\n    if (resultLogin !== null && resultLogin !== void 0 && resultLogin.errors) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: resultLogin === null || resultLogin === void 0 ? void 0 : resultLogin.errors[0].msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, this));\n    } else {\n      context.login(resultLogin.user);\n      toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'logged in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this));\n      navigate('/products');\n    }\n  };\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: onSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          onChange: onChange,\n          autoFocus: true,\n          value: values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          onChange: onChange,\n          autoComplete: \"current-password\",\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/signup`,\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"Ml+t9RjQzf7FA4u7cx/eh6sZleU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/SignIn/SignIn.jsx"],"names":["React","useContext","AuthContext","Link","useNavigate","useForm","users","toast","Notification","Avatar","Button","CssBaseline","TextField","Grid","Box","Typography","Container","LockOutlinedIcon","AuthContainer","SignIn","context","navigate","onChange","onSubmit","values","loginUserCallback","email","password","loginUser","resultLogin","login","errors","error","msg","user","success","m","bgcolor","mt","mb"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { AuthContext } from './../../context/auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { AuthContainer } from '../../styles/styledComponents';\n\nconst SignIn = () => {\n  const context = useContext(AuthContext);\n  let navigate = useNavigate();\n\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: 'moti@gmail.com',\n    password: '123456789',\n  });\n\n\n  const loginUser = async () => {\n    // console.log('values', values);\n\n    const resultLogin = await users.login(values);\n    // console.log('resultLogin', resultLogin);\n\n    if (resultLogin?.errors) {\n      toast.error(<Notification text={resultLogin?.errors[0].msg} />);\n    } else {\n      context.login(resultLogin.user);\n      toast.success(<Notification text={'logged in'} />);\n      navigate('/products');\n    }\n  };\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <AuthContainer>\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={onSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={onChange}\n            autoFocus\n            value={values.email}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            onChange={onChange}\n            autoComplete=\"current-password\"\n            value={values.password}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to={`/signup`}>{\"Don't have an account? Sign Up\"}</Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </AuthContainer>\n    </Container>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}