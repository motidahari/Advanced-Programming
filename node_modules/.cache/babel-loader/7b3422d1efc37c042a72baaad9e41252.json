{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/SignUp/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport { Avatar, Button, CssBaseline, TextField, Grid, Box, Typography, Container } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { AuthContainer } from '../../styles/styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(registerUserCallback, {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const registerUser = async () => {\n    if (values.firstName.length === 0 || values.lastName.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include a full user name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this));\n    } else if (values.password === values.confirmPassword) {\n      // console.log('Password matched');\n      const User = {\n        name: `${values.firstName} ${values.lastName}`,\n        email: values.email,\n        password: values.password\n      }; // console.log('User', JSON.stringify(User));\n\n      const resultSignUp = await users.registration(User); // console.log('dta', resultSignUp);\n\n      if (resultSignUp !== null && resultSignUp !== void 0 && resultSignUp.errors) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: resultSignUp === null || resultSignUp === void 0 ? void 0 : resultSignUp.errors[0].msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this));\n      } else {\n        toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Signed up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }, this));\n        navigate('/signin');\n      }\n    } else {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Password does not match'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this));\n    }\n  };\n\n  function registerUserCallback() {\n    registerUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        onSubmit: onSubmit,\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"given-name\",\n              name: \"firstName\",\n              required: true,\n              fullWidth: true,\n              id: \"firstName\",\n              label: \"First Name\",\n              autoFocus: true,\n              onChange: onChange,\n              value: values.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              id: \"lastName\",\n              label: \"Last Name\",\n              name: \"lastName\",\n              autoComplete: \"family-name\",\n              onChange: onChange,\n              value: values.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              onChange: onChange,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"new-password\",\n              onChange: onChange,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              name: \"confirmPassword\",\n              label: \"ConfirmPassword\",\n              type: \"password\",\n              id: \"confirmPassword\",\n              autoComplete: \"new-password\",\n              onChange: onChange,\n              value: values.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/signin`,\n              children: 'Already have an account?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"bcPOfDpgsITsPTxb+f/Ybzz9hLM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/SignUp/SignUp.jsx"],"names":["React","Link","useNavigate","useForm","users","toast","Notification","Avatar","Button","CssBaseline","TextField","Grid","Box","Typography","Container","LockOutlinedIcon","AuthContainer","SignUp","navigate","onChange","onSubmit","values","registerUserCallback","firstName","lastName","email","password","confirmPassword","registerUser","length","error","User","name","resultSignUp","registration","errors","msg","success","m","bgcolor","mt","mb"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { AuthContainer } from '../../styles/styledComponents';\n\nconst SignUp = () => {\n  let navigate = useNavigate();\n  const { onChange, onSubmit, values } = useForm(registerUserCallback, {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const registerUser = async () => {\n    if (values.firstName.length === 0 || values.lastName.length === 0) {\n      toast.error(<Notification text={'Please include a full user name'} />);\n    } else if (values.password === values.confirmPassword) {\n      // console.log('Password matched');\n      const User = {\n        name: `${values.firstName} ${values.lastName}`,\n        email: values.email,\n        password: values.password,\n      };\n      // console.log('User', JSON.stringify(User));\n      const resultSignUp = await users.registration(User);\n      // console.log('dta', resultSignUp);\n\n      if (resultSignUp?.errors) {\n        toast.error(<Notification text={resultSignUp?.errors[0].msg} />);\n      } else {\n        toast.success(<Notification text={'Signed up'} />);\n        navigate('/signin');\n      }\n    } else {\n      toast.error(<Notification text={'Password does not match'} />);\n    }\n  };\n\n  function registerUserCallback() {\n    registerUser();\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <AuthContainer>\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={onSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={onChange}\n                value={values.firstName}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"family-name\"\n                onChange={onChange}\n                value={values.lastName}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={onChange}\n                value={values.email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                onChange={onChange}\n                value={values.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                label=\"ConfirmPassword\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"new-password\"\n                onChange={onChange}\n                value={values.confirmPassword}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to={`/signin`}>{'Already have an account?'}</Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </AuthContainer>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}