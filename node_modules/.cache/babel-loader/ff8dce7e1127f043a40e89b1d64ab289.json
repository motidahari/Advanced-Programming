{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/AmplifiersTraffic/AmplifiersTrafficTable.jsx\";\nimport React from 'react';\nimport { TableCell, TableRow, Typography } from '@mui/material';\nimport moment from 'moment';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Actions'\n}, {\n  title: 'Product Name'\n}, {\n  title: 'Current Location'\n}, {\n  title: 'status'\n}, {\n  title: 'PO Number'\n}, {\n  title: 'S/N of Product'\n}, {\n  title: 'Description'\n}, {\n  title: 'Date'\n}, {\n  title: 'User Action'\n}];\nconst StyledDateTableCell = {\n  minWidth: 90\n};\n\nconst AmplifiersTrafficTable = _ref => {\n  let {\n    allAmplifiersTraffic,\n    error\n  } = _ref;\n  return allAmplifiersTraffic ? /*#__PURE__*/_jsxDEV(StyledTable, {\n    columns: columns,\n    children: allAmplifiersTraffic.length > 0 ? allAmplifiersTraffic.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.productName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.locationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.PONumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.serialNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        sx: StyledDateTableCell,\n        children: moment(row.date).format('YYYY-MM-DD')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, row.logId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n    sx: {\n      m: 1\n    },\n    variant: \"body1\",\n    children: \"error fetching GetAllLogsMonitoringAmplifiers\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(TableSkeleton, {\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AmplifiersTrafficTable;\nexport default AmplifiersTrafficTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmplifiersTrafficTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/AmplifiersTraffic/AmplifiersTrafficTable.jsx"],"names":["React","TableCell","TableRow","Typography","moment","StyledTable","TableSkeleton","columns","title","StyledDateTableCell","minWidth","AmplifiersTrafficTable","allAmplifiersTraffic","error","length","map","row","action","productName","locationName","status","PONumber","serialNumber","description","date","format","name","logId","m"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,eAAhD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADc,EAEd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFc,EAGd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHc,EAId;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJc,EAKd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALc,EAMd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CANc,EAOd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAPc,EAQd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CARc,EASd;AAAEA,EAAAA,KAAK,EAAE;AAAT,CATc,CAAhB;AAWA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAA5B;;AAEA,MAAMC,sBAAsB,GAAG,QAAqC;AAAA,MAApC;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,GAAoC;AAClE,SAAOD,oBAAoB,gBACzB,QAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,OAAtB;AAAA,cACGK,oBAAoB,CAACE,MAArB,GAA8B,CAA9B,GACCF,oBAAoB,CAACG,GAArB,CAAyBC,GAAG,iBAC1B,QAAC,QAAD;AAAA,8BACE,QAAC,SAAD;AAAA,kBAAYA,GAAG,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBAAYD,GAAG,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA,kBAAYF,GAAG,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,SAAD;AAAA,kBAAYH,GAAG,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,SAAD;AAAA,kBAAYJ,GAAG,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,SAAD;AAAA,kBAAYL,GAAG,CAACM;AAAhB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,SAAD;AAAA,kBAAYN,GAAG,CAACO;AAAhB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAEd,mBAAf;AAAA,kBACGL,MAAM,CAACY,GAAG,CAACQ,IAAL,CAAN,CAAiBC,MAAjB,CAAwB,YAAxB;AADH;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,SAAD;AAAA,kBAAYT,GAAG,CAACU;AAAhB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA,OAAeV,GAAG,CAACW,KAAnB;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAiBC,QAAC,QAAD;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,UADyB,GAwBvBd,KAAK,gBACP,QAAC,UAAD;AAAY,IAAA,EAAE,EAAE;AAAEe,MAAAA,CAAC,EAAE;AAAL,KAAhB;AAA0B,IAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO,gBAKP,QAAC,aAAD;AAAe,IAAA,OAAO,EAAErB;AAAxB;AAAA;AAAA;AAAA;AAAA,UA7BF;AA+BD,CAhCD;;KAAMI,sB;AAkCN,eAAeA,sBAAf","sourcesContent":["import React from 'react';\nimport { TableCell, TableRow, Typography } from '@mui/material';\nimport moment from 'moment';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\n\nconst columns = [\n  { title: 'Actions' },\n  { title: 'Product Name' },\n  { title: 'Current Location' },\n  { title: 'status' },\n  { title: 'PO Number' },\n  { title: 'S/N of Product' },\n  { title: 'Description' },\n  { title: 'Date' },\n  { title: 'User Action' },\n];\nconst StyledDateTableCell = { minWidth: 90 };\n\nconst AmplifiersTrafficTable = ({ allAmplifiersTraffic, error }) => {\n  return allAmplifiersTraffic ? (\n    <StyledTable columns={columns}>\n      {allAmplifiersTraffic.length > 0 ? (\n        allAmplifiersTraffic.map(row => (\n          <TableRow key={row.logId}>\n            <TableCell>{row.action}</TableCell>\n            <TableCell>{row.productName}</TableCell>\n            <TableCell>{row.locationName}</TableCell>\n            <TableCell>{row.status}</TableCell>\n            <TableCell>{row.PONumber}</TableCell>\n            <TableCell>{row.serialNumber}</TableCell>\n            <TableCell>{row.description}</TableCell>\n            <TableCell sx={StyledDateTableCell}>\n              {moment(row.date).format('YYYY-MM-DD')}\n            </TableCell>\n            <TableCell>{row.name}</TableCell>\n          </TableRow>\n        ))\n      ) : (\n        <TableRow>\n          <TableCell>No results</TableCell>\n        </TableRow>\n      )}\n    </StyledTable>\n  ) : error ? (\n    <Typography sx={{ m: 1 }} variant=\"body1\">\n      error fetching GetAllLogsMonitoringAmplifiers\n    </Typography>\n  ) : (\n    <TableSkeleton columns={columns} />\n  );\n};\n\nexport default AmplifiersTrafficTable;\n"]},"metadata":{},"sourceType":"module"}