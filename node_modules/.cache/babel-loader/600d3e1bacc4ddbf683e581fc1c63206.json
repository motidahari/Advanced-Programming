{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/AmplifiersMonitoring/AmplifiersMonitoringPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { useForm } from '../../hooks/useForm';\nimport { Box, Button, MenuItem, TextField, Typography, Grid, ListSubheader } from '@mui/material';\nimport PageContainer from '../../components/PageContainer';\nimport AmplifiersMonitoringTable from './AmplifiersMonitoringTable';\nimport locations from '../../requests/locations';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport logs from './../../requests/logs';\nimport Banner from '../../components/Banner';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AmplifiersMonitoringPage = () => {\n  _s();\n\n  const [warehouse, setWarehouse] = useState('');\n  const [country, setCountry] = useState('');\n  const {\n    state: allCountries\n  } = useFetchData(locations.getAllCountries);\n  const {\n    state: allLocations,\n    setState: setLocationState\n  } = useFetchData(locations.getAllLocations);\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    state: allAmplifiersMonitoring,\n    error,\n    setState\n  } = useFetchData(logs.GetAllLogsMonitoringAmplifiers);\n\n  const getLocationByCountry = async countryId => {\n    const country = {\n      countryId: countryId\n    }; // console.log('country', country);\n\n    const result = await locations.getLocationsByCountryId(userAction, country);\n\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n\n  useEffect(() => {\n    if (country.length !== 0) {\n      getLocationByCountry(country);\n    }\n  }, [country]);\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values\n  } = useForm(searchCallback, {\n    locationId: '',\n    countryId: '',\n    search: ''\n  });\n\n  const searchLogs = async () => {\n    // console.log('search logs values', values);\n    const resultGetAllProductsBySearch = await logs.GetAllLogsProductsAmplifiersMonitoringByParams(userAction, values);\n    setState(resultGetAllProductsBySearch); // console.log('resultGetAllProductsBySearch', resultGetAllProductsBySearch);\n  };\n\n  function searchCallback() {\n    searchLogs();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [country ? /*#__PURE__*/_jsxDEV(Banner, {\n        country: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(Banner, {\n        country: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(PageHeaderContainer, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            m: 1\n          },\n          variant: \"h4\",\n          children: \"Amplifiers Monitoring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Product\",\n              onChange: onChange,\n              value: values.search,\n              variant: \"outlined\",\n              name: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: country,\n              onChange: event => {\n                setFieldValue('countryId', event.target.value);\n                setCountry(event.target.value);\n              },\n              label: 'Select country',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), allCountries ? allCountries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.countryId,\n                children: country.countryName\n              }, country.countryId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: warehouse,\n              onChange: event => {\n                setFieldValue('locationId', event.target.value);\n                setWarehouse(event.target.value);\n              },\n              label: 'Select Location',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), allLocations ? allLocations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: location.locationId,\n                children: location.locationName\n              }, location.locationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            sx: {\n              alignSelf: 'center'\n            },\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"outlined\",\n              onClick: onSubmit,\n              sx: {\n                p: '14px'\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(AmplifiersMonitoringTable, {\n          error: error,\n          allAmplifiersMonitoring: allAmplifiersMonitoring\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AmplifiersMonitoringPage, \"4UKrPUQuSaxW+cTEAVzkBTbcab4=\", false, function () {\n  return [useFetchData, useFetchData, useFetchData, useForm];\n});\n\n_c = AmplifiersMonitoringPage;\nexport default AmplifiersMonitoringPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmplifiersMonitoringPage\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/AmplifiersMonitoring/AmplifiersMonitoringPage.jsx"],"names":["React","useState","useContext","useEffect","AuthContext","useForm","Box","Button","MenuItem","TextField","Typography","Grid","ListSubheader","PageContainer","AmplifiersMonitoringTable","locations","useFetchData","TextFieldSelect","logs","Banner","PageHeaderContainer","AmplifiersMonitoringPage","warehouse","setWarehouse","country","setCountry","state","allCountries","getAllCountries","allLocations","setState","setLocationState","getAllLocations","user","token","userAction","userId","id","allAmplifiersMonitoring","error","GetAllLogsMonitoringAmplifiers","getLocationByCountry","countryId","result","getLocationsByCountryId","length","onChange","onSubmit","setFieldValue","values","searchCallback","locationId","search","searchLogs","resultGetAllProductsBySearch","GetAllLogsProductsAmplifiersMonitoringByParams","m","mt","event","target","value","map","countryName","location","locationName","alignSelf","p"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { useForm } from '../../hooks/useForm';\nimport {\n  Box,\n  Button,\n  MenuItem,\n  TextField,\n  Typography,\n  Grid,\n  ListSubheader,\n} from '@mui/material';\nimport PageContainer from '../../components/PageContainer';\nimport AmplifiersMonitoringTable from './AmplifiersMonitoringTable';\nimport locations from '../../requests/locations';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport logs from './../../requests/logs';\nimport Banner from '../../components/Banner';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\n\nconst AmplifiersMonitoringPage = () => {\n  const [warehouse, setWarehouse] = useState('');\n  const [country, setCountry] = useState('');\n  const { state: allCountries } = useFetchData(locations.getAllCountries);\n  const { state: allLocations, setState: setLocationState } = useFetchData(\n    locations.getAllLocations\n  );\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n  const {\n    state: allAmplifiersMonitoring,\n    error,\n    setState,\n  } = useFetchData(logs.GetAllLogsMonitoringAmplifiers);\n\n  const getLocationByCountry = async countryId => {\n    const country = {\n      countryId: countryId,\n    };\n    // console.log('country', country);\n    const result = await locations.getLocationsByCountryId(userAction, country);\n    if (result.length > 0) {\n      setLocationState(result);\n    } else {\n      setLocationState([]);\n    }\n  };\n\n  useEffect(() => {\n    if (country.length !== 0) {\n      getLocationByCountry(country);\n    }\n  }, [country]);\n\n  const { onChange, onSubmit, setFieldValue, values } = useForm(\n    searchCallback,\n    {\n      locationId: '',\n      countryId: '',\n      search: '',\n    }\n  );\n\n  const searchLogs = async () => {\n    // console.log('search logs values', values);\n    const resultGetAllProductsBySearch =\n      await logs.GetAllLogsProductsAmplifiersMonitoringByParams(\n        userAction,\n        values\n      );\n    setState(resultGetAllProductsBySearch);\n    // console.log('resultGetAllProductsBySearch', resultGetAllProductsBySearch);\n  };\n\n  function searchCallback() {\n    searchLogs();\n  }\n\n  return (\n    <>\n      <PageContainer>\n        {country ? <Banner country={country} /> : <Banner country={''} />}\n        <PageHeaderContainer>\n          <Typography sx={{ m: 1 }} variant=\"h4\">\n            Amplifiers Monitoring\n          </Typography>\n        </PageHeaderContainer>\n\n        <Box sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={5}>\n              <TextField\n                fullWidth\n                label=\"Search Product\"\n                onChange={onChange}\n                value={values.search}\n                variant=\"outlined\"\n                name=\"search\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={country}\n                onChange={event => {\n                  setFieldValue('countryId', event.target.value);\n                  setCountry(event.target.value);\n                }}\n                label={'Select country'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Country</ListSubheader>\n                {allCountries\n                  ? allCountries.map(country => (\n                      <MenuItem\n                        key={country.countryId}\n                        value={country.countryId}\n                      >\n                        {country.countryName}\n                      </MenuItem>\n                    ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={warehouse}\n                onChange={event => {\n                  setFieldValue('locationId', event.target.value);\n                  setWarehouse(event.target.value);\n                }}\n                label={'Select Location'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Location</ListSubheader>\n                {allLocations\n                  ? allLocations.map(location => (\n                      <MenuItem\n                        key={location.locationId}\n                        value={location.locationId}\n                      >\n                        {location.locationName}\n                      </MenuItem>\n                    ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid sx={{ alignSelf: 'center' }} item xs={1}>\n              <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={onSubmit}\n                sx={{ p: '14px' }}\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n\n        <Box sx={{ mt: 3 }}>\n          <AmplifiersMonitoringTable\n            error={error}\n            allAmplifiersMonitoring={allAmplifiersMonitoring}\n          />\n        </Box>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default AmplifiersMonitoringPage;\n"]},"metadata":{},"sourceType":"module"}