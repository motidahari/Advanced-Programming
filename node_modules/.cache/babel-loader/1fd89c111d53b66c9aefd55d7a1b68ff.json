{"ast":null,"code":"import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\nconst products = {\n  addProduct: async (userAction, product) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(product)\n    };\n    const result = fetchData(requests.Products.AddProduct, requestOptions);\n    return result;\n  },\n  UpdateProductLocation: async (userAction, product) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(product)\n    };\n    const result = fetchData(requests.Products.UpdateProductLocation, requestOptions);\n    return result;\n  },\n  UpdateProduct: async (userAction, product) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(product)\n    };\n    const result = fetchData(requests.Products.UpdateProduct, requestOptions);\n    return result;\n  },\n  deleteProduct: async (userAction, product) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(product)\n    };\n    const result = fetchData(requests.Products.DeleteProduct, requestOptions);\n    return result;\n  },\n  getAllProducts: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Products.getAllProducts, requestOptions);\n    return result;\n  },\n  getAllProductsByLocationId: async (userAction, location) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Products.getAllProductsByLocationId + '/' + location.locationId, requestOptions);\n    return result;\n  },\n  getProductById: async (userAction, product) => {\n    // console.log('product', product);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      }\n    };\n    const result = fetchData(requests.Products.getProductById + '/' + product.productId, requestOptions);\n    return result;\n  },\n  getProductByParams: async (userAction, params) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(params)\n    };\n    const result = fetchData(requests.Products.getAllProductsByParams, requestOptions);\n    return result;\n  },\n  getGaps: async (userAction, location) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(location)\n    };\n    const result = fetchData(requests.Products.getGaps, requestOptions);\n    return result;\n  },\n  addGapToLocation: async (userAction, gapsToLocaions) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId\n      },\n      body: JSON.stringify(gapsToLocaions)\n    };\n    const result = fetchData(requests.Products.AddGapToLocation, requestOptions);\n    return result;\n  }\n};\nexport default products;","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/requests/products.js"],"names":["requests","fetchData","products","addProduct","userAction","product","requestOptions","method","headers","token","userId","body","JSON","stringify","result","Products","AddProduct","UpdateProductLocation","UpdateProduct","deleteProduct","DeleteProduct","getAllProducts","getAllProductsByLocationId","location","locationId","getProductById","productId","getProductByParams","params","getAllProductsByParams","getGaps","addGapToLocation","gapsToLocaions","AddGapToLocation"],"mappings":"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","sourcesContent":["import requests from './requests.js';\nimport { fetchData } from './fetchData.js';\n\nconst products = {\n  addProduct: async (userAction, product) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(product),\n    };\n    const result = fetchData(requests.Products.AddProduct, requestOptions);\n    return result;\n  },\n\n  UpdateProductLocation: async (userAction, product) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(product),\n    };\n    const result = fetchData(\n      requests.Products.UpdateProductLocation,\n      requestOptions\n    );\n    return result;\n  },\n\n  UpdateProduct: async (userAction, product) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(product),\n    };\n    const result = fetchData(requests.Products.UpdateProduct, requestOptions);\n    return result;\n  },\n\n  deleteProduct: async (userAction, product) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(product),\n    };\n    const result = fetchData(requests.Products.DeleteProduct, requestOptions);\n    return result;\n  },\n\n  getAllProducts: async userAction => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(requests.Products.getAllProducts, requestOptions);\n    return result;\n  },\n\n  getAllProductsByLocationId: async (userAction, location) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(\n      requests.Products.getAllProductsByLocationId + '/' + location.locationId,\n      requestOptions\n    );\n    return result;\n  },\n\n  getProductById: async (userAction, product) => {\n    // console.log('product', product);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n    };\n    const result = fetchData(\n      requests.Products.getProductById + '/' + product.productId,\n      requestOptions\n    );\n    return result;\n  },\n\n  getProductByParams: async (userAction, params) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(params),\n    };\n    const result = fetchData(\n      requests.Products.getAllProductsByParams,\n      requestOptions\n    );\n    return result;\n  },\n\n  getGaps: async (userAction, location) => {\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(location),\n    };\n    const result = fetchData(requests.Products.getGaps, requestOptions);\n    return result;\n  },\n\n\n\n  addGapToLocation: async (userAction, gapsToLocaions) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': userAction.token,\n        userId: userAction.userId,\n      },\n      body: JSON.stringify(gapsToLocaions),\n    };\n    const result = fetchData(\n      requests.Products.AddGapToLocation,\n      requestOptions\n    );\n    return result;\n  },\n};\n\nexport default products;\n"]},"metadata":{},"sourceType":"module"}