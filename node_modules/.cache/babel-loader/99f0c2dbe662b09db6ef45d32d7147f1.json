{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/DeleteUserModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteUserModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    userData,\n    fetchData\n  } = _ref;\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    onSubmit,\n    setFieldValue,\n    values\n  } = useForm(deleteUserCallback, userData);\n\n  const deleteUser = async () => {\n    // console.log('values', values);\n    setFieldValue('userId', userData.userId);\n    const resultDeleteUser = await users.deleteUser(userAction, values); // console.log('resultDeleteUser', resultDeleteUser);\n\n    if (resultDeleteUser !== null && resultDeleteUser !== void 0 && resultDeleteUser.errors) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: resultDeleteUser === null || resultDeleteUser === void 0 ? void 0 : resultDeleteUser.errors[0].msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this));\n    } else {\n      toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'User deleted'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this));\n      fetchData();\n      close();\n    }\n  };\n\n  function deleteUserCallback() {\n    deleteUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(StyledModal, {\n      submitText: 'Delete User',\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: `Delete ${user.name} `,\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeleteUserModal, \"HSJklorw+Jjk73UxWuJzbOmHRtI=\", false, function () {\n  return [useForm];\n});\n\n_c = DeleteUserModal;\nexport default DeleteUserModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteUserModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/DeleteUserModal.jsx"],"names":["React","useContext","AuthContext","Modal","ModalHeader","useForm","users","toast","Notification","StyledModal","DeleteUserModal","open","close","userData","fetchData","user","token","userAction","userId","id","onSubmit","setFieldValue","values","deleteUserCallback","deleteUser","resultDeleteUser","errors","error","msg","success","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;;AAEA,MAAMC,eAAe,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,GAAyC;AAChE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBf,UAAU,CAACC,WAAD,CAAlC;AACA,QAAMe,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAEH,IAAI,CAACI,EADI;AAEjBH,IAAAA,KAAK,EAAEA;AAFU,GAAnB;AAKA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,MAAsCjB,OAAO,CACjDkB,kBADiD,EAEjDV,QAFiD,CAAnD;;AAKA,QAAMW,UAAU,GAAG,YAAY;AAC7B;AACAH,IAAAA,aAAa,CAAC,QAAD,EAAWR,QAAQ,CAACK,MAApB,CAAb;AACA,UAAMO,gBAAgB,GAAG,MAAMnB,KAAK,CAACkB,UAAN,CAAiBP,UAAjB,EAA6BK,MAA7B,CAA/B,CAH6B,CAI7B;;AACA,QAAIG,gBAAJ,aAAIA,gBAAJ,eAAIA,gBAAgB,CAAEC,MAAtB,EAA8B;AAC5BnB,MAAAA,KAAK,CAACoB,KAAN,eAAY,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEF,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEC,MAAlB,CAAyB,CAAzB,EAA4BE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAAZ;AACD,KAFD,MAEO;AACLrB,MAAAA,KAAK,CAACsB,OAAN,eAAc,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,cAAd;AACAf,MAAAA,SAAS;AACTF,MAAAA,KAAK;AACN;AACF,GAZD;;AAcA,WAASW,kBAAT,GAA8B;AAC5BC,IAAAA,UAAU;AACX;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEb,IAAb;AAAmB,IAAA,OAAO,EAAEC,KAA5B;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,UAAU,EAAE,aAAzB;AAAwC,MAAA,QAAQ,EAAEQ,QAAlD;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAG,UAASL,IAAI,CAACe,IAAK,GAAxC;AAA4C,QAAA,KAAK,EAAElB;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArCD;;GAAMF,e;UAOwCL,O;;;KAPxCK,e;AAuCN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\n\nconst DeleteUserModal = ({ open, close, userData, fetchData }) => {\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const { onSubmit, setFieldValue, values } = useForm(\n    deleteUserCallback,\n    userData\n  );\n\n  const deleteUser = async () => {\n    // console.log('values', values);\n    setFieldValue('userId', userData.userId);\n    const resultDeleteUser = await users.deleteUser(userAction, values);\n    // console.log('resultDeleteUser', resultDeleteUser);\n    if (resultDeleteUser?.errors) {\n      toast.error(<Notification text={resultDeleteUser?.errors[0].msg} />);\n    } else {\n      toast.success(<Notification text={'User deleted'} />);\n      fetchData();\n      close();\n    }\n  };\n\n  function deleteUserCallback() {\n    deleteUser();\n  }\n\n  return (\n    <Modal open={open} onClose={close}>\n      <StyledModal submitText={'Delete User'} onSubmit={onSubmit}>\n        <ModalHeader title={`Delete ${user.name} `} close={close} />\n      </StyledModal>\n    </Modal>\n  );\n};\n\nexport default DeleteUserModal;\n"]},"metadata":{},"sourceType":"module"}