{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Employees/AddEmployeeModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useMemo } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField, MenuItem, ListSubheader } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport employees from '../../requests/employees';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEmployeeModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    allOffices,\n    fetchData\n  } = _ref;\n  const [office, setOffice] = useState('');\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const InitialValues = useMemo(() => ({\n    employeeName: '',\n    officeId: '',\n    desktopComputer: '0',\n    dockingStation: '0',\n    headset: '0',\n    ipPhone: '0',\n    laptop: '0',\n    printer: '0',\n    screen: '0',\n    tv: '0',\n    webCamera: '0'\n  }), []);\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values,\n    setValues\n  } = useForm(addEmployeeCallback, InitialValues);\n\n  const addEmployee = async () => {\n    let err = false;\n\n    if (values.employeeName.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include employee name for employee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n      err = true;\n    }\n\n    if (values.officeId.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include office for employee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (!err) {\n      const resultAddNewEmployee = await employees.addEmployee(userAction, values); // console.log('resultAddNewEmployee', resultAddNewEmployee);\n\n      if (resultAddNewEmployee !== null && resultAddNewEmployee !== void 0 && resultAddNewEmployee.errors) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this));\n      } else {\n        toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'New Employee added'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }, this));\n        setValues(InitialValues);\n        setOffice('');\n        fetchData();\n        close();\n      }\n    }\n  };\n\n  function addEmployeeCallback() {\n    addEmployee();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(StyledModal, {\n      submitText: 'Add Employee',\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: \"Add Employee\",\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            onChange: onChange,\n            value: values.employeeName,\n            variant: \"outlined\",\n            name: \"employeeName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n            label: 'Select Office',\n            value: office,\n            onChange: event => {\n              setFieldValue('officeId', event.target.value);\n              setOffice(event.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Select Office\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), allOffices ? allOffices.map(office => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: office.officeId,\n              children: office.officeName\n            }, office.officeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Screens\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.screen,\n            variant: \"outlined\",\n            name: \"screen\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"TVs\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.tv,\n            variant: \"outlined\",\n            name: \"tv\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Docking Stations\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.dockingStation,\n            variant: \"outlined\",\n            name: \"dockingStation\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"IP Phones\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.ipPhone,\n            variant: \"outlined\",\n            name: \"ipPhone\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Desktop Computers\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.desktopComputer,\n            variant: \"outlined\",\n            name: \"desktopComputer\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Laptops\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.laptop,\n            variant: \"outlined\",\n            name: \"laptop\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Printers\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.printer,\n            variant: \"outlined\",\n            name: \"printer\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Headsets\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.headset,\n            variant: \"outlined\",\n            name: \"headset\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Web Cameras\",\n            onChange: onChange,\n            type: \"number\",\n            value: values.webCamera,\n            variant: \"outlined\",\n            name: \"webCamera\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddEmployeeModal, \"eUZcrjMtfw3f9249T99CRFbP0dg=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEmployeeModal;\nexport default AddEmployeeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployeeModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Employees/AddEmployeeModal.jsx"],"names":["React","useContext","useState","useMemo","AuthContext","Modal","Grid","TextField","MenuItem","ListSubheader","ModalHeader","useForm","employees","TextFieldSelect","toast","Notification","StyledModal","AddEmployeeModal","open","close","allOffices","fetchData","office","setOffice","user","token","userAction","userId","id","InitialValues","employeeName","officeId","desktopComputer","dockingStation","headset","ipPhone","laptop","printer","screen","tv","webCamera","onChange","onSubmit","setFieldValue","values","setValues","addEmployeeCallback","addEmployee","err","length","error","resultAddNewEmployee","errors","success","event","target","value","map","officeName","inputProps","min"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useMemo } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField, MenuItem, ListSubheader } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport employees from '../../requests/employees';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\n\nconst AddEmployeeModal = ({ open, close, allOffices, fetchData }) => {\n  const [office, setOffice] = useState('');\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const InitialValues = useMemo(\n    () => ({\n      employeeName: '',\n      officeId: '',\n      desktopComputer: '0',\n      dockingStation: '0',\n      headset: '0',\n      ipPhone: '0',\n      laptop: '0',\n      printer: '0',\n      screen: '0',\n      tv: '0',\n      webCamera: '0',\n    }),\n    []\n  );\n\n  const { onChange, onSubmit, setFieldValue, values, setValues } = useForm(\n    addEmployeeCallback,\n    InitialValues\n  );\n\n  const addEmployee = async () => {\n    let err = false;\n    if (values.employeeName.length === 0) {\n      toast.error(\n        <Notification text={'Please include employee name for employee'} />\n      );\n      err = true;\n    }\n\n    if (values.officeId.length === 0) {\n      toast.error(<Notification text={'Please include office for employee'} />);\n      err = true;\n    }\n\n    if (!err) {\n      const resultAddNewEmployee = await employees.addEmployee(\n        userAction,\n        values\n      );\n      // console.log('resultAddNewEmployee', resultAddNewEmployee);\n      if (resultAddNewEmployee?.errors) {\n        toast.error(<Notification text={'error'} />);\n      } else {\n        toast.success(<Notification text={'New Employee added'} />);\n        setValues(InitialValues);\n        setOffice('');\n        fetchData();\n        close();\n      }\n    }\n  };\n\n  function addEmployeeCallback() {\n    addEmployee();\n  }\n\n  return (\n    <Modal open={open} onClose={close}>\n      <StyledModal submitText={'Add Employee'} onSubmit={onSubmit}>\n        <ModalHeader title=\"Add Employee\" close={close} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              onChange={onChange}\n              value={values.employeeName}\n              variant=\"outlined\"\n              name=\"employeeName\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextFieldSelect\n              label={'Select Office'}\n              value={office}\n              onChange={event => {\n                setFieldValue('officeId', event.target.value);\n                setOffice(event.target.value);\n              }}\n            >\n              <ListSubheader>Select Office</ListSubheader>\n              {allOffices\n                ? allOffices.map(office => (\n                    <MenuItem key={office.officeId} value={office.officeId}>\n                      {office.officeName}\n                    </MenuItem>\n                  ))\n                : null}\n            </TextFieldSelect>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Screens\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.screen}\n              variant=\"outlined\"\n              name=\"screen\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"TVs\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.tv}\n              variant=\"outlined\"\n              name=\"tv\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Docking Stations\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.dockingStation}\n              variant=\"outlined\"\n              name=\"dockingStation\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"IP Phones\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.ipPhone}\n              variant=\"outlined\"\n              name=\"ipPhone\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Desktop Computers\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.desktopComputer}\n              variant=\"outlined\"\n              name=\"desktopComputer\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Laptops\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.laptop}\n              variant=\"outlined\"\n              name=\"laptop\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Printers\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.printer}\n              variant=\"outlined\"\n              name=\"printer\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Headsets\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.headset}\n              variant=\"outlined\"\n              name=\"headset\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField\n              fullWidth\n              label=\"Web Cameras\"\n              onChange={onChange}\n              type=\"number\"\n              value={values.webCamera}\n              variant=\"outlined\"\n              name=\"webCamera\"\n              InputProps={{\n                inputProps: { min: 0 },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </StyledModal>\n    </Modal>\n  );\n};\n\nexport default AddEmployeeModal;\n"]},"metadata":{},"sourceType":"module"}