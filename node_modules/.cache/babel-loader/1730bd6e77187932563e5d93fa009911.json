{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/AddProductsModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useMemo } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField, MenuItem } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { useForm } from '../../hooks/useForm';\nimport products from '../../requests/products';\nimport moment from 'moment';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport locations from '../../requests/locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst specialProducts = ['acom amplifier', 'barret transceiiver', 'exodus amplifier gen1', 'tujicom amplifier gen1', 'tujicom amplifier gen2'];\n\nconst AddProductsModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    fetchData\n  } = _ref;\n  const [warehouse, setWarehouse] = useState('');\n  const [status, setStatus] = useState('');\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    state: allLocations,\n    setState: setLocationState\n  } = useFetchData(locations.getAllLocations);\n  const InitialValues = useMemo(() => ({\n    productName: '',\n    serialNumber: '',\n    PONumber: '',\n    warranty: moment(new Date()).format('YYYY-MM-DD'),\n    description: ``,\n    quantity: 1,\n    locationId: '',\n    status: ''\n  }), []);\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values,\n    setValues\n  } = useForm(addProductCallback, InitialValues);\n\n  const addProduct = async () => {\n    let err = false;\n\n    if (values.productName.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include product name for product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this));\n      err = true;\n    }\n\n    if (values.locationId.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include location for product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this));\n      err = true;\n    }\n\n    if (specialProducts.includes(values.productName.toLowerCase())) {\n      if (values.status.length === 0) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Please include status for product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this));\n        err = true;\n      }\n\n      if (values.serialNumber.length === 0) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'Please include serialNumber for product'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this));\n        err = true;\n      }\n    }\n\n    if (!err) {\n      const run = values.serialNumber !== '' ? 1 : parseInt(values.quantity); // console.log('run', run);\n\n      for (let index = 0; index < run; index++) {\n        const resultAddProduct = await products.addProduct(userAction, values);\n\n        if (resultAddProduct !== null && resultAddProduct !== void 0 && resultAddProduct.errors) {\n          // console.log(\n          //   'resultAddProduct.errors',\n          //   JSON.stringify(resultAddProduct.errors)\n          // );\n          toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n            text: 'error'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 23\n          }, this));\n        } else {\n          toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n            text: 'Product added'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this));\n          setValues(InitialValues);\n          setStatus('');\n          setWarehouse('');\n          fetchData();\n          close();\n        } // console.log('resultAddProduct', resultAddProduct);\n\n      }\n    }\n  };\n\n  function addProductCallback() {\n    addProduct();\n  } // console.log(values);\n\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: close,\n      children: /*#__PURE__*/_jsxDEV(StyledModal, {\n        submitText: 'Add Product',\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          title: \"Add Product\",\n          close: close\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Product Name\",\n              onChange: onChange,\n              value: values.productName,\n              variant: \"outlined\",\n              name: \"productName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"S/N of Product\",\n              onChange: onChange,\n              value: values.serialNumber,\n              variant: \"outlined\",\n              name: \"serialNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"PO Number\",\n              onChange: onChange,\n              value: values.PONumber,\n              variant: \"outlined\",\n              name: \"PONumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n              label: \"Warranty\",\n              openTo: \"year\",\n              views: ['year', 'month', 'day'],\n              value: values.warranty,\n              name: \"warranty\",\n              onChange: newValue => {\n                setFieldValue('warranty', moment(newValue).format('YYYY-MM-DD'));\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), allLocations ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: warehouse,\n              onChange: event => {\n                setWarehouse(event.target.value);\n                setFieldValue('locationId', event.target.value);\n              },\n              label: \"Select location\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                disabled: true,\n                value: 'Select location',\n                children: \"Select location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), allLocations.map(location => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: location.locationId,\n                children: location.locationName\n              }, location.locationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Comment\",\n              onChange: onChange,\n              value: values.description,\n              variant: \"outlined\",\n              multiline: true,\n              rows: 4,\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), !specialProducts.includes(values.productName.toLowerCase()) && values.serialNumber === '' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Quantity\",\n              onChange: onChange,\n              value: values.quantity,\n              variant: \"outlined\",\n              name: \"quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this) : null, specialProducts.includes(values.productName.toLowerCase()) ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: status,\n              onChange: event => {\n                setStatus(event.target.value);\n                setFieldValue('status', event.target.value);\n              },\n              label: 'Status',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                disabled: true,\n                value: 'Select Status',\n                children: \"Select Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Awaiting ATP\",\n                children: \"Awaiting ATP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Fault\",\n                children: \"Fault\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Obselete\",\n                children: \"Obselete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Operational\",\n                children: \"Operational\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddProductsModal, \"dFQae89N/C7Eqcm35+1mRNtUTP0=\", false, function () {\n  return [useFetchData, useForm];\n});\n\n_c = AddProductsModal;\nexport default AddProductsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductsModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/AddProductsModal.jsx"],"names":["React","useContext","useState","useMemo","AuthContext","Modal","Grid","TextField","MenuItem","ModalHeader","MobileDatePicker","AdapterDateFns","LocalizationProvider","useForm","products","moment","TextFieldSelect","toast","Notification","StyledModal","useFetchData","locations","specialProducts","AddProductsModal","open","close","fetchData","warehouse","setWarehouse","status","setStatus","user","token","userAction","userId","id","state","allLocations","setState","setLocationState","getAllLocations","InitialValues","productName","serialNumber","PONumber","warranty","Date","format","description","quantity","locationId","onChange","onSubmit","setFieldValue","values","setValues","addProductCallback","addProduct","err","length","error","includes","toLowerCase","run","parseInt","index","resultAddProduct","errors","success","newValue","params","event","target","value","map","location","locationName"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useMemo } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField, MenuItem } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { useForm } from '../../hooks/useForm';\nimport products from '../../requests/products';\nimport moment from 'moment';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport locations from '../../requests/locations';\n\nconst specialProducts = [\n  'acom amplifier',\n  'barret transceiiver',\n  'exodus amplifier gen1',\n  'tujicom amplifier gen1',\n  'tujicom amplifier gen2',\n];\n\nconst AddProductsModal = ({ open, close, fetchData }) => {\n  const [warehouse, setWarehouse] = useState('');\n  const [status, setStatus] = useState('');\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n  const { state: allLocations, setState: setLocationState } = useFetchData(\n    locations.getAllLocations\n  );\n\n  const InitialValues = useMemo(\n    () => ({\n      productName: '',\n      serialNumber: '',\n      PONumber: '',\n      warranty: moment(new Date()).format('YYYY-MM-DD'),\n      description: ``,\n      quantity: 1,\n      locationId: '',\n      status: '',\n    }),\n    []\n  );\n\n  const { onChange, onSubmit, setFieldValue, values, setValues } = useForm(\n    addProductCallback,\n    InitialValues\n  );\n\n  const addProduct = async () => {\n    let err = false;\n    if (values.productName.length === 0) {\n      toast.error(\n        <Notification text={'Please include product name for product'} />\n      );\n      err = true;\n    }\n    if (values.locationId.length === 0) {\n      toast.error(\n        <Notification text={'Please include location for product'} />\n      );\n      err = true;\n    }\n\n    if (specialProducts.includes(values.productName.toLowerCase())) {\n      if (values.status.length === 0) {\n        toast.error(\n          <Notification text={'Please include status for product'} />\n        );\n        err = true;\n      }\n      if (values.serialNumber.length === 0) {\n        toast.error(\n          <Notification text={'Please include serialNumber for product'} />\n        );\n        err = true;\n      }\n    }\n\n    if (!err) {\n      const run = values.serialNumber !== '' ? 1 : parseInt(values.quantity);\n      // console.log('run', run);\n\n      for (let index = 0; index < run; index++) {\n        const resultAddProduct = await products.addProduct(userAction, values);\n\n        if (resultAddProduct?.errors) {\n          // console.log(\n          //   'resultAddProduct.errors',\n          //   JSON.stringify(resultAddProduct.errors)\n          // );\n          toast.error(<Notification text={'error'} />);\n        } else {\n          toast.success(<Notification text={'Product added'} />);\n          setValues(InitialValues);\n          setStatus('');\n          setWarehouse('');\n          fetchData();\n          close();\n        }\n        // console.log('resultAddProduct', resultAddProduct);\n      }\n    }\n  };\n\n  function addProductCallback() {\n    addProduct();\n  }\n\n  // console.log(values);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Modal open={open} onClose={close}>\n        <StyledModal submitText={'Add Product'} onSubmit={onSubmit}>\n          <ModalHeader title=\"Add Product\" close={close} />\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Product Name\"\n                onChange={onChange}\n                value={values.productName}\n                variant=\"outlined\"\n                name=\"productName\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"S/N of Product\"\n                onChange={onChange}\n                value={values.serialNumber}\n                variant=\"outlined\"\n                name=\"serialNumber\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"PO Number\"\n                onChange={onChange}\n                value={values.PONumber}\n                variant=\"outlined\"\n                name=\"PONumber\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <MobileDatePicker\n                label=\"Warranty\"\n                openTo=\"year\"\n                views={['year', 'month', 'day']}\n                value={values.warranty}\n                name=\"warranty\"\n                onChange={newValue => {\n                  setFieldValue(\n                    'warranty',\n                    moment(newValue).format('YYYY-MM-DD')\n                  );\n                }}\n                renderInput={params => <TextField fullWidth {...params} />}\n              />\n            </Grid>\n            {allLocations ? (\n              <Grid item xs={12}>\n                <TextFieldSelect\n                  value={warehouse}\n                  onChange={event => {\n                    setWarehouse(event.target.value);\n                    setFieldValue('locationId', event.target.value);\n                  }}\n                  label=\"Select location\"\n                >\n                  <MenuItem disabled value={'Select location'}>\n                    Select location\n                  </MenuItem>\n                  {allLocations.map(location => (\n                    <MenuItem\n                      key={location.locationId}\n                      value={location.locationId}\n                    >\n                      {location.locationName}\n                    </MenuItem>\n                  ))}\n                </TextFieldSelect>\n              </Grid>\n            ) : null}\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Comment\"\n                onChange={onChange}\n                value={values.description}\n                variant=\"outlined\"\n                multiline\n                rows={4}\n                name=\"description\"\n              />\n            </Grid>\n\n            {!specialProducts.includes(values.productName.toLowerCase()) &&\n              values.serialNumber === '' ? (\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Quantity\"\n                  onChange={onChange}\n                  value={values.quantity}\n                  variant=\"outlined\"\n                  name=\"quantity\"\n                />\n              </Grid>\n            ) : null}\n\n            {specialProducts.includes(values.productName.toLowerCase()) ? (\n              <Grid item xs={12}>\n                <TextFieldSelect\n                  value={status}\n                  onChange={event => {\n                    setStatus(event.target.value);\n                    setFieldValue('status', event.target.value);\n                  }}\n                  label={'Status'}\n                >\n                  <MenuItem disabled value={'Select Status'}>\n                    Select Status\n                  </MenuItem>\n                  <MenuItem value=\"Awaiting ATP\">Awaiting ATP</MenuItem>\n                  <MenuItem value=\"Fault\">Fault</MenuItem>\n                  <MenuItem value=\"Obselete\">Obselete</MenuItem>\n                  <MenuItem value=\"Operational\">Operational</MenuItem>\n                </TextFieldSelect>\n              </Grid>\n            ) : null}\n          </Grid>\n        </StyledModal>\n      </Modal>\n    </LocalizationProvider>\n  );\n};\n\nexport default AddProductsModal;\n"]},"metadata":{},"sourceType":"module"}