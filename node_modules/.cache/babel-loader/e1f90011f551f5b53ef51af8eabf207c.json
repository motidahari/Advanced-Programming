{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/test/client/src/App.js\";\nimport React from 'react';\nimport MediaCard from './MediaCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getQ = () => {\n  return Q[Math.random() * Q.length | 0];\n};\n\nconst getRandomPointer = () => {\n  return parseInt(Math.random() * 20);\n};\n\nconst getRandom2Exponent = max => {\n  return parseInt((Math.random() + 1) * max);\n};\n\nconst getPow = pow => {\n  return Math.pow(2, pow);\n};\n\nconst hex2bin = hex => {\n  return (\"00000000\" + parseInt(hex, 16).toString(2)).substr(-8);\n};\n\nconst random_hex_color_code = () => {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return '#' + n.slice(0, 6);\n};\n\nconst q1 = () => {\n  let expNume = getRandom2Exponent(18);\n  let expResult = getPow(expNume);\n  const Qnumber = 1;\n  const RandomPointer1 = getRandomPointer();\n  const RandomPointer2 = getRandomPointer();\n  const numPoiners = expResult / 4;\n  let q = `גודל בלוק הוא ${expResult} = 2^${expNume} ומצביע הוא בגודל 4 בתים.\n  ישנם ${RandomPointer1} מצביעים ישירים ו-${RandomPointer2} מצביעים עקיפים מסוג single indirect\n  מהוא גודל הקובץ המקסימלי במערכת קבצים זו?  \n  `;\n  const answer = `(${RandomPointer1} + ${RandomPointer2} * ${numPoiners}) * ${expResult} = ` + (RandomPointer1 + RandomPointer2 * numPoiners) * expResult;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nconst q2 = () => {\n  const Qnumber = 2; // const val1 = '0x' + random_hex_color_code();\n  // const val12 = '0x' + random_hex_color_code();\n  // const pri = '0x' + random_hex_color_code();\n\n  const val1 = '0x12';\n  const val12 = '0x34';\n  const pri = '0x56';\n  let q = `RAID4/RAID5\n  גודל כל בלוק הוא בית אחד(8 ביטים)\n  נניח שבלוק הנתונים הכיל ${val1} ושינו אותו ל-${val12}\n  אם בלוק הזוגיות הכיל ${pri} מה הוא יכול אחרי השינוי בבלוק?\n  `;\n  const answer = `(`;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer\n  };\n  return result;\n};\n\nlet Q = [q1(), q2()];\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MediaCard, {\n        q: Q[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MediaCard, {\n        q: Q[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/motidahari/projects/test/client/src/App.js"],"names":["React","MediaCard","getQ","Q","Math","random","length","getRandomPointer","parseInt","getRandom2Exponent","max","getPow","pow","hex2bin","hex","toString","substr","random_hex_color_code","n","slice","q1","expNume","expResult","Qnumber","RandomPointer1","RandomPointer2","numPoiners","q","answer","result","q2","val1","val12","pri","App","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MediaCard from './MediaCard';\n\n\n\n\n\nconst getQ = () => {\n  return Q[(Math.random() * Q.length) | 0];\n}\nconst getRandomPointer = () => {\n  return parseInt(Math.random() * 20);\n}\n\nconst getRandom2Exponent = (max) => {\n  return parseInt((Math.random() + 1) * max);\n}\nconst getPow = (pow) => {\n  return Math.pow(2, pow)\n}\n\nconst hex2bin = (hex) => {\n  return (\"00000000\" + (parseInt(hex, 16)).toString(2)).substr(-8);\n}\nconst random_hex_color_code = () => {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return '#' + n.slice(0, 6);\n};\n\nconst q1 = () => {\n  let expNume = getRandom2Exponent(18);\n  let expResult = getPow(expNume);\n  const Qnumber = 1;\n  const RandomPointer1 = getRandomPointer();\n  const RandomPointer2 = getRandomPointer();\n  const numPoiners = expResult / 4;\n\n\n  let q = `גודל בלוק הוא ${expResult} = 2^${expNume} ומצביע הוא בגודל 4 בתים.\n  ישנם ${RandomPointer1} מצביעים ישירים ו-${RandomPointer2} מצביעים עקיפים מסוג single indirect\n  מהוא גודל הקובץ המקסימלי במערכת קבצים זו?  \n  `;\n  const answer = `(${RandomPointer1} + ${RandomPointer2} * ${numPoiners}) * ${expResult} = ` + ((RandomPointer1 + (RandomPointer2 * numPoiners)) * expResult);\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\nconst q2 = () => {\n  const Qnumber = 2;\n  // const val1 = '0x' + random_hex_color_code();\n  // const val12 = '0x' + random_hex_color_code();\n  // const pri = '0x' + random_hex_color_code();\n\n  const val1 = '0x12';\n  const val12 = '0x34';\n  const pri = '0x56';\n\n  let q = `RAID4/RAID5\n  גודל כל בלוק הוא בית אחד(8 ביטים)\n  נניח שבלוק הנתונים הכיל ${val1} ושינו אותו ל-${val12}\n  אם בלוק הזוגיות הכיל ${pri} מה הוא יכול אחרי השינוי בבלוק?\n  `;\n  const answer = `(`;\n  const result = {\n    q: q,\n    Qnumber: Qnumber,\n    answer: answer,\n  };\n  return result;\n}\nlet Q = [\n  q1(),\n  q2(),\n];\n\nconst App = () => {\n  return (\n    <div>\n\n      <div style={{ marginTop: '20px' }}>\n        <MediaCard q={Q[0]} />\n      </div>\n\n      <div style={{ marginTop: '20px' }}>\n        <MediaCard q={Q[1]} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}