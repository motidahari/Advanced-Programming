{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/UserEditModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Modal, Grid, TextField, MenuItem } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { AuthContext } from '../../context/auth';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserEditModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    userData,\n    fetchData\n  } = _ref;\n  const [permission, setPermission] = useState(null);\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    setValues,\n    values\n  } = useForm(editUserCallback, {\n    userId: '',\n    email: '',\n    name: '',\n    permission: '',\n    password: '',\n    confirmPassword: ''\n  });\n  useEffect(() => {\n    setValues(userData);\n    setPermission(userData === null || userData === void 0 ? void 0 : userData.permission);\n  }, [userData]); // console.log(values);\n\n  const editUser = async () => {\n    let err = false; // console.log('values', values);\n\n    if (values.password.length < 6 || values.confirmPassword.length < 6) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Password is not valid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (values.password !== values.confirmPassword) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Password is not match'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (values.userId.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'UserId is not empty'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (values.name.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include name for user'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (values.permission.length === 0) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Please include permission for user'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this));\n      err = true;\n    }\n\n    if (!err) {\n      // console.log('values', values);\n      const resultUpdateUser = await users.updateUser(userAction, values); // console.log('resultUpdateUser', resultUpdateUser);\n\n      if (resultUpdateUser !== null && resultUpdateUser !== void 0 && resultUpdateUser.errors) {\n        toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n          text: resultUpdateUser === null || resultUpdateUser === void 0 ? void 0 : resultUpdateUser.errors[0].msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this));\n      } else {\n        toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n          text: 'User edited'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this));\n        fetchData();\n        close();\n      }\n    }\n  };\n\n  function editUserCallback() {\n    editUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(StyledModal, {\n      submitText: 'Edit User',\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: `Edit User ${userData === null || userData === void 0 ? void 0 : userData.email}`,\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"User Name\",\n            onChange: onChange,\n            value: values.name,\n            variant: \"outlined\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            select: true,\n            label: \"Permission\",\n            value: permission,\n            onChange: event => {\n              setFieldValue('permission', event.target.value);\n              setPermission(event.target.value);\n            },\n            name: \"permission\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'Viewer',\n              children: \"Viewer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'Editor',\n              children: \"Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'Admin',\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Password\",\n            onChange: onChange,\n            value: values.password,\n            variant: \"outlined\",\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Confirm Password\",\n            onChange: onChange,\n            value: values.confirmPassword,\n            variant: \"outlined\",\n            name: \"confirmPassword\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserEditModal, \"JqIaaT0TU39loR73hZ+fPwh1Jao=\", false, function () {\n  return [useForm];\n});\n\n_c = UserEditModal;\nexport default UserEditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/UserEditModal.jsx"],"names":["React","useState","useContext","useEffect","Modal","Grid","TextField","MenuItem","ModalHeader","useForm","users","AuthContext","toast","Notification","StyledModal","UserEditModal","open","close","userData","fetchData","permission","setPermission","user","token","userAction","userId","id","onChange","onSubmit","setFieldValue","setValues","values","editUserCallback","email","name","password","confirmPassword","editUser","err","length","error","resultUpdateUser","updateUser","errors","msg","success","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Modal, Grid, TextField, MenuItem } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport users from '../../requests/users';\nimport { AuthContext } from '../../context/auth';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\n\nconst UserEditModal = ({ open, close, userData, fetchData }) => {\n  const [permission, setPermission] = useState(null);\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const { onChange, onSubmit, setFieldValue, setValues, values } = useForm(\n    editUserCallback,\n    {\n      userId: '',\n      email: '',\n      name: '',\n      permission: '',\n      password: '',\n      confirmPassword: '',\n    }\n  );\n  useEffect(() => {\n    setValues(userData);\n    setPermission(userData?.permission);\n  }, [userData]);\n  // console.log(values);\n\n  const editUser = async () => {\n    let err = false;\n    // console.log('values', values);\n    if (values.password.length < 6 || values.confirmPassword.length < 6) {\n      toast.error(<Notification text={'Password is not valid'} />);\n      err = true;\n    }\n\n    if (values.password !== values.confirmPassword) {\n      toast.error(<Notification text={'Password is not match'} />);\n      err = true;\n    }\n    if (values.userId.length === 0) {\n      toast.error(<Notification text={'UserId is not empty'} />);\n      err = true;\n    }\n    if (values.name.length === 0) {\n      toast.error(<Notification text={'Please include name for user'} />);\n      err = true;\n    }\n    if (values.permission.length === 0) {\n      toast.error(<Notification text={'Please include permission for user'} />);\n      err = true;\n    }\n\n    if (!err) {\n      // console.log('values', values);\n      const resultUpdateUser = await users.updateUser(userAction, values);\n      // console.log('resultUpdateUser', resultUpdateUser);\n      if (resultUpdateUser?.errors) {\n        toast.error(<Notification text={resultUpdateUser?.errors[0].msg} />);\n      } else {\n        toast.success(<Notification text={'User edited'} />);\n        fetchData();\n        close();\n      }\n    }\n  };\n\n  function editUserCallback() {\n    editUser();\n  }\n\n  return (\n    <Modal open={open} onClose={close}>\n      <StyledModal submitText={'Edit User'} onSubmit={onSubmit}>\n        <ModalHeader title={`Edit User ${userData?.email}`} close={close} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"User Name\"\n              onChange={onChange}\n              value={values.name}\n              variant=\"outlined\"\n              name=\"name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              select\n              label=\"Permission\"\n              value={permission}\n              onChange={event => {\n                setFieldValue('permission', event.target.value);\n                setPermission(event.target.value);\n              }}\n              name=\"permission\"\n            >\n              <MenuItem value={'Viewer'}>Viewer</MenuItem>\n              <MenuItem value={'Editor'}>Editor</MenuItem>\n              <MenuItem value={'Admin'}>Admin</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Password\"\n              onChange={onChange}\n              value={values.password}\n              variant=\"outlined\"\n              name=\"password\"\n              type=\"password\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Confirm Password\"\n              onChange={onChange}\n              value={values.confirmPassword}\n              variant=\"outlined\"\n              name=\"confirmPassword\"\n              type=\"password\"\n            />\n          </Grid>\n        </Grid>\n      </StyledModal>\n    </Modal>\n  );\n};\n\nexport default UserEditModal;\n"]},"metadata":{},"sourceType":"module"}