{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Employees/AddOfficeModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport offices from '../../requests/offices';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddOfficeModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    fetchData\n  } = _ref;\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(addOfficeCallback, {\n    officeName: ''\n  });\n\n  const addOffice = async () => {\n    const resultAddOffice = await offices.addOffice(userAction, values); // console.log('resultAddOffice', resultAddOffice);\n\n    if (resultAddOffice !== null && resultAddOffice !== void 0 && resultAddOffice.errors) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'error'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this));\n    } else {\n      toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Office added'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this));\n      fetchData();\n      close();\n    }\n  };\n\n  function addOfficeCallback() {\n    addOffice();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: close,\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(StyledModal, {\n      submitText: 'Add Office',\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: \"Add Office\",\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Office Name\",\n            onChange: onChange,\n            value: values.officeName,\n            variant: \"outlined\",\n            name: \"officeName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOfficeModal, \"HshGoDfYIkL1W3uJhfxrFzR54xA=\", false, function () {\n  return [useForm];\n});\n\n_c = AddOfficeModal;\nexport default AddOfficeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOfficeModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Employees/AddOfficeModal.jsx"],"names":["React","useContext","AuthContext","Modal","Grid","TextField","ModalHeader","useForm","offices","toast","Notification","StyledModal","AddOfficeModal","open","close","fetchData","user","token","userAction","userId","id","onChange","onSubmit","values","addOfficeCallback","officeName","addOffice","resultAddOffice","errors","error","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;;AAEA,MAAMC,cAAc,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAA+B;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBhB,UAAU,CAACC,WAAD,CAAlC;AACA,QAAMgB,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAEH,IAAI,CAACI,EADI;AAEjBH,IAAAA,KAAK,EAAEA;AAFU,GAAnB;AAKA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAiChB,OAAO,CAACiB,iBAAD,EAAoB;AAChEC,IAAAA,UAAU,EAAE;AADoD,GAApB,CAA9C;;AAIA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,eAAe,GAAG,MAAMnB,OAAO,CAACkB,SAAR,CAAkBR,UAAlB,EAA8BK,MAA9B,CAA9B,CAD4B,CAE5B;;AACA,QAAII,eAAJ,aAAIA,eAAJ,eAAIA,eAAe,CAAEC,MAArB,EAA6B;AAC3BnB,MAAAA,KAAK,CAACoB,KAAN,eAAY,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,cAAZ;AACD,KAFD,MAEO;AACLpB,MAAAA,KAAK,CAACqB,OAAN,eAAc,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,cAAd;AACAf,MAAAA,SAAS;AACTD,MAAAA,KAAK;AACN;AACF,GAVD;;AAYA,WAASU,iBAAT,GAA6B;AAC3BE,IAAAA,SAAS;AACV;;AAED,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEb,IADR;AAEE,IAAA,OAAO,EAAEC,KAFX;AAGE,uBAAgB,mBAHlB;AAIE,wBAAiB,yBAJnB;AAAA,2BAME,QAAC,WAAD;AAAa,MAAA,UAAU,EAAE,YAAzB;AAAuC,MAAA,QAAQ,EAAEQ,QAAjD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC,YAAnB;AAAgC,QAAA,KAAK,EAAER;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,KAAK,EAAC,aAFR;AAGE,YAAA,QAAQ,EAAEO,QAHZ;AAIE,YAAA,KAAK,EAAEE,MAAM,CAACE,UAJhB;AAKE,YAAA,OAAO,EAAC,UALV;AAME,YAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CApDD;;GAAMb,c;UAOmCL,O;;;KAPnCK,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport offices from '../../requests/offices';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\n\nconst AddOfficeModal = ({ open, close, fetchData }) => {\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n  const { onChange, onSubmit, values } = useForm(addOfficeCallback, {\n    officeName: '',\n  });\n\n  const addOffice = async () => {\n    const resultAddOffice = await offices.addOffice(userAction, values);\n    // console.log('resultAddOffice', resultAddOffice);\n    if (resultAddOffice?.errors) {\n      toast.error(<Notification text={'error'} />);\n    } else {\n      toast.success(<Notification text={'Office added'} />);\n      fetchData();\n      close();\n    }\n  };\n\n  function addOfficeCallback() {\n    addOffice();\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={close}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <StyledModal submitText={'Add Office'} onSubmit={onSubmit}>\n        <ModalHeader title=\"Add Office\" close={close} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Office Name\"\n              onChange={onChange}\n              value={values.officeName}\n              variant=\"outlined\"\n              name=\"officeName\"\n            />\n          </Grid>\n        </Grid>\n      </StyledModal>\n    </Modal>\n  );\n};\n\nexport default AddOfficeModal;\n"]},"metadata":{},"sourceType":"module"}