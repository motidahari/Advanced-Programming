{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/DeleteProductModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport products from '../../requests/products';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteProductModal = _ref => {\n  _s();\n\n  let {\n    open,\n    close,\n    product,\n    fetchData\n  } = _ref;\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(deleteProductCallback, {\n    description: ''\n  });\n\n  const deleteProduct = async () => {\n    const resultDeleteProduct = await products.deleteProduct(userAction, {\n      productId: product.productId,\n      description: values.description,\n      storage: product.locationName\n    });\n\n    if (resultDeleteProduct !== null && resultDeleteProduct !== void 0 && resultDeleteProduct.errors) {\n      toast.error( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'error'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this));\n    } else {\n      toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'Product deleted'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this));\n      fetchData();\n      close();\n    } // console.log('resultDeleteProduct', resultDeleteProduct);\n\n  };\n\n  function deleteProductCallback() {\n    deleteProduct();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(StyledModal, {\n      submitText: 'Delete Product',\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        title: `Delete ${product.productName} `,\n        close: close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Comment\",\n            onChange: onChange,\n            value: values.description,\n            variant: \"outlined\",\n            multiline: true,\n            rows: 4,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeleteProductModal, \"HshGoDfYIkL1W3uJhfxrFzR54xA=\", false, function () {\n  return [useForm];\n});\n\n_c = DeleteProductModal;\nexport default DeleteProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProductModal\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/DeleteProductModal.jsx"],"names":["React","useContext","AuthContext","Modal","Grid","TextField","ModalHeader","useForm","products","toast","Notification","StyledModal","DeleteProductModal","open","close","product","fetchData","user","token","userAction","userId","id","onChange","onSubmit","values","deleteProductCallback","description","deleteProduct","resultDeleteProduct","productId","storage","locationName","errors","error","success","productName"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Modal, Grid, TextField } from '@mui/material';\nimport ModalHeader from '../../components/ModalHeader';\nimport { useForm } from '../../hooks/useForm';\nimport products from '../../requests/products';\nimport { toast } from 'react-toastify';\nimport Notification from '../../components/Notification';\nimport StyledModal from '../../components/StyledModal';\n\nconst DeleteProductModal = ({ open, close, product, fetchData }) => {\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n  const { onChange, onSubmit, values } = useForm(deleteProductCallback, {\n    description: '',\n  });\n\n  const deleteProduct = async () => {\n    const resultDeleteProduct = await products.deleteProduct(userAction, {\n      productId: product.productId,\n      description: values.description,\n      storage: product.locationName,\n    });\n    if (resultDeleteProduct?.errors) {\n      toast.error(<Notification text={'error'} />);\n    } else {\n      toast.success(<Notification text={'Product deleted'} />);\n      fetchData();\n      close();\n    }\n    // console.log('resultDeleteProduct', resultDeleteProduct);\n  };\n\n  function deleteProductCallback() {\n    deleteProduct();\n  }\n\n  return (\n    <Modal open={open} onClose={close}>\n      <StyledModal submitText={'Delete Product'} onSubmit={onSubmit}>\n        <ModalHeader title={`Delete ${product.productName} `} close={close} />\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Comment\"\n              onChange={onChange}\n              value={values.description}\n              variant=\"outlined\"\n              multiline\n              rows={4}\n              name=\"description\"\n            />\n          </Grid>\n        </Grid>\n      </StyledModal>\n    </Modal>\n  );\n};\n\nexport default DeleteProductModal;\n"]},"metadata":{},"sourceType":"module"}