{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/PendingUsersTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { IconButton, Tooltip, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PendingUserEditModal from './PendingUserEditModal';\nimport DeleteUserModal from './DeleteUserModal';\nimport StyledDataGrid from '../../components/StyledDataGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PendingUsersTable = _ref => {\n  _s();\n\n  let {\n    allPendingUsers,\n    fetchData,\n    error\n  } = _ref;\n  const [userData, setUserData] = useState(null);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [openDeleteModal, setOpenDeletMeodal] = useState(false);\n\n  const handleDeleteModal = () => {\n    setOpenDeletMeodal(!openDeleteModal);\n  };\n\n  const handleEditModal = () => {\n    setOpenEditModal(!openEditModal);\n  };\n\n  const columns = useMemo(() => [{\n    field: 'name',\n    headerName: 'User Name',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"neutral.900\",\n      children: row.row.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, {\n    field: 'Actions',\n    headerName: 'Actions',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Edit\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            setUserData(row.row);\n            handleEditModal();\n          },\n          \"aria-label\": \"delete\",\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            setUserData(row.row);\n            handleDeleteModal();\n          },\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }], []);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    children: \"error featching PendingUsers table\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledDataGrid, {\n      rows: allPendingUsers,\n      columns: columns,\n      getRowId: row => row.userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), userData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PendingUserEditModal, {\n        open: openEditModal,\n        fetchData: fetchData,\n        close: handleEditModal,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteUserModal, {\n        fetchData: fetchData,\n        open: openDeleteModal,\n        close: handleDeleteModal,\n        userData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(PendingUsersTable, \"XukMhCt8hwoVN32duO87Dx7gFLA=\");\n\n_c = PendingUsersTable;\nexport default PendingUsersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingUsersTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Admin/PendingUsersTable.jsx"],"names":["React","useState","useMemo","IconButton","Tooltip","Typography","DeleteIcon","EditIcon","PendingUserEditModal","DeleteUserModal","StyledDataGrid","PendingUsersTable","allPendingUsers","fetchData","error","userData","setUserData","openEditModal","setOpenEditModal","openDeleteModal","setOpenDeletMeodal","handleDeleteModal","handleEditModal","columns","field","headerName","sortable","flex","minWidth","renderCell","row","name","email","userId"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { IconButton, Tooltip, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PendingUserEditModal from './PendingUserEditModal';\nimport DeleteUserModal from './DeleteUserModal';\nimport StyledDataGrid from '../../components/StyledDataGrid';\n\nconst PendingUsersTable = ({ allPendingUsers, fetchData, error }) => {\n  const [userData, setUserData] = useState(null);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [openDeleteModal, setOpenDeletMeodal] = useState(false);\n\n  const handleDeleteModal = () => {\n    setOpenDeletMeodal(!openDeleteModal);\n  };\n  const handleEditModal = () => {\n    setOpenEditModal(!openEditModal);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        field: 'name',\n        headerName: 'User Name',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.name}</Typography>\n        ),\n      },\n      {\n        field: 'email',\n        headerName: 'Email',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <Typography color=\"neutral.900\">{row.row.email}</Typography>\n        ),\n      },\n      {\n        field: 'Actions',\n        headerName: 'Actions',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => (\n          <>\n            <Tooltip title=\"Edit\">\n              <IconButton\n                onClick={() => {\n                  setUserData(row.row);\n                  handleEditModal();\n                }}\n                aria-label=\"delete\"\n              >\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <IconButton\n                onClick={() => {\n                  setUserData(row.row);\n                  handleDeleteModal();\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </>\n        ),\n      },\n    ],\n    []\n  );\n\n  if (error)\n    return (\n      <Typography variant=\"h4\">error featching PendingUsers table</Typography>\n    );\n\n  return (\n    <>\n      <StyledDataGrid\n        rows={allPendingUsers}\n        columns={columns}\n        getRowId={row => row.userId}\n      />\n\n      {userData ? (\n        <>\n          <PendingUserEditModal\n            open={openEditModal}\n            fetchData={fetchData}\n            close={handleEditModal}\n            userData={userData}\n          />\n          <DeleteUserModal\n            fetchData={fetchData}\n            open={openDeleteModal}\n            close={handleDeleteModal}\n            userData={userData}\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default PendingUsersTable;\n"]},"metadata":{},"sourceType":"module"}