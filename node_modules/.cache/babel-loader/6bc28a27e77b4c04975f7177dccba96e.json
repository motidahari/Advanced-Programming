{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback, useContext } from 'react';\nimport { AuthContext } from '../context/auth';\nexport const useFetchData = func => {\n  _s();\n\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const [state, setState] = useState(null);\n  const [error, setError] = useState(false);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const fetchData = useCallback(async () => {\n    // console.log('API CALLL');\n    setError(false);\n\n    try {\n      const res = await func(userAction);\n      console.log('res', res);\n\n      if (res !== null && res !== void 0 && res.errors) {\n        throw new Error(res === null || res === void 0 ? void 0 : res.errors);\n      } else {\n        setState(res);\n      }\n    } catch (error) {\n      setError(true);\n    }\n  }, [user, token, func]);\n  useEffect(() => {\n    fetchData();\n    return () => {\n      setState({});\n    };\n  }, [fetchData]);\n  return {\n    state,\n    error,\n    fetchData,\n    setState\n  };\n};\n\n_s(useFetchData, \"3H6O2ckxbnygzZcMKKByF2AY4sM=\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/hooks/useFetchData.jsx"],"names":["useState","useEffect","useCallback","useContext","AuthContext","useFetchData","func","user","token","state","setState","error","setError","userAction","userId","id","fetchData","res","console","log","errors","Error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI;AAAA;;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBL,UAAU,CAACC,WAAD,CAAlC;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAMa,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAEP,IAAI,CAACQ,EADI;AAEjBP,IAAAA,KAAK,EAAEA;AAFU,GAAnB;AAQA,QAAMQ,SAAS,GAAGd,WAAW,CAAC,YAAY;AACxC;AACAU,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAI;AACF,YAAMK,GAAG,GAAG,MAAMX,IAAI,CAACO,UAAD,CAAtB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;;AACA,UAAIA,GAAJ,aAAIA,GAAJ,eAAIA,GAAG,CAAEG,MAAT,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAUJ,GAAV,aAAUA,GAAV,uBAAUA,GAAG,CAAEG,MAAf,CAAN;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACO,GAAD,CAAR;AACD;AACF,KARD,CAQE,OAAON,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAd4B,EAc1B,CAACL,IAAD,EAAOC,KAAP,EAAcF,IAAd,CAd0B,CAA7B;AAgBAL,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACT,WAAO,MAAM;AACXN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAFD;AAGD,GALQ,EAKN,CAACM,SAAD,CALM,CAAT;AAOA,SAAO;AAAEP,IAAAA,KAAF;AAASE,IAAAA,KAAT;AAAgBK,IAAAA,SAAhB;AAA2BN,IAAAA;AAA3B,GAAP;AACD,CAtCM;;GAAML,Y","sourcesContent":["import { useState, useEffect, useCallback, useContext } from 'react';\nimport { AuthContext } from '../context/auth';\n\nexport const useFetchData = func => {\n  const { user, token } = useContext(AuthContext);\n\n  const [state, setState] = useState(null);\n  const [error, setError] = useState(false);\n\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n\n\n\n\n  const fetchData = useCallback(async () => {\n    // console.log('API CALLL');\n    setError(false);\n    try {\n      const res = await func(userAction);\n      console.log('res', res);\n      if (res?.errors) {\n        throw new Error(res?.errors);\n      } else {\n        setState(res);\n      }\n    } catch (error) {\n      setError(true);\n    }\n  }, [user, token, func]);\n\n  useEffect(() => {\n    fetchData();\n    return () => {\n      setState({});\n    };\n  }, [fetchData]);\n\n  return { state, error, fetchData, setState };\n};\n"]},"metadata":{},"sourceType":"module"}