{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/ProductsTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { ExportDataContext } from './../../context/DataExport';\nimport EditProductModal from './EditProductModal';\nimport DeleteProductModal from './DeleteProductModal';\nimport MoveProductModal from './MoveProductModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport locations from '../../requests/locations';\nimport { TableCell, TableRow, IconButton, Tooltip, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport moment from 'moment';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledDateTableCell = {\n  minWidth: 90\n};\nlet columns = [];\n\nconst ProductsTable = _ref => {\n  _s();\n\n  let {\n    fetchData,\n    allproducts,\n    error\n  } = _ref;\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [moveModal, setMoveModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    changeDataExport\n  } = useContext(ExportDataContext);\n  const {\n    state: allLocations,\n    setState: setLocationState\n  } = useFetchData(locations.getAllLocations);\n\n  if ((user === null || user === void 0 ? void 0 : user.permission) !== 'Viewer') {\n    columns = [{\n      title: 'productName'\n    }, {\n      title: 'serialNumber'\n    }, {\n      title: 'PONumber'\n    }, {\n      title: 'locationName'\n    }, {\n      title: 'date'\n    }, {\n      title: 'warranty'\n    }, {\n      title: 'Actions'\n    }];\n  } else {\n    columns = [{\n      title: 'productName'\n    }, {\n      title: 'serialNumber'\n    }, {\n      title: 'PONumber'\n    }, {\n      title: 'locationName'\n    }, {\n      title: 'date'\n    }, {\n      title: 'warranty'\n    }];\n  }\n\n  const handleDeleteModal = product => {\n    setDeleteModal(!deleteModal);\n    setSelectedProduct(product);\n  };\n\n  const handleMoveModal = product => {\n    setMoveModal(!moveModal);\n    setSelectedProduct(product);\n  };\n\n  const handleEditModal = product => {\n    setEditModal(!editModal);\n    setSelectedProduct(product);\n  };\n\n  useEffect(() => {\n    changeDataExport('Products', allproducts);\n  }, [allproducts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [allproducts ? /*#__PURE__*/_jsxDEV(StyledTable, {\n      columns: columns,\n      children: allproducts.length > 0 ? allproducts.map(product => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: product.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: product.serialNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: product.PONumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: product.locationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          sx: StyledDateTableCell,\n          children: moment(product.date).format('DD-MM-YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          sx: StyledDateTableCell,\n          children: moment(product.warranty).format('DD-MM-YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), (user === null || user === void 0 ? void 0 : user.permission) !== 'Viewer' ? /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Edit\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                handleEditModal(product);\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                handleDeleteModal(product);\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Move\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                handleMoveModal(product);\n              },\n              children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this) : null]\n      }, product.productId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"No results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        m: 1\n      },\n      variant: \"h4\",\n      children: \"error fetching getAllProducts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableSkeleton, {\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(EditProductModal, {\n        fetchData: fetchData,\n        product: selectedProduct,\n        allLocations: allLocations,\n        open: editModal,\n        close: handleEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteProductModal, {\n        fetchData: fetchData,\n        product: selectedProduct,\n        open: deleteModal,\n        close: handleDeleteModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MoveProductModal, {\n        fetchData: fetchData,\n        product: selectedProduct,\n        allLocations: allLocations,\n        open: moveModal,\n        close: handleMoveModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(ProductsTable, \"FDViDuwwE2B7sfoJez5218PMce4=\", false, function () {\n  return [useFetchData];\n});\n\n_c = ProductsTable;\nexport default ProductsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/ProductsTable.jsx"],"names":["React","useState","useContext","useEffect","AuthContext","ExportDataContext","EditProductModal","DeleteProductModal","MoveProductModal","useFetchData","locations","TableCell","TableRow","IconButton","Tooltip","Typography","EditIcon","DeleteIcon","ArrowForwardIcon","moment","StyledTable","TableSkeleton","StyledDateTableCell","minWidth","columns","ProductsTable","fetchData","allproducts","error","deleteModal","setDeleteModal","editModal","setEditModal","moveModal","setMoveModal","selectedProduct","setSelectedProduct","user","changeDataExport","state","allLocations","setState","setLocationState","getAllLocations","permission","title","handleDeleteModal","product","handleMoveModal","handleEditModal","length","map","productName","serialNumber","PONumber","locationName","date","format","warranty","productId","m"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { ExportDataContext } from './../../context/DataExport';\nimport EditProductModal from './EditProductModal';\nimport DeleteProductModal from './DeleteProductModal';\nimport MoveProductModal from './MoveProductModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport locations from '../../requests/locations';\n\nimport {\n  TableCell,\n  TableRow,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport moment from 'moment';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\n\nconst StyledDateTableCell = { minWidth: 90 };\nlet columns = [];\n\nconst ProductsTable = ({ fetchData, allproducts, error }) => {\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [moveModal, setMoveModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const { user } = useContext(AuthContext);\n  const { changeDataExport } = useContext(ExportDataContext);\n  const { state: allLocations, setState: setLocationState } = useFetchData(\n    locations.getAllLocations\n  );\n  if (user?.permission !== 'Viewer') {\n    columns = [\n      { title: 'productName' },\n      { title: 'serialNumber' },\n      { title: 'PONumber' },\n      { title: 'locationName' },\n      { title: 'date' },\n      { title: 'warranty' },\n      { title: 'Actions' },\n    ];\n  } else {\n    columns = [\n      { title: 'productName' },\n      { title: 'serialNumber' },\n      { title: 'PONumber' },\n      { title: 'locationName' },\n      { title: 'date' },\n      { title: 'warranty' },\n    ];\n  }\n\n  const handleDeleteModal = product => {\n    setDeleteModal(!deleteModal);\n    setSelectedProduct(product);\n  };\n  const handleMoveModal = product => {\n    setMoveModal(!moveModal);\n    setSelectedProduct(product);\n  };\n  const handleEditModal = product => {\n    setEditModal(!editModal);\n    setSelectedProduct(product);\n  };\n\n  useEffect(() => {\n    changeDataExport('Products', allproducts);\n  }, [allproducts]);\n\n  return (\n    <>\n      {allproducts ? (\n        <StyledTable columns={columns}>\n          {allproducts.length > 0 ? (\n            allproducts.map(product => (\n              <TableRow key={product.productId}>\n                <TableCell>{product.productName}</TableCell>\n                <TableCell>{product.serialNumber}</TableCell>\n                <TableCell>{product.PONumber}</TableCell>\n                <TableCell>{product.locationName}</TableCell>\n                <TableCell sx={StyledDateTableCell}>\n                  {moment(product.date).format('DD-MM-YYYY')}\n                </TableCell>\n                <TableCell sx={StyledDateTableCell}>\n                  {moment(product.warranty).format('DD-MM-YYYY')}\n                </TableCell>\n                {user?.permission !== 'Viewer' ? (\n                  <TableCell>\n                    <Tooltip title=\"Edit\">\n                      <IconButton\n                        onClick={() => {\n                          handleEditModal(product);\n                        }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        onClick={() => {\n                          handleDeleteModal(product);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Move\">\n                      <IconButton\n                        onClick={() => {\n                          handleMoveModal(product);\n                        }}\n                      >\n                        <ArrowForwardIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                ) : null}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell>No results</TableCell>\n            </TableRow>\n          )}\n        </StyledTable>\n      ) : error ? (\n        <Typography sx={{ m: 1 }} variant=\"h4\">\n          error fetching getAllProducts\n        </Typography>\n      ) : (\n        <TableSkeleton columns={columns} />\n      )}\n\n      {selectedProduct ? (\n        <>\n          <EditProductModal\n            fetchData={fetchData}\n            product={selectedProduct}\n            allLocations={allLocations}\n            open={editModal}\n            close={handleEditModal}\n          />\n          <DeleteProductModal\n            fetchData={fetchData}\n            product={selectedProduct}\n            open={deleteModal}\n            close={handleDeleteModal}\n          />\n          <MoveProductModal\n            fetchData={fetchData}\n            product={selectedProduct}\n            allLocations={allLocations}\n            open={moveModal}\n            close={handleMoveModal}\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default ProductsTable;\n"]},"metadata":{},"sourceType":"module"}