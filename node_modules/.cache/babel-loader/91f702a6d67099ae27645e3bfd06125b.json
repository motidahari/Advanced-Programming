{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/Pages/Employees/EmployeesPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { Box, Button, Grid, TextField, ListSubheader, Typography, MenuItem } from '@mui/material';\nimport UsersTable from './EmployeesTable';\nimport PageContainer from '../../components/PageContainer';\nimport OfficesTable from './OfficesTable';\nimport AddEmployeeModal from './AddEmployeeModal';\nimport AddOfficeModal from './AddOfficeModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport offices from '../../requests/offices';\nimport employees from './../../requests/employees';\nimport { useForm } from '../../hooks/useForm';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { ExportDataContext } from './../../context/DataExport';\nimport { CSVLink } from 'react-csv';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EmployeesPage = () => {\n  _s();\n\n  const [addEmployeeModal, setAddEmployeeModal] = useState(false);\n  const [addOfficeModal, setAddOfficeModal] = useState(false);\n  const [office, setOffice] = useState('');\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token\n  };\n  const {\n    headers,\n    fileName,\n    data,\n    changeDataExport\n  } = useContext(ExportDataContext);\n  const {\n    state: allEmployees,\n    error,\n    setState,\n    fetchData: allEmployeesFetchData\n  } = useFetchData(employees.getAllEmployees); // console.log('getAllEmployees', allEmployees);\n\n  const {\n    state: allOffices,\n    error: allOfficesErr,\n    fetchData: allOfficesFetchData\n  } = useFetchData(offices.getAllOffices);\n  const {\n    onChange,\n    onSubmit,\n    setFieldValue,\n    values\n  } = useForm(searchCallback, {\n    officeId: '',\n    search: ''\n  });\n\n  const searchEmployees = async () => {\n    // console.log('values', values);\n    const resultSearchEmployees = await employees.getEmployeesByParams(userAction, values);\n    setState(resultSearchEmployees); // console.log('resultSearchEmployees', resultSearchEmployees);\n  };\n\n  function searchCallback() {\n    searchEmployees();\n  }\n\n  const handleAddEmployeeModal = () => setAddEmployeeModal(!addEmployeeModal);\n\n  const handleAddOfficeModal = () => setAddOfficeModal(!addOfficeModal);\n\n  useEffect(() => {\n    changeDataExport('Employees', allEmployees);\n  }, [allEmployees]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeaderContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            m: 1\n          },\n          variant: \"h4\",\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 1\n          },\n          children: [fileName && headers && data ? /*#__PURE__*/_jsxDEV(CSVLink, {\n            style: {\n              textDecoration: 'none',\n              color: '#3F3FBE'\n            },\n            filename: fileName,\n            data: data,\n            headers: headers,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 30\n              }, this),\n              sx: {\n                mr: 1\n              },\n              children: \"Export To Excel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddEmployeeModal,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Search Employee\",\n              onChange: onChange,\n              value: values.search,\n              variant: \"outlined\",\n              name: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(TextFieldSelect, {\n              value: office,\n              onChange: event => {\n                setFieldValue('officeId', event.target.value);\n                setOffice(event.target.value);\n              },\n              label: 'Select Office',\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Select Office\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), allOffices ? allOffices.map(office => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: office.officeId,\n                children: office.officeName\n              }, office.officeId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            sx: {\n              alignSelf: 'center'\n            },\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"outlined\",\n              onClick: onSubmit,\n              sx: {\n                p: '14px'\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), allEmployees ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(UsersTable, {\n          error: error,\n          allEmployees: allEmployees,\n          allOffices: allOffices,\n          fetchData: allEmployeesFetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(PageHeaderContainer, {\n        sx: {\n          mt: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            m: 1\n          },\n          variant: \"h4\",\n          children: \"Offices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            variant: \"contained\",\n            onClick: handleAddOfficeModal,\n            children: \"Add Office\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), allOffices ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(OfficesTable, {\n            allOffices: allOffices,\n            error: allOfficesErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddOfficeModal, {\n          fetchData: allOfficesFetchData,\n          open: addOfficeModal,\n          close: handleAddOfficeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddEmployeeModal, {\n          open: addEmployeeModal,\n          close: handleAddEmployeeModal,\n          allOffices: allOffices,\n          fetchData: allEmployeesFetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(EmployeesPage, \"+8/NjE4x4sUiQ0O0gPjqVjiWCPY=\", false, function () {\n  return [useFetchData, useFetchData, useForm];\n});\n\n_c = EmployeesPage;\nexport default EmployeesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesPage\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/Pages/Employees/EmployeesPage.jsx"],"names":["React","useState","useContext","useEffect","AuthContext","Box","Button","Grid","TextField","ListSubheader","Typography","MenuItem","UsersTable","PageContainer","OfficesTable","AddEmployeeModal","AddOfficeModal","useFetchData","offices","employees","useForm","TextFieldSelect","ExportDataContext","CSVLink","DownloadIcon","PageHeaderContainer","EmployeesPage","addEmployeeModal","setAddEmployeeModal","addOfficeModal","setAddOfficeModal","office","setOffice","user","token","userAction","userId","id","headers","fileName","data","changeDataExport","state","allEmployees","error","setState","fetchData","allEmployeesFetchData","getAllEmployees","allOffices","allOfficesErr","allOfficesFetchData","getAllOffices","onChange","onSubmit","setFieldValue","values","searchCallback","officeId","search","searchEmployees","resultSearchEmployees","getEmployeesByParams","handleAddEmployeeModal","handleAddOfficeModal","m","textDecoration","color","mr","mt","event","target","value","map","officeName","alignSelf","p"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport {\n  Box,\n  Button,\n  Grid,\n  TextField,\n  ListSubheader,\n  Typography,\n  MenuItem,\n} from '@mui/material';\nimport UsersTable from './EmployeesTable';\nimport PageContainer from '../../components/PageContainer';\nimport OfficesTable from './OfficesTable';\nimport AddEmployeeModal from './AddEmployeeModal';\nimport AddOfficeModal from './AddOfficeModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport offices from '../../requests/offices';\nimport employees from './../../requests/employees';\nimport { useForm } from '../../hooks/useForm';\nimport TextFieldSelect from '../../components/TextFieldSelect';\nimport { ExportDataContext } from './../../context/DataExport';\nimport { CSVLink } from 'react-csv';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { PageHeaderContainer } from '../../styles/styledComponents';\n\nconst EmployeesPage = () => {\n  const [addEmployeeModal, setAddEmployeeModal] = useState(false);\n  const [addOfficeModal, setAddOfficeModal] = useState(false);\n  const [office, setOffice] = useState('');\n  const { user, token } = useContext(AuthContext);\n  const userAction = {\n    userId: user.id,\n    token: token,\n  };\n  const { headers, fileName, data, changeDataExport } =\n    useContext(ExportDataContext);\n\n  const {\n    state: allEmployees,\n    error,\n    setState,\n    fetchData: allEmployeesFetchData,\n  } = useFetchData(employees.getAllEmployees);\n\n  // console.log('getAllEmployees', allEmployees);\n  const {\n    state: allOffices,\n    error: allOfficesErr,\n    fetchData: allOfficesFetchData,\n  } = useFetchData(offices.getAllOffices);\n\n  const { onChange, onSubmit, setFieldValue, values } = useForm(\n    searchCallback,\n    {\n      officeId: '',\n      search: '',\n    }\n  );\n\n  const searchEmployees = async () => {\n    // console.log('values', values);\n    const resultSearchEmployees = await employees.getEmployeesByParams(\n      userAction,\n      values\n    );\n    setState(resultSearchEmployees);\n    // console.log('resultSearchEmployees', resultSearchEmployees);\n  };\n\n  function searchCallback() {\n    searchEmployees();\n  }\n\n  const handleAddEmployeeModal = () => setAddEmployeeModal(!addEmployeeModal);\n  const handleAddOfficeModal = () => setAddOfficeModal(!addOfficeModal);\n\n  useEffect(() => {\n    changeDataExport('Employees', allEmployees);\n  }, [allEmployees]);\n\n  return (\n    <>\n      <PageContainer>\n        <PageHeaderContainer>\n          <Typography sx={{ m: 1 }} variant=\"h4\">\n            Employees\n          </Typography>\n\n          <Box sx={{ m: 1 }}>\n            {fileName && headers && data ? (\n              <CSVLink\n                style={{ textDecoration: 'none', color: '#3F3FBE' }}\n                filename={fileName}\n                data={data}\n                headers={headers}\n              >\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ mr: 1 }}\n                >\n                  Export To Excel\n                </Button>\n              </CSVLink>\n            ) : null}\n            <Button\n              onClick={handleAddEmployeeModal}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Add Employee\n            </Button>\n          </Box>\n        </PageHeaderContainer>\n\n        <Box sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={8}>\n              <TextField\n                fullWidth\n                label=\"Search Employee\"\n                onChange={onChange}\n                value={values.search}\n                variant=\"outlined\"\n                name=\"search\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextFieldSelect\n                value={office}\n                onChange={event => {\n                  setFieldValue('officeId', event.target.value);\n                  setOffice(event.target.value);\n                }}\n                label={'Select Office'}\n              >\n                <MenuItem value=\"\">None</MenuItem>\n                <ListSubheader>Select Office</ListSubheader>\n                {allOffices\n                  ? allOffices.map(office => (\n                      <MenuItem key={office.officeId} value={office.officeId}>\n                        {office.officeName}\n                      </MenuItem>\n                    ))\n                  : null}\n              </TextFieldSelect>\n            </Grid>\n            <Grid sx={{ alignSelf: 'center' }} item xs={1}>\n              <Button\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={onSubmit}\n                sx={{ p: '14px' }}\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n\n        {allEmployees ? (\n          <Box sx={{ mt: 3 }}>\n            <UsersTable\n              error={error}\n              allEmployees={allEmployees}\n              allOffices={allOffices}\n              fetchData={allEmployeesFetchData}\n            />\n          </Box>\n        ) : null}\n\n        <PageHeaderContainer sx={{ mt: 5 }}>\n          <Typography sx={{ m: 1 }} variant=\"h4\">\n            Offices\n          </Typography>\n          <Box sx={{ m: 1 }}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={handleAddOfficeModal}\n            >\n              Add Office\n            </Button>\n          </Box>\n        </PageHeaderContainer>\n        {allOffices ? (\n          <>\n            <Box sx={{ mt: 3 }}>\n              <OfficesTable allOffices={allOffices} error={allOfficesErr} />\n            </Box>\n            <AddOfficeModal\n              fetchData={allOfficesFetchData}\n              open={addOfficeModal}\n              close={handleAddOfficeModal}\n            />\n            <AddEmployeeModal\n              open={addEmployeeModal}\n              close={handleAddEmployeeModal}\n              allOffices={allOffices}\n              fetchData={allEmployeesFetchData}\n            />\n          </>\n        ) : null}\n      </PageContainer>\n    </>\n  );\n};\n\nexport default EmployeesPage;\n"]},"metadata":{},"sourceType":"module"}