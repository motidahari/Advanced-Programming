{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/context/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport Notification from '../components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n    initialState.token = localStorage.getItem('jwtToken');\n  }\n}\n\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  token: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      // console.log('action', action);\n      // console.log('state', state);\n      return { ...state,\n        user: action.payload,\n        token: action.payload.token\n      };\n\n    case 'LOGOUT':\n      toast.success( /*#__PURE__*/_jsxDEV(Notification, {\n        text: 'logged Out'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this));\n      return { ...state,\n        user: null,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    // console.log('user', userData);\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      token: state.token,\n      login,\n      logout\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","toast","Notification","initialState","user","token","localStorage","getItem","decodedToken","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","state","action","type","payload","success","AuthProvider","props","dispatch","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,IAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpC,QAAMC,YAAY,GAAGR,SAAS,CAACM,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAA9B;;AAEA,MAAIC,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA9B,EAA0C;AACxCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACD,GAFD,MAEO;AACLT,IAAAA,YAAY,CAACC,IAAb,GAAoBI,YAApB;AACAL,IAAAA,YAAY,CAACE,KAAb,GAAqBC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAArB;AACD;AACF;;AAED,MAAMM,WAAW,gBAAGd,aAAa,CAAC;AAChCK,EAAAA,IAAI,EAAE,IAD0B;AAEhCC,EAAAA,KAAK,EAAE,IAFyB;AAGhCS,EAAAA,KAAK,EAAEC,QAAQ,IAAI,CAAE,CAHW;AAIhCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJgB,CAAD,CAAjC;;AAOA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE;AACA;AACA,aAAO,EACL,GAAGF,KADE;AAELd,QAAAA,IAAI,EAAEe,MAAM,CAACE,OAFR;AAGLhB,QAAAA,KAAK,EAAEc,MAAM,CAACE,OAAP,CAAehB;AAHjB,OAAP;;AAKF,SAAK,QAAL;AACEJ,MAAAA,KAAK,CAACqB,OAAN,eAAc,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,cAAd;AACA,aAAO,EACL,GAAGJ,KADE;AAELd,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF;AACE,aAAOa,KAAP;AAjBJ;AAmBD;;AAED,SAASK,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoB3B,UAAU,CAACmB,WAAD,EAAcd,YAAd,CAApC;;AAEA,WAASW,KAAT,CAAeC,QAAf,EAAyB;AACvB;AACAT,IAAAA,YAAY,CAACoB,OAAb,CAAqB,UAArB,EAAiCX,QAAQ,CAACV,KAA1C;AACAoB,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,OAAO,EAAEN;AAFF,KAAD,CAAR;AAID;;AACD,WAASC,MAAT,GAAkB;AAChBV,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAa,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLhB,MAAAA,IAAI,EAAEc,KAAK,CAACd,IADP;AAELC,MAAAA,KAAK,EAAEa,KAAK,CAACb,KAFR;AAGLS,MAAAA,KAHK;AAILE,MAAAA;AAJK,KADT;AAAA,OAOMQ;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3BQD,Y;;KAAAA,Y;AA6BT,SAASV,WAAT,EAAsBU,YAAtB","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport Notification from '../components/Notification';\n\nconst initialState = {\n  user: null,\n  token: null,\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n    initialState.token = localStorage.getItem('jwtToken');\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  token: null,\n  login: userData => {},\n  logout: () => {},\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      // console.log('action', action);\n      // console.log('state', state);\n      return {\n        ...state,\n        user: action.payload,\n        token: action.payload.token,\n      };\n    case 'LOGOUT':\n      toast.success(<Notification text={'logged Out'} />);\n      return {\n        ...state,\n        user: null,\n        token: null,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    // console.log('user', userData);\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData,\n    });\n  }\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        token: state.token,\n        login,\n        logout,\n      }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}