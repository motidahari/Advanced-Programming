{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/ProductsTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useMemo } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { ExportDataContext } from './../../context/DataExport';\nimport EditProductModal from './EditProductModal';\nimport DeleteProductModal from './DeleteProductModal';\nimport MoveProductModal from './MoveProductModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport locations from '../../requests/locations';\nimport { TableCell, TableRow, IconButton, Tooltip, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport moment from 'moment';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rows = [{\n  id: 1,\n  col1: 'Hello',\n  col2: 'World'\n}, {\n  id: 2,\n  col1: 'DataGridPro',\n  col2: 'is Awesome'\n}, {\n  id: 3,\n  col1: 'MUI',\n  col2: 'is Amazing'\n}]; // const kolumns = [\n//   { field: 'col1', headerName: 'Column 1', width: 150 },\n//   { field: 'col2', headerName: 'Column 2', width: 150 },\n// ];\n\nconst StyledDateTableCell = {\n  minWidth: 90\n}; // let columns = [];\n\nconst ProductsTable = _ref => {\n  _s();\n\n  let {\n    fetchData,\n    allproducts,\n    error\n  } = _ref;\n  // const rows = allproducts.map((item, i) => (item[`id`] = i));\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [moveModal, setMoveModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    changeDataExport\n  } = useContext(ExportDataContext);\n  const {\n    state: allLocations,\n    setState: setLocationState\n  } = useFetchData(locations.getAllLocations); // if (user?.permission !== 'Viewer') {\n  //   columns = [\n  //     { field: 'productName', headerName: 'productName' },\n  //     { field: 'serialNumber', headerName: 'serialNumber' },\n  //     { field: 'PONumber', headerName: 'PONumber' },\n  //     { field: 'locationName', headerName: 'locationName' },\n  //     { field: 'date', headerName: 'date' },\n  //     { field: 'warranty', headerName: 'warranty' },\n  //     { field: 'Actions', headerName: 'Actions' },\n  //   ];\n  // } else {\n  //   columns = [\n  //     { field: 'productName', headerName: 'productName' },\n  //     { field: 'serialNumber', headerName: 'serialNumber' },\n  //     { field: 'PONumber', headerName: 'PONumber' },\n  //     { field: 'locationName', headerName: 'locationName' },\n  //     { field: 'date', headerName: 'date' },\n  //     { field: 'warranty', headerName: 'warranty' },\n  //   ];\n  // }\n\n  const columns = useMemo(() => [{\n    field: 'productName',\n    headerName: 'productName',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        children: row.row.productName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    field: 'serialNumber',\n    headerName: 'serialNumber',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        children: row.row.serialNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    field: 'PONumber',\n    headerName: 'PONumber',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        children: row.row.PONumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    field: 'locationName',\n    headerName: 'locationName',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        children: row.row.locationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    field: 'date',\n    headerName: 'date',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        children: row.row.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    field: 'warranty',\n    headerName: 'warranty',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"secondary\",\n        children: row.row.warranty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    field: 'Actions',\n    headerName: 'Actions',\n    sortable: false,\n    flex: 0.4,\n    minWidth: 100,\n    renderCell: row => {\n      // console.log('row', row);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Edit\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              handleEditModal(row.row);\n            },\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              handleDeleteModal(row.row);\n            },\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Move\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              handleMoveModal(row.row);\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }\n  }], []);\n\n  const handleDeleteModal = product => {\n    setDeleteModal(!deleteModal);\n    setSelectedProduct(product);\n  };\n\n  const handleMoveModal = product => {\n    setMoveModal(!moveModal);\n    setSelectedProduct(product);\n  };\n\n  const handleEditModal = product => {\n    setEditModal(!editModal);\n    setSelectedProduct(product);\n  };\n\n  useEffect(() => {\n    changeDataExport('Products', allproducts);\n  }, [allproducts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: allproducts,\n      columns: columns,\n      getRowId: row => row.productId,\n      disableColumnFilter: true,\n      disableColumnMenu: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductsTable, \"8djbnyXJdQucKIbvmE21cpp/gBs=\", false, function () {\n  return [useFetchData];\n});\n\n_c = ProductsTable;\nexport default ProductsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsTable\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventoryProject/client/src/Pages/Products/ProductsTable.jsx"],"names":["React","useState","useContext","useEffect","useMemo","AuthContext","ExportDataContext","EditProductModal","DeleteProductModal","MoveProductModal","useFetchData","locations","TableCell","TableRow","IconButton","Tooltip","Typography","EditIcon","DeleteIcon","ArrowForwardIcon","moment","StyledTable","TableSkeleton","DataGrid","GridRowsProp","GridColDef","rows","id","col1","col2","StyledDateTableCell","minWidth","ProductsTable","fetchData","allproducts","error","deleteModal","setDeleteModal","editModal","setEditModal","moveModal","setMoveModal","selectedProduct","setSelectedProduct","user","changeDataExport","state","allLocations","setState","setLocationState","getAllLocations","columns","field","headerName","sortable","flex","renderCell","row","productName","serialNumber","PONumber","locationName","date","warranty","handleEditModal","handleDeleteModal","handleMoveModal","product","productId"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useMemo } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { ExportDataContext } from './../../context/DataExport';\nimport EditProductModal from './EditProductModal';\nimport DeleteProductModal from './DeleteProductModal';\nimport MoveProductModal from './MoveProductModal';\nimport { useFetchData } from '../../hooks/useFetchData';\nimport locations from '../../requests/locations';\nimport {\n  TableCell,\n  TableRow,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport moment from 'moment';\nimport StyledTable from '../../components/StyledTable';\nimport TableSkeleton from '../../components/TableSkeleton';\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\n\nconst rows = [\n  { id: 1, col1: 'Hello', col2: 'World' },\n  { id: 2, col1: 'DataGridPro', col2: 'is Awesome' },\n  { id: 3, col1: 'MUI', col2: 'is Amazing' },\n];\n\n// const kolumns = [\n//   { field: 'col1', headerName: 'Column 1', width: 150 },\n//   { field: 'col2', headerName: 'Column 2', width: 150 },\n// ];\n\nconst StyledDateTableCell = { minWidth: 90 };\n// let columns = [];\n\nconst ProductsTable = ({ fetchData, allproducts, error }) => {\n  // const rows = allproducts.map((item, i) => (item[`id`] = i));\n\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [moveModal, setMoveModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const { user } = useContext(AuthContext);\n  const { changeDataExport } = useContext(ExportDataContext);\n  const { state: allLocations, setState: setLocationState } = useFetchData(\n    locations.getAllLocations\n  );\n  // if (user?.permission !== 'Viewer') {\n  //   columns = [\n  //     { field: 'productName', headerName: 'productName' },\n  //     { field: 'serialNumber', headerName: 'serialNumber' },\n  //     { field: 'PONumber', headerName: 'PONumber' },\n  //     { field: 'locationName', headerName: 'locationName' },\n  //     { field: 'date', headerName: 'date' },\n  //     { field: 'warranty', headerName: 'warranty' },\n  //     { field: 'Actions', headerName: 'Actions' },\n  //   ];\n  // } else {\n  //   columns = [\n  //     { field: 'productName', headerName: 'productName' },\n  //     { field: 'serialNumber', headerName: 'serialNumber' },\n  //     { field: 'PONumber', headerName: 'PONumber' },\n  //     { field: 'locationName', headerName: 'locationName' },\n  //     { field: 'date', headerName: 'date' },\n  //     { field: 'warranty', headerName: 'warranty' },\n  //   ];\n  // }\n  const columns = useMemo(\n    () => [\n      {\n        field: 'productName',\n        headerName: 'productName',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return (\n            <Typography color=\"secondary\">{row.row.productName}</Typography>\n          );\n        },\n      },\n      {\n        field: 'serialNumber',\n        headerName: 'serialNumber',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return (\n            <Typography color=\"secondary\">{row.row.serialNumber}</Typography>\n          );\n        },\n      },\n      {\n        field: 'PONumber',\n        headerName: 'PONumber',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return <Typography color=\"secondary\">{row.row.PONumber}</Typography>;\n        },\n      },\n      {\n        field: 'locationName',\n        headerName: 'locationName',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return (\n            <Typography color=\"secondary\">{row.row.locationName}</Typography>\n          );\n        },\n      },\n      {\n        field: 'date',\n        headerName: 'date',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return <Typography color=\"secondary\">{row.row.date}</Typography>;\n        },\n      },\n      {\n        field: 'warranty',\n        headerName: 'warranty',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return <Typography color=\"secondary\">{row.row.warranty}</Typography>;\n        },\n      },\n      {\n        field: 'Actions',\n        headerName: 'Actions',\n        sortable: false,\n        flex: 0.4,\n        minWidth: 100,\n        renderCell: row => {\n          // console.log('row', row);\n          return (\n            <>\n              <Tooltip title=\"Edit\">\n                <IconButton\n                  onClick={() => {\n                    handleEditModal(row.row);\n                  }}\n                >\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  onClick={() => {\n                    handleDeleteModal(row.row);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Move\">\n                <IconButton\n                  onClick={() => {\n                    handleMoveModal(row.row);\n                  }}\n                >\n                  <ArrowForwardIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const handleDeleteModal = product => {\n    setDeleteModal(!deleteModal);\n    setSelectedProduct(product);\n  };\n  const handleMoveModal = product => {\n    setMoveModal(!moveModal);\n    setSelectedProduct(product);\n  };\n  const handleEditModal = product => {\n    setEditModal(!editModal);\n    setSelectedProduct(product);\n  };\n\n  useEffect(() => {\n    changeDataExport('Products', allproducts);\n  }, [allproducts]);\n\n  return (\n    <>\n      <DataGrid\n        rows={allproducts}\n        columns={columns}\n        getRowId={row => row.productId}\n        disableColumnFilter\n        disableColumnMenu\n      />\n\n      {/* {allproducts ? (\n        <StyledTable columns={columns}>\n          {allproducts.length > 0 ? (\n            allproducts.map(product => (\n              <TableRow key={product.productId}>\n                <TableCell>{product.productName}</TableCell>\n                <TableCell>{product.serialNumber}</TableCell>\n                <TableCell>{product.PONumber}</TableCell>\n                <TableCell>{product.locationName}</TableCell>\n                <TableCell sx={StyledDateTableCell}>\n                  {moment(product.date).format('DD-MM-YYYY')}\n                </TableCell>\n                <TableCell sx={StyledDateTableCell}>\n                  {moment(product.warranty).format('DD-MM-YYYY')}\n                </TableCell>\n                {user?.permission !== 'Viewer' ? (\n                  <TableCell>\n                    <Tooltip title=\"Edit\">\n                      <IconButton\n                        onClick={() => {\n                          handleEditModal(product);\n                        }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        onClick={() => {\n                          handleDeleteModal(product);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Move\">\n                      <IconButton\n                        onClick={() => {\n                          handleMoveModal(product);\n                        }}\n                      >\n                        <ArrowForwardIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                ) : null}\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell>No results</TableCell>\n            </TableRow>\n          )}\n        </StyledTable>\n      ) : error ? (\n        <Typography sx={{ m: 1 }} variant=\"h4\">\n          error fetching getAllProducts\n        </Typography>\n      ) : (\n        <TableSkeleton columns={columns} />\n      )}\n\n      {selectedProduct ? (\n        <>\n          <EditProductModal\n            fetchData={fetchData}\n            product={selectedProduct}\n            allLocations={allLocations}\n            open={editModal}\n            close={handleEditModal}\n          />\n          <DeleteProductModal\n            fetchData={fetchData}\n            product={selectedProduct}\n            open={deleteModal}\n            close={handleDeleteModal}\n          />\n          <MoveProductModal\n            fetchData={fetchData}\n            product={selectedProduct}\n            allLocations={allLocations}\n            open={moveModal}\n            close={handleMoveModal}\n          />\n        </>\n      ) : null} */}\n    </>\n  );\n};\n\nexport default ProductsTable;\n"]},"metadata":{},"sourceType":"module"}