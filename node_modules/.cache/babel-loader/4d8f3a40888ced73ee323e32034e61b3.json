{"ast":null,"code":"var _jsxFileName = \"/Users/motidahari/projects/inventory/client/src/context/DataExport.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport React, { useReducer, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = /*#__PURE__*/createContext({\n  fileName: 'null.csv',\n  headers: null,\n  data: null\n});\nconst ExportDataContext = /*#__PURE__*/createContext({\n  fileName: 'Example.csv',\n  headers: [{\n    label: \"First Name\",\n    key: \"firstname\"\n  }, {\n    label: \"Last Name\",\n    key: \"lastname\"\n  }, {\n    label: \"Email\",\n    key: \"email\"\n  }],\n  data: [{\n    firstname: \"Ahmed\",\n    lastname: \"Tomi\",\n    email: \"ah@smthing.co.com\"\n  }, {\n    firstname: \"Raed\",\n    lastname: \"Labes\",\n    email: \"rl@smthing.co.com\"\n  }, {\n    firstname: \"Yezzi\",\n    lastname: \"Min l3b\",\n    email: \"ymin@cocococo.com\"\n  }],\n  changeDataExport: (page, data, fileName) => {}\n});\n\nfunction exportReducer(state, action) {\n  const {\n    data,\n    type\n  } = action;\n\n  switch (action.type) {\n    case 'Products':\n      return { ...state,\n        data: data === null || data === void 0 ? void 0 : data.map(product => {\n          return { ...product,\n            warranty: moment(product.warranty).format('YYYY-MM-DD'),\n            date: moment(product.date).format('YYYY-MM-DD')\n          };\n        }),\n        fileName: `${type}.csv`,\n        headers: [{\n          label: 'PONumber',\n          key: 'PONumber'\n        }, {\n          label: 'countryName',\n          key: 'countryName'\n        }, {\n          label: 'date',\n          key: 'date'\n        }, {\n          label: 'locationName',\n          key: 'locationName'\n        }, {\n          label: 'productName',\n          key: 'productName'\n        }, {\n          label: 'serialNumber',\n          key: 'serialNumber'\n        }, {\n          label: 'warranty',\n          key: 'warranty'\n        }]\n      };\n\n    case 'Gaps':\n      return { ...state,\n        data: data,\n        fileName: `${type}.csv`,\n        headers: [{\n          label: 'productName',\n          key: 'productName'\n        }, {\n          label: 'quantityInLocation',\n          key: 'quantityInLocation'\n        }, {\n          label: 'quantity',\n          key: 'quantity'\n        }, {\n          label: 'gap',\n          key: 'gap'\n        }]\n      };\n\n    case 'AmplifiersTraffic':\n      return { ...state,\n        data: data === null || data === void 0 ? void 0 : data.map(product => {\n          return { ...product,\n            warranty: moment(product.warranty).format('YYYY-MM-DD'),\n            date: moment(product.date).format('YYYY-MM-DD')\n          };\n        }),\n        fileName: `${type}.csv`,\n        headers: [{\n          label: 'PONumber',\n          key: 'PONumber'\n        }, {\n          label: 'action',\n          key: 'action'\n        }, {\n          label: 'countryName',\n          key: 'countryName'\n        }, {\n          label: 'date',\n          key: 'date'\n        }, {\n          label: 'description',\n          key: 'description'\n        }, {\n          label: 'email',\n          key: 'email'\n        }, {\n          label: 'locationName',\n          key: 'locationName'\n        }, {\n          label: 'name',\n          key: 'name'\n        }, {\n          label: 'productName',\n          key: 'productName'\n        }, {\n          label: 'serialNumber',\n          key: 'serialNumber'\n        }, {\n          label: 'status',\n          key: 'status'\n        }, {\n          label: 'storage',\n          key: 'storage'\n        }, {\n          label: 'warranty',\n          key: 'warranty'\n        }]\n      };\n\n    case 'AmplifiersMonitoring':\n      return { ...state,\n        data: data === null || data === void 0 ? void 0 : data.map(product => {\n          return { ...product,\n            warranty: moment(product.warranty).format('YYYY-MM-DD'),\n            date: moment(product.date).format('YYYY-MM-DD')\n          };\n        }),\n        fileName: `${type}.csv`,\n        headers: [{\n          label: 'PONumber',\n          key: 'PONumber'\n        }, {\n          label: 'action',\n          key: 'action'\n        }, {\n          label: 'countryName',\n          key: 'countryName'\n        }, {\n          label: 'date',\n          key: 'date'\n        }, {\n          label: 'description',\n          key: 'description'\n        }, {\n          label: 'email',\n          key: 'email'\n        }, {\n          label: 'locationName',\n          key: 'locationName'\n        }, {\n          label: 'name',\n          key: 'name'\n        }, {\n          label: 'productName',\n          key: 'productName'\n        }, {\n          label: 'serialNumber',\n          key: 'serialNumber'\n        }, {\n          label: 'status',\n          key: 'status'\n        }, {\n          label: 'storage',\n          key: 'storage'\n        }, {\n          label: 'warranty',\n          key: 'warranty'\n        }]\n      };\n\n    case 'Logs':\n      return { ...state,\n        data: data === null || data === void 0 ? void 0 : data.map(product => {\n          return { ...product,\n            warranty: moment(product.warranty).format('YYYY-MM-DD'),\n            date: moment(product.date).format('YYYY-MM-DD')\n          };\n        }),\n        fileName: `${type}.csv`,\n        headers: [{\n          label: 'PONumber',\n          key: 'PONumber'\n        }, {\n          label: 'action',\n          key: 'action'\n        }, {\n          label: 'countryName',\n          key: 'countryName'\n        }, {\n          label: 'date',\n          key: 'date'\n        }, {\n          label: 'description',\n          key: 'description'\n        }, {\n          label: 'email',\n          key: 'email'\n        }, {\n          label: 'locationName',\n          key: 'locationName'\n        }, {\n          label: 'name',\n          key: 'name'\n        }, {\n          label: 'productName',\n          key: 'productName'\n        }, {\n          label: 'serialNumber',\n          key: 'serialNumber'\n        }, {\n          label: 'storage',\n          key: 'storage'\n        }, {\n          label: 'warranty',\n          key: 'warranty'\n        }]\n      };\n\n    case 'Employees':\n      return { ...state,\n        data: data,\n        fileName: `${type}.csv`,\n        headers: [{\n          label: 'officeName',\n          key: 'officeName'\n        }, {\n          label: 'employeeName',\n          key: 'employeeName'\n        }, {\n          label: 'screen',\n          key: 'screen'\n        }, {\n          label: 'tv',\n          key: 'tv'\n        }, {\n          label: 'dockingStation',\n          key: 'dockingStation'\n        }, {\n          label: 'ipPhone',\n          key: 'ipPhone'\n        }, {\n          label: 'desktopComputer',\n          key: 'desktopComputer'\n        }, {\n          label: 'laptop',\n          key: 'laptop'\n        }, {\n          label: 'printer',\n          key: 'printer'\n        }, {\n          label: 'headset',\n          key: 'headset'\n        }, {\n          label: 'webCamera',\n          key: 'webCamera'\n        }]\n      };\n\n    default:\n      // console.log('default');\n      return state;\n  }\n}\n\nfunction ExportDataProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(exportReducer, ExportDataContext);\n\n  function changeDataExport(fileName, data) {\n    dispatch({\n      type: fileName,\n      data: data\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ExportDataContext.Provider, {\n    value: {\n      state,\n      fileName: state.fileName,\n      headers: state.headers,\n      data: state.data,\n      changeDataExport\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExportDataProvider, \"X22y9/1nqF/vcnEXXmTtivWKfqk=\");\n\n_c = ExportDataProvider;\nexport { ExportDataContext, ExportDataProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportDataProvider\");","map":{"version":3,"sources":["/Users/motidahari/projects/inventory/client/src/context/DataExport.js"],"names":["moment","React","useReducer","createContext","initialState","fileName","headers","data","ExportDataContext","label","key","firstname","lastname","email","changeDataExport","page","exportReducer","state","action","type","map","product","warranty","format","date","ExportDataProvider","props","dispatch"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport React, { useReducer, createContext } from 'react';\n\nexport const initialState = createContext({\n    fileName: 'null.csv',\n    headers: null,\n    data: null\n});\nconst ExportDataContext = createContext({\n    fileName: 'Example.csv',\n    headers: [\n        { label: \"First Name\", key: \"firstname\" },\n        { label: \"Last Name\", key: \"lastname\" },\n        { label: \"Email\", key: \"email\" }\n    ],\n    data: [\n        { firstname: \"Ahmed\", lastname: \"Tomi\", email: \"ah@smthing.co.com\" },\n        { firstname: \"Raed\", lastname: \"Labes\", email: \"rl@smthing.co.com\" },\n        { firstname: \"Yezzi\", lastname: \"Min l3b\", email: \"ymin@cocococo.com\" }\n    ],\n    changeDataExport: (page, data, fileName) => { },\n});\nfunction exportReducer(state, action) {\n    const { data, type } = action;\n\n    switch (action.type) {\n        case 'Products':\n            return {\n                ...state,\n                data: data?.map((product) => {\n                    return {\n                        ...product,\n                        warranty: moment(product.warranty).format('YYYY-MM-DD'),\n                        date: moment(product.date).format('YYYY-MM-DD')\n                    }\n                }),\n                fileName: `${type}.csv`,\n                headers: [\n                    { label: 'PONumber', key: 'PONumber' },\n                    { label: 'countryName', key: 'countryName' },\n                    { label: 'date', key: 'date' },\n                    { label: 'locationName', key: 'locationName' },\n                    { label: 'productName', key: 'productName' },\n                    { label: 'serialNumber', key: 'serialNumber' },\n                    { label: 'warranty', key: 'warranty' },\n                ]\n            };\n        case 'Gaps':\n            return {\n                ...state,\n                data: data,\n                fileName: `${type}.csv`,\n                headers: [\n                    { label: 'productName', key: 'productName' },\n                    { label: 'quantityInLocation', key: 'quantityInLocation' },\n                    { label: 'quantity', key: 'quantity' },\n                    { label: 'gap', key: 'gap' },\n                ]\n            };\n        case 'AmplifiersTraffic':\n            return {\n                ...state,\n                data: data?.map((product) => {\n                    return {\n                        ...product,\n                        warranty: moment(product.warranty).format('YYYY-MM-DD'),\n                        date: moment(product.date).format('YYYY-MM-DD')\n                    }\n                }),\n                fileName: `${type}.csv`,\n                headers: [\n                    { label: 'PONumber', key: 'PONumber' },\n                    { label: 'action', key: 'action' },\n                    { label: 'countryName', key: 'countryName' },\n                    { label: 'date', key: 'date' },\n                    { label: 'description', key: 'description' },\n                    { label: 'email', key: 'email' },\n                    { label: 'locationName', key: 'locationName' },\n                    { label: 'name', key: 'name' },\n                    { label: 'productName', key: 'productName' },\n                    { label: 'serialNumber', key: 'serialNumber' },\n                    { label: 'status', key: 'status' },\n                    { label: 'storage', key: 'storage' },\n                    { label: 'warranty', key: 'warranty' },\n                ]\n            };\n        case 'AmplifiersMonitoring':\n            return {\n                ...state,\n                data: data?.map((product) => {\n                    return {\n                        ...product,\n                        warranty: moment(product.warranty).format('YYYY-MM-DD'),\n                        date: moment(product.date).format('YYYY-MM-DD')\n                    }\n                }),\n                fileName: `${type}.csv`,\n                headers: [\n                    { label: 'PONumber', key: 'PONumber' },\n                    { label: 'action', key: 'action' },\n                    { label: 'countryName', key: 'countryName' },\n                    { label: 'date', key: 'date' },\n                    { label: 'description', key: 'description' },\n                    { label: 'email', key: 'email' },\n                    { label: 'locationName', key: 'locationName' },\n                    { label: 'name', key: 'name' },\n                    { label: 'productName', key: 'productName' },\n                    { label: 'serialNumber', key: 'serialNumber' },\n                    { label: 'status', key: 'status' },\n                    { label: 'storage', key: 'storage' },\n                    { label: 'warranty', key: 'warranty' },\n                ]\n            };\n        case 'Logs':\n            return {\n                ...state,\n                data: data?.map((product) => {\n                    return {\n                        ...product,\n                        warranty: moment(product.warranty).format('YYYY-MM-DD'),\n                        date: moment(product.date).format('YYYY-MM-DD')\n                    }\n                }),\n                fileName: `${type}.csv`,\n                headers: [\n                    { label: 'PONumber', key: 'PONumber' },\n                    { label: 'action', key: 'action' },\n                    { label: 'countryName', key: 'countryName' },\n                    { label: 'date', key: 'date' },\n                    { label: 'description', key: 'description' },\n                    { label: 'email', key: 'email' },\n                    { label: 'locationName', key: 'locationName' },\n                    { label: 'name', key: 'name' },\n                    { label: 'productName', key: 'productName' },\n                    { label: 'serialNumber', key: 'serialNumber' },\n                    { label: 'storage', key: 'storage' },\n                    { label: 'warranty', key: 'warranty' },\n                ]\n            };\n\n        case 'Employees':\n            return {\n                ...state,\n                data: data,\n                fileName: `${type}.csv`,\n                headers: [\n                    { label: 'officeName', key: 'officeName' },\n                    { label: 'employeeName', key: 'employeeName' },\n                    { label: 'screen', key: 'screen' },\n                    { label: 'tv', key: 'tv' },\n                    { label: 'dockingStation', key: 'dockingStation' },\n                    { label: 'ipPhone', key: 'ipPhone' },\n                    { label: 'desktopComputer', key: 'desktopComputer' },\n                    { label: 'laptop', key: 'laptop' },\n                    { label: 'printer', key: 'printer' },\n                    { label: 'headset', key: 'headset' },\n                    { label: 'webCamera', key: 'webCamera' },\n                ]\n            };\n        default:\n            // console.log('default');\n            return state;\n    }\n}\n\nfunction ExportDataProvider(props) {\n    const [state, dispatch] = useReducer(exportReducer, ExportDataContext);\n    function changeDataExport(fileName, data) {\n        dispatch({\n            type: fileName,\n            data: data,\n        });\n    }\n    return (\n        <ExportDataContext.Provider\n            value={{ state, fileName: state.fileName, headers: state.headers, data: state.data, changeDataExport }}\n            {...props}\n        />\n    );\n}\n\nexport { ExportDataContext, ExportDataProvider };\n"]},"metadata":{},"sourceType":"module"}